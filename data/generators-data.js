// Words
const negativeAdjectives = [
  `Abhorrent`,
  `Abject`,
  `Abnormal`,
  `Abrasive`,
  `Abrupt`,
  `Absent`,
  `Absentminded`,
  `Absurd`,
  `Abusive`,
  `Abysmal`,
  `Accidental`,
  `Acerbic`,
  `Aching`,
  `Acrimonious`,
  `Adversarial`,
  `Afraid`,
  `Aggravating`,
  `Aggressive`,
  `Agonizing`,
  `Aimless`,
  `Alarming`,
  `Aloof`,
  `Anaemic`,
  `Angry`,
  `Annoying`,
  `Antagonistic`,
  `Antiquated`,
  `Appalling`,
  `Apprehensive`,
  `Argumentative`,
  `Arrogant`,
  `Artificial`,
  `Artless`,
  `Ashamed`,
  `Astringent`,
  `Atrocious`,
  `Awful`,
  `Awkward`,
  `Babbling`,
  `Backhanded`,
  `Bacterial`,
  `Bad`,
  `Baffled`,
  `Baffling`,
  `Barbaric`,
  `Barbarous`,
  `Barren`,
  `Basic`,
  `Battered`,
  `Batty`,
  `Bawling`,
  `Beady`,
  `Befuddled`,
  `Belching`,
  `Belligerent`,
  `Berserk`,
  `Betrayed`,
  `Bewildered`,
  `Bewitched`,
  `Biased`,
  `Bigoted`,
  `Biting`,
  `Bitter`,
  `Bizarre`,
  `Bland`,
  `Blank`,
  `Blaring`,
  `Blasphemous`,
  `Bleak`,
  `Bleary`,
  `Blind`,
  `Blistering`,
  `Bloated`,
  `Bloodied`,
  `Bloodthirsty`,
  `Bloody`,
  `Blue`,
  `Blundering`,
  `Blunt`,
  `Blurred`,
  `Blurry`,
  `Boastful`,
  `Bookish`,
  `Boorish`,
  `Bored`,
  `Boring`,
  `Bossy`,
  `Bothered`,
  `Brainless`,
  `Brash`,
  `Brassy`,
  `Breakable`,
  `Brisk`,
  `Bristly`,
  `Broken`,
  `Brooding`,
  `Bruised`,
  `Brutal`,
  `Brutish`,
  `Bulky`,
  `Bumpy`,
  `Bungling`,
  `Bureaucratic`,
  `Busiest`,
  `Caged`,
  `Cagey`,
  `Callous`,
  `Cancelled`,
  `Cancerous`,
  `Cantankerous`,
  `Capricious`,
  `Captive`,
  `Careless`,
  `Carsick`,
  `Catastrophic`,
  `Catatonic`,
  `Caustic`,
  `Cavalier`,
  `Certifiable`,
  `Challenged`,
  `Challenging`,
  `Chauvinistic`,
  `Cheap`,
  `Cheerless`,
  `Chemical`,
  `Chicken`,
  `Childish`,
  `Chilling`,
  `Chilly`,
  `Choking`,
  `Choppy`,
  `Chubby`,
  `Chunky`,
  `Clammy`,
  `Clamouring`,
  `Clashing`,
  `Clingy`,
  `Clinical`,
  `Cliquish`,
  `Clogged`,
  `Cloistered`,
  `Clownish`,
  `Clueless`,
  `Clumsy`,
  `Cluttered`,
  `Coarse`,
  `Cockamamie`,
  `Cocky`,
  `Coercive`,
  `Cold`,
  `Cold-hearted`,
  `Colourless`,
  `Combative`,
  `Commercial`,
  `Common`,
  `Complacent`,
  `Complaining`,
  `Complicated`,
  `Compulsive`,
  `Compulsory`,
  `Conceited`,
  `Concerning`,
  `Condemned`,
  `Condescending`,
  `Conditional`,
  `Conflicted`,
  `Conflicting`,
  `Confounded`,
  `Confused`,
  `Confusing`,
  `Congested`,
  `Conspicuous`,
  `Constrictive`,
  `Contagious`,
  `Contemptible`,
  `Contemptuous`,
  `Contradicting`,
  `Contradictory`,
  `Contrarian`,
  `Contrary`,
  `Contrite`,
  `Controllable`,
  `Controlling`,
  `Controversial`,
  `Convoluted`,
  `Cornered`,
  `Corny`,
  `Corporate`,
  `Corrosive`,
  `Corrupt`,
  `Corrupting`,
  `Corruptive`,
  `Costly`,
  `Cowardly`,
  `Cowering`,
  `Coy`,
  `Crabby`,
  `Cracked`,
  `Crafty`,
  `Crammed`,
  `Cramped`,
  `Cranky`,
  `Crass`,
  `Craven`,
  `Crazy`,
  `Creaky`,
  `Creeping`,
  `Creepy`,
  `Crestfallen`,
  `Criminal`,
  `Crippling`,
  `Critical`,
  `Crooked`,
  `Cross`,
  `Crotchety`,
  `Crowded`,
  `Crude`,
  `Cruel`,
  `Crumbling`,
  `Crumbly`,
  `Crumply`,
  `Crushable`,
  `Crushed`,
  `Crusty`,
  `Crying`,
  `Cryptic`,
  `Culpable`,
  `Cumbersome`,
  `Cursed`,
  `Curt`,
  `Cutting`,
  `Cynical`,
  `Daffy`,
  `Daft`,
  `Damaged`,
  `Damaging`,
  `Damp`,
  `Dangerous`,
  `Dark`,
  `Daunting`,
  `Dawdling`,
  `Dazed`,
  `Deadly`,
  `Deafening`,
  `Decayed`,
  `Decaying`,
  `Deceitful`,
  `Deceivable`,
  `Deceiving`,
  `Deceptive`,
  `Decimated`,
  `Decipherable`,
  `Declining`,
  `Decrepit`,
  `Defeated`,
  `Defective`,
  `Defenseless`,
  `Defensive`,
  `Defiant`,
  `Deficient`,
  `Deformed`,
  `Degenerative`,
  `Degraded`,
  `Dejected`,
  `Delinquent`,
  `Delirious`,
  `Deluded`,
  `Demanding`,
  `Demented`,
  `Demonic`,
  `Deniable`,
  `Dense`,
  `Dependent`,
  `Deplorable`,
  `Depraved`,
  `Depressed`,
  `Depressing`,
  `Depressive`,
  `Deprived`,
  `Deranged`,
  `Derivative`,
  `Derogative`,
  `Derogatory`,
  `Deserted`,
  `Desolate`,
  `Despairing`,
  `Desperate`,
  `Despicable`,
  `Despised`,
  `Despondent`,
  `Destroyed`,
  `Destructive`,
  `Detached`,
  `Detestable`,
  `Detrimental`,
  `Devastated`,
  `Devastating`,
  `Devious`,
  `Diabolical`,
  `Difficult`,
  `Digressive`,
  `Dilapidated`,
  `Dim`,
  `Diminishing`,
  `Diminutive`,
  `Dingy`,
  `Dire`,
  `Dirty`,
  `Disadvantaged`,
  `Disadvantageous`,
  `Disaffected`,
  `Disagreeable`,
  `Disappearing`,
  `Disappointed`,
  `Disappointing`,
  `Disapproving`,
  `Disastrous`,
  `Discarded`,
  `Disconnected`,
  `Discontented`,
  `Discordant`,
  `Discouraged`,
  `Discouraging`,
  `Discourteous`,
  `Discredited`,
  `Discreet`,
  `Discriminatory`,
  `Disdainful`,
  `Diseased`,
  `Disenchanted`,
  `Disgraceful`,
  `Disgruntled`,
  `Disgusted`,
  `Disgusting`,
  `Disheartened`,
  `Disheartening`,
  `Dishonest`,
  `Dishonorable`,
  `Disillusioned`,
  `Disinclined`,
  `Disingenuous`,
  `Disinterested`,
  `Disjointed`,
  `Dislikeable`,
  `Disliked`,
  `Disloyal`,
  `Dismal`,
  `Dismissive`,
  `Disobedient`,
  `Disorderly`,
  `Disorganized`,
  `Disparaging`,
  `Dispassionate`,
  `Dispensable`,
  `Displeased`,
  `Displeasing`,
  `Disposable`,
  `Disproportionate`,
  `Disproved`,
  `Disputed`,
  `Disreputable`,
  `Disrespectful`,
  `Disruptive`,
  `Dissatisfied`,
  `Dissimilar`,
  `Distant`,
  `Distasteful`,
  `Distracted`,
  `Distraught`,
  `Distressed`,
  `Distressing`,
  `Distrustful`,
  `Disturbed`,
  `Disturbing`,
  `Divided`,
  `Divisive`,
  `Dizzy`,
  `Domineering`,
  `Doubtful`,
  `Doubting`,
  `Dowdy`,
  `Down`,
  `Drab`,
  `Drained`,
  `Dramatic`,
  `Drastic`,
  `Dreaded`,
  `Dreadful`,
  `Dreary`,
  `Dripping`,
  `Droll`,
  `Drooping`,
  `Droopy`,
  `Drowsy`,
  `Drunk`,
  `Dry`,
  `Dubious`,
  `Dulcet`,
  `Dull`,
  `Duplicitous`,
  `Dusty`,
  `Dwindling`,
  `Dysfunctional`,
  `Eerie`,
  `Egocentric`,
  `Egomaniacal`,
  `Egotistical`,
  `Emaciated`,
  `Embarrassed`,
  `Embarrassing`,
  `Embittered`,
  `Embroiled`,
  `Emotional`,
  `Emotionless`,
  `Empty`,
  `Encrusted`,
  `Endangered`,
  `Enraged`,
  `Envious`,
  `Erasable`,
  `Eroding`,
  `Errant`,
  `Erratic`,
  `Erroneous`,
  `Estranged`,
  `Evasive`,
  `Evil`,
  `Exacerbating`,
  `Exasperated`,
  `Exasperating`,
  `Excessive`,
  `Excruciating`,
  `Exhausting`,
  `Expendable`,
  `Expired`,
  `Exploitative`,
  `Exploited`,
  `Explosive`,
  `Exposed`,
  `Expressionless`,
  `Extraneous`,
  `Extreme`,
  `Facetious`,
  `Faded`,
  `Failed`,
  `Faint`,
  `Faithless`,
  `Fallacious`,
  `Falsified`,
  `Faltering`,
  `Famished`,
  `Fanatical`,
  `Fatal`,
  `Fatigued`,
  `Faulty`,
  `Fawning`,
  `Feared`,
  `Fearful`,
  `Fearsome`,
  `Feckless`,
  `Feeble`,
  `Feebleminded`,
  `Feigned`,
  `Felonious`,
  `Fetid`,
  `Feverish`,
  `Fidgeting`,
  `Fidgety`,
  `Fiendish`,
  `Filmy`,
  `Filtered`,
  `Filthy`,
  `Finicky`,
  `Fishy`,
  `Flaky`,
  `Flat`,
  `Flavourless`,
  `Flawed`,
  `Fleeting`,
  `Flimsy`,
  `Flippant`,
  `Floppy`,
  `Foggy`,
  `Foolhardy`,
  `Foolish`,
  `Forbidding`,
  `Forceful`,
  `Foreboding`,
  `Forgetful`,
  `Forgettable`,
  `Forgotten`,
  `Formulaic`,
  `Foul`,
  `Fractious`,
  `Fragile`,
  `Fragmented`,
  `Frail`,
  `Frantic`,
  `Fraudulent`,
  `Frayed`,
  `Freakish`,
  `Freaky`,
  `Freezing`,
  `Fretful`,
  `Fried`,
  `Frightened`,
  `Frightening`,
  `Frightful`,
  `Frigid`,
  `Frilly`,
  `Frivolous`,
  `Frosty`,
  `Frowning`,
  `Frozen`,
  `Frugal`,
  `Fruitless`,
  `Frumpy`,
  `Frustrated`,
  `Frustrating`,
  `Fumbling`,
  `Fuming`,
  `Furious`,
  `Furtive`,
  `Fussy`,
  `Futile`,
  `Fuzzy`,
  `Gabby`,
  `Galling`,
  `Gangly`,
  `Gaping`,
  `Garbled`,
  `Garish`,
  `Garrulous`,
  `Gasping`,
  `Gaudy`,
  `Gaunt`,
  `Gawky`,
  `Generic`,
  `Ghastly`,
  `Ghoulish`,
  `Glassy`,
  `Glib`,
  `Gloomy`,
  `Glum`,
  `Gluttonous`,
  `Gnarly`,
  `Goofy`,
  `Grainy`,
  `Grating`,
  `Grave`,
  `Greasy`,
  `Greedy`,
  `Green`,
  `Grim`,
  `Grimacing`,
  `Grimy`,
  `Gritty`,
  `Groaning`,
  `Groggy`,
  `Gross`,
  `Grotesque`,
  `Grouchy`,
  `Growling`,
  `Grubby`,
  `Gruelling`,
  `Gruesome`,
  `Gruff`,
  `Grumbling`,
  `Grumpy`,
  `Guarded`,
  `Guilty`,
  `Gullible`,
  `Haggard`,
  `Halting`,
  `Haphazard`,
  `Hapless`,
  `Hard`,
  `Hare-brained`,
  `Harmful`,
  `Harried`,
  `Harsh`,
  `Hasty`,
  `Hated`,
  `Hateful`,
  `Haughty`,
  `Hazardous`,
  `Hazy`,
  `Heart-breaking`,
  `Heartbroken`,
  `Heartless`,
  `Heated`,
  `Heavy`,
  `Hectic`,
  `Heinous`,
  `Helpless`,
  `Hesitant`,
  `Hideous`,
  `Hoarse`,
  `Hollow`,
  `Homeless`,
  `Homely`,
  `Hopeless`,
  `Hormonal`,
  `Horrendous`,
  `Horrible`,
  `Horrid`,
  `Horrific`,
  `Horrified`,
  `Horrifying`,
  `Hostile`,
  `Huffy`,
  `Hulking`,
  `Humdrum`,
  `Humiliated`,
  `Humiliating`,
  `Humourless`,
  `Hungry`,
  `Hurried`,
  `Hurt`,
  `Hurtful`,
  `Hushed`,
  `Icky`,
  `Iconoclastic`,
  `Icy`,
  `Idiotic`,
  `Ignorable`,
  `Ignorant`,
  `Ill`,
  `Illegal`,
  `Illegible`,
  `Illegitimate`,
  `Illicit`,
  `Illiterate`,
  `Illogical`,
  `Immature`,
  `Immodest`,
  `Immoral`,
  `Impatient`,
  `Imperfect`,
  `Imperial`,
  `Impersonal`,
  `Impertinent`,
  `Impetuous`,
  `Impolite`,
  `Imposing`,
  `Impossible`,
  `Impoverished`,
  `Impractical`,
  `Imprecise`,
  `Improper`,
  `Imprudent`,
  `Impulsive`,
  `Impure`,
  `Inaccessible`,
  `Inaccurate`,
  `Inactive`,
  `Inadequate`,
  `Inadmissible`,
  `Inadvisable`,
  `Inane`,
  `Inappropriate`,
  `Inarticulate`,
  `Inattentive`,
  `Inauspicious`,
  `Incapable`,
  `Incessant`,
  `Incoherent`,
  `Incompatible`,
  `Incompetent`,
  `Incomplete`,
  `Incomprehensible`,
  `Inconceivable`,
  `Inconclusive`,
  `Incongruent`,
  `Inconsequential`,
  `Inconsiderate`,
  `Inconsistent`,
  `Inconsolable`,
  `Inconvenient`,
  `Incorrect`,
  `Indecent`,
  `Indecipherable`,
  `Indecisive`,
  `Indifferent`,
  `Indignant`,
  `Indiscriminate`,
  `Inefficient`,
  `Infantile`,
  `Inferior`,
  `Infuriating`,
  `Inhospitable`,
  `Insane`,
  `Insincere`,
  `Insipid`,
  `Irksome`,
  `Irrational`,
  `Jaded`,
  `Jeering`,
  `Judgmental`,
  `Lame`,
  `Laughable`,
  `Lecherous`,
  `Leering`,
  `Loathsome`,
  `Lowly`,
  `Malevolent`,
  `Malignant`,
  `Manipulative`,
  `Melodramatic`,
  `Messy`,
  `Moody`,
  `Muddled`,
  `Myopic`,
  `Narcissistic`,
  `Negligent`,
  `Nosy`,
  `Obscene`,
  `Obstinate`,
  `Odd`,
  `Opportunistic`,
  `Oppressive`,
  `Parasitic`,
  `Pathological`,
  `Pedantic`,
  `Pessimistic`,
  `Petty`,
  `Petulant`,
  `Pitiful`,
  `Predictable`,
  `Prejudiced`,
  `Putrid`,
  `Querulous`,
  `Racist`,
  `Redundant`,
  `Reprehensible`,
  `Repugnant`,
  `Rude`,
  `Sanctimonious`,
  `Sickening`,
  `Smothering`,
  `Smug`,
  `Squalid`,
  `Tacky`,
  `Tasteless`,
  `Temperamental`,
  `Thoughtless`,
  `Timid`,
  `Toxic`,
  `Tyrannical`,
  `Upsetting`,
  `Vacuous`,
  `Wasteful`,
  `Wretched`,
  `Yellow`,
];
const negativeNouns = [
  `Addict`,
  `Alcoholic`,
  `Amateur`,
  `Baby`,
  `Bastard`,
  `Beginner`,
  `Blabbermouth`,
  `Black-sheep`,
  `Blockhead`,
  `Boaster`,
  `Bonehead`,
  `Bookworm`,
  `Bore`,
  `Braggart`,
  `Brat`,
  `Brown-nose`,
  `Brute`,
  `Buffoon`,
  `Bully`,
  `Bum`,
  `Busybody`,
  `Butterfingers`,
  `Cheapskate`,
  `Cheater`,
  `Chicken`,
  `Child`,
  `City-slicker`,
  `Clown`,
  `Cow`,
  `Coward`,
  `Crab`,
  `Creep`,
  `Crook`,
  `Cry-baby`,
  `Daydreamer`,
  `Deadbeat`,
  `Deceiver`,
  `Degenerate`,
  `Delinquent`,
  `Dingbat`,
  `Diplomat`,
  `Do-nothing`,
  `Dog`,
  `Dope`,
  `Dreamer`,
  `Drifter`,
  `Drudge`,
  `Drunk`,
  `Drunkard`,
  `Dunce`,
  `Eavesdropper`,
  `Fake`,
  `Flirt`,
  `Fool`,
  `Fox`,
  `Freak`,
  `Glutton`,
  `Goof`,
  `Gossip`,
  `Granny`,
  `Heathen`,
  `Hermit`,
  `Homemaker`,
  `Idiot`,
  `Imbecile`,
  `Incompetent`,
  `Invalid`,
  `Jerk`,
  `Jester`,
  `Lazybones`,
  `Liar`,
  `Lightweight`,
  `Loafer`,
  `Loser`,
  `Loudmouth`,
  `Lunatic`,
  `Money-grubber`,
  `Moocher`,
  `Moron`,
  `Mortal`,
  `Nag`,
  `Nobody`,
  `Novice`,
  `Nuisance`,
  `Outcast`,
  `Outsider`,
  `Party-pooper`,
  `Pest`,
  `Phony`,
  `Pig`,
  `Poet`,
  `Protector`,
  `Punk`,
  `Pushover`,
  `Quitter`,
  `Rat`,
  `Rebel`,
  `Recluse`,
  `Romantic`,
  `Runt`,
  `Scaredy-cat`,
  `Scatterbrain`,
  `Scoundrel`,
  `Scrooge`,
  `Shrimp`,
  `Sitting-duck`,
  `Slacker`,
  `Sleepyhead`,
  `Slob`,
  `Slouch`,
  `Slowpoke`,
  `Slug`,
  `Snake`,
  `Sneak`,
  `Snob`,
  `Snoop`,
  `Spoilsport`,
  `Stereotype`,
  `Thief`,
  `Thinker`,
  `Traitor`,
  `Tramp`,
  `Troublemaker`,
  `Twit`,
  `Vegetable`,
  `Vegetarian`,
  `Weasel`,
  `Wimp`,
  `Witch`,
  `Worm`,
  `Worrywart`,
  `Wreck`,
  `Failure`,
  `Gambler`,
  `Idealist`,
  `Klutz`,
  `Pacifist`,
  `Quack`,
  `Talker`,
  `Vandal`,
  `Weakling`,
];
const shakespeareanInsultsPartOne = [
  "artless",
  "bawdy",
  "beslubbering",
  "bootless",
  "churlish",
  "clouted",
  "cockered",
  "craven",
  "currish",
  "dankish",
  "dissembling",
  "droning",
  "errant",
  "fawning",
  "fobbing",
  "frothy",
  "froward",
  "gleeking",
  "goatish",
  "gorbellied",
  "impertinent",
  "infectious",
  "jarring",
  "loggerheaded",
  "lumpish",
  "mammering",
  "mangled",
  "mewling",
  "paunchy",
  "pribbling",
  "puking",
  "puny",
  "qualling",
  "rank",
  "reeky",
  "roguish",
  "ruttish",
  "saucy",
  "spleeny",
  "spongy",
  "surly",
  "tottering",
  "unmuzzled",
  "vain",
  "venomed",
  "villainous",
  "warped",
  "wayward",
  "weedy",
  "yeasty",
  "abominable",
  "accursed",
  "adulterate",
  "arrogant",
  "babbling",
  "barbarous",
  "base",
  "mumbling",
  "overwheening",
  "perfidious",
  "pestilent",
  "poisonous",
  "pragging",
  "rancorous",
  "rascally",
  "sanctimonious",
  "shameless",
  "slanderous",
  "soulless",
  "spongey",
  "crusty",
  "withered",
  "loathed",
  "tongueless",
  "traitorous",
  "unwholesome",
  "viperous",
  "greasy",
  "obscene",
  "beggarly",
  "scandalous",
  "creeping",
  "lascivious",
  "degenerate",
  "meddling",
];
const shakespeareanInsultsPartTwo = [
  "base-court",
  "prick-eared",
  "puisny-tilted",
  "puke-stockinged",
  "open-arsed",
  "bat-fowling",
  "beef-witted",
  "beetle-headed",
  "boil-brained",
  "clapper-clawed",
  "clay-brained",
  "common-kissing",
  "crook-pated",
  "dismal-dreaming",
  "dizzy-eyed",
  "doghearted",
  "dread-bolted",
  "earth-vexing",
  "elf-skinned",
  "fat-kidneyed",
  "fen-sucked",
  "flap-mouthed",
  "fly-bitten",
  "folly-fallen",
  "fool-born",
  "full-gorged",
  "guts-griping",
  "half-faced",
  "hasty-witted",
  "hedge-born",
  "hell-hated",
  "idle-headed",
  "ill-bred",
  "ill-nurtured",
  "knotty-pated",
  "milk-livered",
  "motley-minded",
  "onion-eyed",
  "plume-plucked",
  "pottle-deep",
  "pox-marked",
  "reeling-ripe",
  "rough-hewn",
  "rude-growing",
  "rump-fed",
  "shard-borne",
  "sheep-biting",
  "spur-galled",
  "swag-bellied",
  "tardy-gaited",
  "tickle-brained",
  "white-livered",
  "toad-spotted",
  "urchin-snouted",
  "weather-bitten",
  "shag-haired",
  "tallow-faced",
  "beef-witted",
  "decayed",
  "deformed",
  "muddy-mottled",
  "hag-born",
  "long-tongued",
  "toad-spotted",
];
const shakespeareanInsultsPartThree = [
  "baggage",
  "barnacle",
  "bladder",
  "boar-pig",
  "bugbear",
  "bum-bailey",
  "canker-blossom",
  "clack-dish",
  "clotpole",
  "codpiece",
  "coxcomb",
  "death-token",
  "dewberry",
  "flap-dragon",
  "flax-wench",
  "flirt-gill",
  "foot-licker",
  "fustilarian",
  "giglet",
  "gudgeon",
  "haggard",
  "harpy",
  "hedge-pig",
  "horn-beast",
  "hugger-mugger",
  "joithead",
  "lewdster",
  "lout",
  "maggot-pie",
  "malt-worm",
  "mammet",
  "measle",
  "minnow",
  "miscreant",
  "moldwarp",
  "mumble-news",
  "nut-hook",
  "pigeon-egg",
  "pignut",
  "pumpion",
  "puttock",
  "ratsbane",
  "scut",
  "skainsmate",
  "strumpet",
  "varlet",
  "vassal",
  "wagtail",
  "whey-face",
  "scullion",
  "serpents-egg",
  "callet",
  "slug",
  "bag of guts",
  "punk",
  "bitch-wolf",
  "botch",
  "withered-hag",
  "mangy-dog",
  "foul deformity",
  "odiferous stench",
  "no bowels",
  "drunkard",
  "turd",
  "bear-whelp",
  "eunuch",
  "devil-incarnate",
  "filthy rogue",
  "vile worm",
  "writhled shrimp",
  "scurvy-knave",
  "whore-master",
  "malt-horse",
  "varlet",
  "worms-meat",
  "canker-blossom",
  "carrion",
  "hag-seed",
  "ruinous-butt",
  "contriver",
  "hypocrite",
  "infection",
  "imbossed carbunkle",
  "eternal devil",
  "execrable-wretch",
  "murderous coward",
  "foul adulterer",
  "ingested-lump",
  "wrinkled-witch",
  "plebian",
  "strumpet",
  "horse-drench",
  "promise-breaker",
  "incontinent varlet",
  "leprous witch",
  "babbling gossip",
  "tyrant",
  "purified-cur",
  "misbegotten-divel",
  "mildewed-ear",
];
// Individual Loot Tables
const individualLootTableCR0 = new Map([
  [30, [[5, 6, 1, `cp`]]], // Roll below 30 and recieve 5D6 * 1 Copper Pieces.
  [60, [[4, 6, 1, `sp`]]],
  [70, [[3, 6, 1, `ep`]]],
  [95, [[3, 6, 1, `gp`]]],
  [100, [[1, 6, 1, `pp`]]],
]);
const individualLootTableCR5 = new Map([
  [
    30,
    [
      [4, 6, 100, `cp`],
      [1, 6, 10, `ep`],
    ],
  ], // Roll 30 or less and recieve 4D6 * 10 Copper, and 1D6 * 10 Electrum Pieces.
  [
    60,
    [
      [6, 6, 10, `sp`],
      [2, 6, 10, `gp`],
    ],
  ],
  [
    70,
    [
      [3, 6, 10, `ep`],
      [2, 6, 10, `gp`],
    ],
  ],
  [95, [[4, 6, 10, `gp`]]],
  [
    100,
    [
      [2, 6, 10, `gp`],
      [3, 6, 1, `pp`],
    ],
  ],
]);
const individualLootTableCR11 = new Map([
  [
    20,
    [
      [4, 6, 100, `sp`],
      [1, 6, 100, `gp`],
    ],
  ],
  [
    35,
    [
      [1, 6, 100, `ep`],
      [1, 6, 100, `gp`],
    ],
  ],
  [
    75,
    [
      [2, 6, 100, `gp`],
      [1, 6, 10, `pp`],
    ],
  ],
  [
    100,
    [
      [2, 6, 100, `gp`],
      [2, 6, 10, `pp`],
    ],
  ],
]);
const individualLootTableCR17 = new Map([
  [
    15,
    [
      [2, 6, 1000, `ep`],
      [8, 6, 100, `gp`],
    ],
  ],
  [
    55,
    [
      [1, 6, 1000, `gp`],
      [1, 6, 100, `pp`],
    ],
  ],
  [
    100,
    [
      [1, 6, 1000, `gp`],
      [2, 6, 100, `pp`],
    ],
  ],
]);
// Hoard Loot Contents
const gemstones = new Map([
  [
    10,
    [
      `Azurite`,
      `Banded Agate`,
      `Blue Quartz`,
      `Eye Agate`,
      `Hematite`,
      `Lapis Lazuli`,
      `Malachite`,
      `Moss Agate`,
      `Obsidian`,
      `Rhondochrosite`,
      `Tiger Eye`,
      `Turquoise`,
    ],
  ],
  [
    50,
    [
      `Bloodstone`,
      `Carnelian`,
      `Chalcedony`,
      `Chrysoprase`,
      `Citrine`,
      `Jasper`,
      `Moonstone`,
      `Onyx`,
      `Quartz`,
      `Sardonyx`,
      `Star Rose Quartz`,
      `Zircon`,
    ],
  ],
  [
    500,
    [
      `Alexandrite`,
      `Aquamarine`,
      `Black Pearl`,
      `Blue Spinel`,
      `Peridot`,
      `Topaz`,
    ],
  ],
  [
    1000,
    [
      `Black Opal`,
      `Blue Sapphire`,
      `Emerald`,
      `Fire Opal`,
      `Opal`,
      `Star Ruby`,
      `Star Sapphire`,
      `Yellow Sapphire`,
    ],
  ],
  [5000, [`Black Sapphire`, `Diamond`, `Jacinth`, `Ruby`]],
]);
const artworks = new Map([
  [
    25,
    [
      `Silver Ewer`,
      `Carved Bone Statuette`,
      `Small Gold Bracelet`,
      `Cloth-of-Gold Vestments`,
      `Black Velvet Mask Stitched with Silver Thread`,
      `Copper Chalice with Silver Filigree`,
      `Pair of Engraved Bone Dice`,
      `Small Mirror Set in a Painted Wooden Frame`,
      `Embroidered Silk Handkerchief`,
      `Gold Locket with a Painted Portrait Inside`,
    ],
  ],
  [
    250,
    [
      `Gold Ring Set with Bloodstones`,
      `Carved Ivory Statuette`,
      `Large Gold Bracelet`,
      `Silver Necklace with a Gemstone Pendant`,
      `Bronze Crown`,
      `Silk Robe with Gold Embroidery`,
      `Large Well-Made Tapestry`,
      `Brass Mug with Jade Inlay`,
      `Box of Turquoise Animal Figurines`,
      `Gold Bird Cage with Electrum Filigree`,
    ],
  ],
  [
    750,
    [
      `Silver Chalice Set with Moonstones`,
      `Silver-Plated Steel Longsword with  Jet Set in Hilt`,
      `Carved Harp of Exotic Wood with Ivory Inlay and Zircon Gems`,
      `Small Gold Idol`,
      `Gold Dragon Comb Set with Red Garnets as Eyes`,
      `Bottle Stopper Cork Embossed with Gold Leaf and Set with Amethysts`,
      `Ceremonial Electrum Dagger with a Black Pearl in the Pommel`,
      `Silver and Gold Brooch`,
      `Obsidian Statuette with Gold Fittings and Inlay`,
      `Painted Gold War Mask`,
    ],
  ],
  [
    2500,
    [
      `Fine Gold Chain Set with a Fire Opal`,
      `Old Masterpiece Painting`,
      `Embroidered Silk and Velvet Mantle Set with Numerous Moonstones`,
      `Platinum Bracelet Set with a Sapphire`,
      `Embroidered Glove Set with Jewel Chips`,
      `Jeweled Anklet`,
      `Gold Music Box`,
      `Gold Circlet Set with Four Aquamarines`,
      `Eye Patch with a Mock Eye Set in Blue Sapphire and Moonstone`,
      `A Necklace with a String of Small Pink Pearls`,
    ],
  ],
  [
    7500,
    [
      `Jeweled Gold Crown`,
      `Jewled Platinum Ring`,
      `Small Gold Statuette Set with Rubies`,
      `Gold Cup Set with Emeralds`,
      `Gold Jewelery Box with Platinum Filigree`,
      `Painted Gold Child's Sarcophagus`,
      `Jade Game Board with Solid Gold Playing Pieces`,
      `Bejeweled Ivory Drinking Horn with Gold Filigree`,
    ],
  ],
]);
const magicItemTableA = new Map([
  [50, `Potion of Healing`],
  [60, `Spell Scroll (Cantrip)`],
  [70, `Potion of Climbing`],
  [90, `Spell Scroll (First Level)`],
  [94, `Spell Scroll (Second Level)`],
  [98, `Potion of Greater Healing`],
  [99, `Bag of Holding`],
  [100, `Driftglobe`],
]);
const magicItemTableB = new Map([
  [15, `Potion of Greater Healing`],
  [22, `Potion of Fire Breath`],
  [29, `Potion of Resistance`],
  [34, `Ammunition (Plus One)`],
  [39, `Potion of Animal Friendship`],
  [44, `Potion of Hill Giant Strength`],
  [49, `Potion of Growth`],
  [54, `Potion of Water Breathing`],
  [59, `Spell Scroll (Second Level)`],
  [64, `Spell Scroll (Third Level)`],
  [67, `Bag of Holding`],
  [70, `Keoghtom's Ointment`],
  [73, `Oil of Slipperiness`],
  [75, `Dust of Disappearance`],
  [77, `Dust of Dryness`],
  [79, `Dust of Sneezing and Choking`],
  [81, `Elemental Gem`],
  [83, `Philter of Love`],
  [84, `Alchemy Jug`],
  [85, `Cap of Water-Breathing`],
  [86, `Cloak of the Manta Ray`],
  [87, `Driftglobe`],
  [88, `Goggles of Night`],
  [89, `Helm of Comprehending Languages`],
  [90, `Immovable Rod`],
  [91, `Lantern of Revealing`],
  [92, `Mariner's Armour`],
  [93, `Mithril Armour`],
  [94, `Potion of Poison`],
  [95, `Ring of Swimming`],
  [96, `Robe of Useful Items`],
  [97, `Rope of Climbing`],
  [98, `Saddle of the Cavalier`],
  [99, `Wand of Magic Detection`],
  [100, `Wand of Secrets`],
]);
const magicItemTableC = new Map([
  [15, `Potion of Superior Healing`],
  [22, `Spell Scroll (Fourth Level)`],
  [27, `Ammunition (Plus Two)`],
  [32, `Potion of Clairvoyance`],
  [37, `Potion of Diminution`],
  [42, `Potion of Gaseous Form`],
  [47, `Potion of Frost Giant Strength`],
  [52, `Potion of Stone Giant Strength`],
  [57, `Potion of Heroism`],
  [62, `Potion of Invulnerablility`],
  [67, `Potion of Mind Reading`],
  [72, `Spell Scroll (Fifth Level)`],
  [75, `Elixir of Health`],
  [78, `Oil of Etherealness`],
  [81, `Potion of Fire Giant Strength`],
  [84, `Quaal's Feather Token`],
  [87, `Scroll of Protection`],
  [89, `Bag of Beans`],
  [91, `Bead of Force`],
  [92, `Chime of Opening`],
  [93, `Decanter of Endless Water`],
  [94, `Eyes of Minute Seeing`],
  [95, `Folding Boat`],
  [96, `Heward's Handy haversack`],
  [97, `Horseshoes of Speed`],
  [98, `Necklace of Fireballs`],
  [99, `Peripat of Health`],
  [100, `Sending Stones`],
]);
const magicItemTableD = new Map([
  [20, `Potion of Supreme Healing`],
  [30, `Potion of Invisibility`],
  [40, `Potion of Speed`],
  [50, `Spell Scroll (Sixth Level)`],
  [57, `Spell Scroll (Seventh Level)`],
  [62, `Ammunition (Plus Three)`],
  [67, `Oil of Sharpness`],
  [72, `Potion of Flying`],
  [77, `Potion of Cloud Giant Strength`],
  [82, `Potion of Longevity`],
  [87, `Potion of Vitality`],
  [92, `Spell Scroll (Eighth Level)`],
  [95, `Horseshoes of a Zephyr`],
  [98, `Nolzur's Marvelous Pigments`],
  [99, `Bag of Devouring`],
  [100, `Portable Hole`],
]);
const magicItemTableE = new Map([
  [30, `Spell Scroll (Eighth Level)`],
  [55, `Potion of Storm Giant Strength`],
  [70, `Potion of Supreme Healing`],
  [85, `Spell Scroll (Ninth Level)`],
  [93, `Universal Solvent`],
  [98, `Arrow of Slaying`],
  [100, `Sovereign Glue`],
]);
const magicItemTableF = new Map([
  [15, `Weapon (Plus One)`],
  [18, `Shield (Plus One)`],
  [21, `Sentinel Shield`],
  [23, `Amulet of Proof Against Detection and Location`],
  [25, `Boots of Elvenkind`],
  [27, `Boots of Striding and Springing`],
  [29, `Bracers of Archery`],
  [31, `Brooch of Shielding`],
  [33, `Broom of Flying`],
  [35, `Cloak of Elvenkind`],
  [37, `Cloak of Protection`],
  [39, `Gauntlets of Ogre Power`],
  [41, `Hat of Disguise`],
  [43, `Javelin of Lightning`],
  [45, `Pearl of Power`],
  [47, `Rod of the Pact Keeper (Plus One)`],
  [49, `Slippers of Spider Climbing`],
  [51, `Staff of the Adder`],
  [53, `Staff of the Python`],
  [55, `Sword of Vengance`],
  [57, `Trident of Fish Command`],
  [59, `Wand of Magic Missiles`],
  [61, `Wand of the War Mage (Plus One)`],
  [63, `Wand of Web`],
  [65, `Weapon of Warning`],
  [66, `Adamantine Armour (Chain Mail)`],
  [67, `Adamantine Armour (Chain Shirt)`],
  [68, `Adamantine Armour (Scale Mail)`],
  [69, `Bag of Tricks (Grey)`],
  [70, `Bag of Tricks (Rust)`],
  [71, `Bag of Tricks (Tan)`],
  [72, `Boots of the Winterlands`],
  [73, `Circlet of Blasting`],
  [74, `Deck of Illusions`],
  [75, `Eversmoking Bottle`],
  [76, `Eyes of Charming`],
  [77, `Eyes of the Eagle`],
  [78, `Figurine of Wondrous Power (Silver Raven)`],
  [79, `Gem of Brightness`],
  [80, `Gloves of Missile Snaring`],
  [81, `Gloves of Swimming and Climbing`],
  [82, `Gloves of Thievery`],
  [83, `Headband of Intellect`],
  [84, `Helm of Telepathy`],
  [85, `Instrument of the Bards (Doss Lute)`],
  [86, `Instrument of the Bards (Fochlucan Bandore)`],
  [87, `Instrument of the Bards (Mac-Fuimidh Cittern)`],
  [88, `Medallion of Thoughts`],
  [89, `Necklace of Adaption`],
  [90, `Periapt of Wound Closure`],
  [91, `Pipes of Haunting`],
  [92, `Pipes of the Sewers`],
  [93, `Ring of Jumping`],
  [94, `Ring of Mind Shielding`],
  [95, `Ring of Warmth`],
  [96, `Ring of Water Walking`],
  [97, `Quivr of Ehlonna`],
  [98, `Stone of Good Luck`],
  [99, `Wind Fan`],
  [100, `Winged Boots`],
]);
const magicItemTableG = new Map([
  [11, `Weapon (Plus Two)`],
  [14, `Figurine of Wondrous Power`],
  [15, `Adamantine Armour (Brastplate)`],
  [16, `Adamantine Armour (Splint)`],
  [17, `Amulet of Health`],
  [18, `Armour of Vulnerability`],
  [19, `Arrow-Catching Shield`],
  [20, `Belt of Dwarvenkind`],
  [21, `Belt of Hill Giant Strength`],
  [22, `Berserker Axe`],
  [23, `Boots of Levitation`],
  [14, `Boots of Speed`],
  [25, `Bowl of Commanding Water Elementals`],
  [26, `Bracers of Defence`],
  [27, `Brazier of Commanding Fire Elementals`],
  [28, `Cape of the Mountebank`],
  [29, `Censer of Controlling Air Elementals`],
  [30, `Armour (Plus One, Chain Mail)`],
  [31, `Armour of Resistance (Chain Mail)`],
  [32, `Armour (Plus One, Chain Shirt)`],
  [33, `Armour of Resistance (Chain Shirt)`],
  [34, `Cloak of Displacement`],
  [35, `Cloak of the Bat`],
  [36, `Cube of Force`],
  [37, `Daern's Instant Fortress`],
  [38, `Dagger of Venom`],
  [39, `Dimensional Shackles`],
  [40, `Dragon Slayer`],
  [41, `Elven Chain`],
  [42, `Flame Tongue`],
  [43, `Gem of Seeing`],
  [44, `Giant Slayer`],
  [45, `Glamoured Studded Leather`],
  [46, `Helm of Teleportation`],
  [47, `Horn of Blasting`],
  [48, `Horn of Valhalla (Silver or Brass)`],
  [49, `Instrument of the Bards (Canaith Mandolin)`],
  [50, `Instrument of the Bards (Cli Lyre)`],
  [51, `Ioun Stone (Awareness)`],
  [52, `Ioun Stone (Protection)`],
  [53, `Ioun Stone (Reserve)`],
  [54, `Ioun Stone (Sustenance)`],
  [55, `Iron Bands of Bilarro`],
  [56, `Armour (Plus One, Leather)`],
  [57, `Armour of Resistance (Leather)`],
  [58, `Mace of Distruption`],
  [59, `Mace of Smiting`],
  [60, `Mace of Terror`],
  [61, `Mantle of Spell Resistance`],
  [62, `Necklace of Prayer Beads`],
  [63, `Periapt of Proof Against Poison`],
  [64, `Ring of Animal Influence`],
  [65, `Ring of Evasion`],
  [66, `Ring of Feather Falling`],
  [67, `Ring of Free Action`],
  [68, `Ring of Protection`],
  [69, `Ring of Resistance`],
  [70, `Ring of Spell Storing`],
  [71, `Ring of the Ram`],
  [72, `Ring of X-Ray Vision`],
  [73, `Robe of Eyes`],
  [74, `Rod of Rulership`],
  [75, `Rod of the Pact Keeper (Plus Two)`],
  [76, `Rope of Entanglement`],
  [77, `Armour (Plus One, Scale Mail)`],
  [78, `Armour of Resistance (Scale Mail)`],
  [79, `Shield (Plus Two)`],
  [80, `Shield of Missile Attraction`],
  [81, `Staff of Charming`],
  [82, `Staff of Healing`],
  [83, `Staff of Swarming Insects`],
  [84, `Staff of the Woodlands`],
  [85, `Staff of Withering`],
  [86, `Stone of Controlling Earth Elementals`],
  [87, `Sun Blade`],
  [88, `Sword of Life Stealing`],
  [89, `Sword of Wounding`],
  [90, `Tentacle Rod`],
  [91, `Vicious Weapon`],
  [92, `Wand of Binding`],
  [93, `Wand of Enemy Detection`],
  [94, `Wand of Fear`],
  [95, `Wand of Fireballs`],
  [96, `Wand of Lightning Bolts`],
  [97, `Wand of Paralysis`],
  [98, `Wand of the War Mage`],
  [99, `Wand of Wonder`],
  [100, `Wings of Flying`],
]);
const magicItemTableH = new Map([
  [10, `Weapon (Plus Three)`],
  [12, `Amulet of the Planes`],
  [14, `Carpet of Flying`],
  [16, `Crystal Ball (Very Rare Version)`],
  [18, `Ring of Regeneration`],
  [20, `Ring of Shooting Stars`],
  [22, `Ring of Telekinesis`],
  [24, `Robe of Scintillating Colours`],
  [26, `Robe of Stars`],
  [28, `Rod of Absorbtion`],
  [30, `Rod of Alertness`],
  [32, `Rod of Security`],
  [34, `Rod of the Pact Keeper`],
  [36, `Scimitar of Speed`],
  [38, `Shield (Plus Three)`],
  [40, `Staff of Fire`],
  [42, `Staff of Frost`],
  [44, `Staff of Power`],
  [46, `Staff of Striking`],
  [48, `Staff of Thunder and Lightning`],
  [50, `Sword of Sharpness`],
  [52, `Wand of Polymorph`],
  [54, `Wand of the War MAge (Plus One)`],
  [55, `Adamantine Armour (Half Plate)`],
  [56, `Adamantine Armour (Plate)`],
  [57, `Animated Shield`],
  [58, `Belt of Fire Giant Strength`],
  [59, `Belt of Frost (or Stone) Giant Strength`],
  [60, `Armour (Plus One, Breastplate)`],
  [61, `Armour of Resistance (Breastplate)`],
  [62, `Candle of Invocation`],
  [63, `Armour (Plus Two, Chain Mail)`],
  [64, `Armour (Plus Two, Chain Shirt)`],
  [65, `Cloak of Arachnida`],
  [66, `Dancing Sword`],
  [67, `Demon Armour`],
  [68, `Dragon Scale Mail`],
  [69, `Dwarven Plate`],
  [70, `Dwarven Thrower`],
  [71, `Efreeti Bottle`],
  [72, `Figurine of Wondrous Power (Obsidian Steed)`],
  [73, `Frost Band`],
  [74, `Helm of Brilliance`],
  [75, `Horn of Valhalla (Bronze)`],
  [76, `Instrument of the Bards (Anstruth Harp)`],
  [77, `Ioun Stone (Absorbtion)`],
  [78, `Ioun Stone (Agility)`],
  [79, `Ioun Stone (Fortitude)`],
  [80, `Ioun Stone (Insight)`],
  [81, `Ioun Stone (Intellect)`],
  [82, `Ioun Stone (Leadership)`],
  [83, `Ioun Stone (Strength)`],
  [84, `Armour (Plus Two, Leather)`],
  [85, `Manual of Bodily Health`],
  [86, `Manual of Gainful Exercise`],
  [87, `Manual of Golems`],
  [88, `Manual of Quickness of Action`],
  [89, `Mirror of Life Trapping`],
  [90, `Nine Lives Stealer`],
  [91, `Oathbow`],
  [92, `Armour (Plus Two, Scale Mail)`],
  [93, `Spellguard Shield`],
  [94, `Armour (Plus One, Splint)`],
  [95, `Armour of Resistance (Splint)`],
  [96, `Armour (Plus One, Studded Leather)`],
  [97, `Armour of Resistance (Studded Leather)`],
  [98, `Tome of Clear Thought`],
  [99, `Tome of Leadership and Influence`],
  [100, `Tome of Understanding`],
]);
const magicItemTableI = new Map([
  [5, `Defender`],
  [10, `Hammer of Thunderbolts`],
  [15, `Luck Blade`],
  [20, `Sword of Answering`],
  [23, `Holy Avenger`],
  [26, `Ring of Djinni Summoning`],
  [29, `Ring of Invisibility`],
  [32, `Ring of Spell Turning`],
  [35, `Rod of Lordly Might`],
  [38, `Staff of the Magi`],
  [41, `Vorpal Sword`],
  [43, `Belt of Cloud Giant Strength`],
  [45, `Armour (Plus Two, Breastplate)`],
  [47, `Armour (Plus Three, Chain Mail)`],
  [49, `Armour (Plus Three, Chain Shirt)`],
  [51, `Cloak of Invisibility`],
  [53, `Crystal Ball (Legendary Version)`],
  [55, `Armour (Plus One, Half Plate)`],
  [57, `Iron Flask`],
  [59, `Armour (Plus Three, Leather)`],
  [61, `Armour (Plus One, Plate)`],
  [63, `Robe of the Archmagi`],
  [65, `Rod of Resurrection`],
  [67, `Armour (Plus One, Scale Mail)`],
  [69, `Scarab of Protection`],
  [71, `Armour (Plus Two, Splint)`],
  [73, `Armour (Plus Two, Studded Leather)`],
  [75, `Well of Many Worlds`],
  [76, `Magic armour (Roll 1D12)`],
  [77, `Apparatus of Kwalish`],
  [78, `Armour of Invulnerability`],
  [79, `Belt of Storm Giant Strength`],
  [80, `Cubic Gate`],
  [81, `Deck of Many Things`],
  [82, `Efreeti Chain`],
  [83, `Armour of Resistance (Half Plate)`],
  [84, `Horn of Valhalla (Iron)`],
  [85, `Instrument of the Bards (Ollamh Harp)`],
  [86, `Ioun Stone (Greater Absorption)`],
  [87, `Ioun Stone (Mastery)`],
  [88, `Ioun Stone (Regeneration)`],
  [89, `Plate Armour of Etherealness`],
  [90, `Plate Armour of Resistance`],
  [91, `Ring of Air Elemental Command`],
  [92, `Ring of Earth Elemental Command`],
  [93, `Ring of Fire Elemental Command`],
  [94, `Ring of Three Wishes`],
  [95, `Ring of Water Elemental Command`],
  [96, `Sphere of Annihilation`],
  [97, `Talisman of Pure Good`],
  [98, `Talisman of the Sphere`],
  [99, `Talisman of Ultimate Evil`],
  [100, `Tome of the Stilled Tongue`],
]);
const treasureHoardCoins = new Map([
  [
    0,
    [
      [6, 6, 100, `cp`],
      [3, 6, 100, `sp`],
      [2, 6, 10, `gp`],
    ],
  ],
  [
    5,
    [
      [2, 6, 100, `cp`],
      [2, 6, 1000, `sp`],
      [6, 6, 100, `gp`],
      [3, 6, 100, `pp`],
    ],
  ],
  [
    11,
    [
      [4, 6, 1000, `gp`],
      [5, 6, 100, `pp`],
    ],
  ],
  [
    17,
    [
      [12, 6, 1000, `gp`],
      [8, 6, 1000, `pp`],
    ],
  ],
]);
// Treasure Hoard Tables
const treasureHoardTable0 = new Map([
  [6, [[], []]],
  [16, [[2, 6, 10, `gems`], []]],
  [26, [[2, 4, 25, `art`], []]],
  [36, [[1, 6, 50, `gems`], []]],
  [
    44,
    [
      [2, 6, 10, `gems`],
      [6, `A`],
    ],
  ],
  [
    52,
    [
      [2, 4, 25, `art`],
      [6, `A`],
    ],
  ],
  [
    60,
    [
      [2, 6, 50, `gems`],
      [6, `A`],
    ],
  ],
  [
    65,
    [
      [2, 6, 10, `gems`],
      [4, `B`],
    ],
  ],
  [
    70,
    [
      [2, 4, 25, `art`],
      [4, `B`],
    ],
  ],
  [
    75,
    [
      [2, 6, 50, `gems`],
      [4, `B`],
    ],
  ],
  [
    78,
    [
      [2, 6, 10, `gems`],
      [4, `C`],
    ],
  ],
  [
    80,
    [
      [2, 4, 25, `art`],
      [4, `C`],
    ],
  ],
  [
    85,
    [
      [2, 6, 50, `gems`],
      [4, `C`],
    ],
  ],
  [
    92,
    [
      [2, 4, 25, `art`],
      [4, `F`],
    ],
  ],
  [
    97,
    [
      [2, 6, 50, `gems`],
      [4, `F`],
    ],
  ],
  [
    99,
    [
      [2, 4, 25, `art`],
      [0, `G`],
    ],
  ],
  [
    100,
    [
      [2, 6, 50, `gems`],
      [0, `G`],
    ],
  ],
]);
const treasureHoardTable5 = new Map([
  [4, [[], []]],
  [10, [[2, 4, 25, `art`], []]],
  [16, [[3, 6, 50, `gems`], []]],
  [22, [[3, 6, 100, `gems`], []]],
  [28, [[2, 4, 250, `art`], []]],
  [
    32,
    [
      [2, 4, 25, `art`],
      [6, `A`],
    ],
  ],
  [
    36,
    [
      [3, 6, 50, `gems`],
      [6, `A`],
    ],
  ],
  [
    40,
    [
      [3, 6, 100, `gems`],
      [6, `A`],
    ],
  ],
  [
    44,
    [
      [2, 4, 350, `art`],
      [6, `A`],
    ],
  ],
  [
    49,
    [
      [2, 4, 25, `art`],
      [4, `B`],
    ],
  ],
  [
    54,
    [
      [3, 6, 50, `gems`],
      [4, `B`],
    ],
  ],
  [
    59,
    [
      [3, 6, 100, `gems`],
      [4, `B`],
    ],
  ],
  [
    63,
    [
      [2, 4, 250, `art`],
      [4, `B`],
    ],
  ],
  [
    66,
    [
      [2, 4, 25, `art`],
      [4, `C`],
    ],
  ],
  [
    69,
    [
      [3, 6, 25, `art`],
      [4, `C`],
    ],
  ],
  [
    72,
    [
      [3, 6, 100, `gems`],
      [4, `C`],
    ],
  ],
  [
    74,
    [
      [2, 4, 250, `art`],
      [4, `C`],
    ],
  ],
  [
    76,
    [
      [2, 4, 25, `art`],
      [0, `D`],
    ],
  ],
  [
    78,
    [
      [3, 6, 50, `gems`],
      [0, `D`],
    ],
  ],
  [
    79,
    [
      [3, 6, 100, `gems`],
      [0, `D`],
    ],
  ],
  [
    80,
    [
      [2, 4, 250, `art`],
      [0, `D`],
    ],
  ],
  [
    84,
    [
      [2, 4, 25, `art`],
      [4, `F`],
    ],
  ],
  [
    88,
    [
      [3, 6, 50, `gems`],
      [4, `F`],
    ],
  ],
  [
    91,
    [
      [3, 6, 100, `gems`],
      [4, `F`],
    ],
  ],
  [
    94,
    [
      [2, 4, 250, `art`],
      [4, `F`],
    ],
  ],
  [
    96,
    [
      [3, 6, 100, `gems`],
      [4, `G`],
    ],
  ],
  [
    98,
    [
      [2, 4, 250, `art`],
      [4, `G`],
    ],
  ],
  [
    99,
    [
      [3, 6, 100, `gems`],
      [0, `H`],
    ],
  ],
  [
    100,
    [
      [2, 4, 250, `art`],
      [0, `H`],
    ],
  ],
]);
const treasureHoardTable11 = new Map([
  [3, [[], []]],
  [6, [[2, 4, 250, `art`], []]],
  [9, [[2, 4, 750, `art`], []]],
  [12, [[3, 6, 500, `gems`], []]],
  [15, [[3, 6, 1000, `gems`], []]],
  [
    19,
    [
      [2, 4, 250, `art`],
      [4, `A`],
      [6, `B`],
    ],
  ],
  [
    23,
    [
      [2, 4, 750, `art`],
      [4, `A`],
      [6, `B`],
    ],
  ],
  [
    26,
    [
      [3, 6, 500, `gems`],
      [4, `A`],
      [6, `B`],
    ],
  ],
  [
    29,
    [
      [3, 6, 1000, `gems`],
      [4, `A`],
      [6, `B`],
    ],
  ],
  [
    35,
    [
      [2, 4, 250, `art`],
      [6, `C`],
    ],
  ],
  [
    40,
    [
      [2, 4, 750, `art`],
      [6, `C`],
    ],
  ],
  [
    45,
    [
      [3, 6, 500, `gems`],
      [6, `C`],
    ],
  ],
  [
    50,
    [
      [3, 6, 1000, `gems`],
      [6, `C`],
    ],
  ],
  [
    54,
    [
      [2, 4, 250, `art`],
      [4, `D`],
    ],
  ],
  [
    58,
    [
      [2, 4, 750, `art`],
      [4, `D`],
    ],
  ],
  [
    62,
    [
      [3, 6, 500, `gems`],
      [4, `D`],
    ],
  ],
  [
    66,
    [
      [3, 6, 1000, `gems`],
      [4, `D`],
    ],
  ],
  [
    68,
    [
      [2, 4, 250, `art`],
      [0, `E`],
    ],
  ],
  [
    70,
    [
      [2, 4, 750, `art`],
      [0, `E`],
    ],
  ],
  [
    72,
    [
      [3, 6, 500, `gems`],
      [0, `E`],
    ],
  ],
  [
    74,
    [
      [3, 6, 1000, `gems`],
      [0, `E`],
    ],
  ],
  [
    76,
    [
      [2, 4, 250, `art`],
      [0, `F`],
      [4, `G`],
    ],
  ],
  [
    78,
    [
      [2, 4, 750, `art`],
      [0, `F`],
      [4, `G`],
    ],
  ],
  [
    80,
    [
      [3, 6, 500, `gems`],
      [0, `F`],
      [4, `G`],
    ],
  ],
  [
    82,
    [
      [3, 6, 1000, `gems`],
      [0, `F`],
      [4, `G`],
    ],
  ],
  [
    85,
    [
      [2, 4, 250, `art`],
      [4, `H`],
    ],
  ],
  [
    88,
    [
      [2, 4, 750, `art`],
      [4, `H`],
    ],
  ],
  [
    90,
    [
      [3, 6, 500, `gems`],
      [4, `H`],
    ],
  ],
  [
    92,
    [
      [3, 6, 1000, `gems`],
      [4, `H`],
    ],
  ],

  [
    94,
    [
      [2, 4, 250, `art`],
      [0, `I`],
    ],
  ],
  [
    96,
    [
      [2, 4, 750, `art`],
      [0, `I`],
    ],
  ],
  [
    98,
    [
      [3, 6, 500, `gems`],
      [0, `I`],
    ],
  ],
  [
    100,
    [
      [3, 6, 1000, `gems`],
      [0, `I`],
    ],
  ],
]);
const treasureHoardTable17 = new Map([
  [2, [[], []]],
  [
    5,
    [
      [3, 6, 1000, `gems`],
      [8, `C`],
    ],
  ],
  [
    8,
    [
      [1, 10, 2500, `art`],
      [8, `C`],
    ],
  ],
  [
    11,
    [
      [4, 2, 7500, `art`],
      [8, `C`],
    ],
  ],
  [
    14,
    [
      [1, 8, 5000, `gems`],
      [8, `C`],
    ],
  ],
  [
    22,
    [
      [3, 6, 1000, `gems`],
      [6, `D`],
    ],
  ],
  [
    30,
    [
      [1, 10, 2500, `art`],
      [6, `D`],
    ],
  ],
  [
    38,
    [
      [4, 2, 7500, `art`],
      [6, `D`],
    ],
  ],
  [
    46,
    [
      [1, 8, 5000, `gems`],
      [6, `D`],
    ],
  ],
  [
    52,
    [
      [3, 6, 1000, `gems`],
      [6, `E`],
    ],
  ],
  [
    58,
    [
      [1, 10, 2500, `art`],
      [6, `E`],
    ],
  ],
  [
    63,
    [
      [4, 2, 7500, `art`],
      [6, `E`],
    ],
  ],
  [
    68,
    [
      [1, 8, 5000, `gems`],
      [6, `E`],
    ],
  ],
  [
    69,
    [
      [3, 6, 1000, `gems`],
      [4, `G`],
    ],
  ],
  [
    70,
    [
      [1, 10, 2500, `art`],
      [4, `G`],
    ],
  ],
  [
    71,
    [
      [4, 2, 7500, `art`],
      [4, `G`],
    ],
  ],
  [
    72,
    [
      [1, 8, 5000, `gems`],
      [4, `G`],
    ],
  ],
  [
    74,
    [
      [3, 6, 1000, `gems`],
      [4, `H`],
    ],
  ],
  [
    76,
    [
      [1, 10, 2500, `art`],
      [4, `H`],
    ],
  ],
  [
    78,
    [
      [4, 2, 7500, `art`],
      [4, `H`],
    ],
  ],
  [
    80,
    [
      [1, 8, 5000, `gems`],
      [4, `H`],
    ],
  ],

  [
    85,
    [
      [3, 6, 1000, `gems`],
      [4, `I`],
    ],
  ],
  [
    90,
    [
      [1, 10, 2500, `art`],
      [4, `I`],
    ],
  ],
  [
    95,
    [
      [4, 2, 7500, `art`],
      [4, `I`],
    ],
  ],
  [
    100,
    [
      [1, 8, 5000, `gems`],
      [4, `I`],
    ],
  ],
]);
// Other Item Tables
const trinkets = [
  `A mummified goblin hand`,
  `A piece of crystal that faintly glows in the moonlight`,
  `A gold coin minted in an unknown land`,
  `A diary written in a language you don’t know`,
  `A brass ring that never tarnishes`,
  `An old chess piece made from glass`,
  `A pair of knucklebone dice, each with a skull symbol on the side that would normally show six pips`,
  `A small idol depicting a nightmarish creature that gives you unsettling dreams when you sleep near it`,
  `A rope necklace from which dangles four mummified elf fingers`,
  `The deed for a parcel of land in a realm unknown to you`,
  `A 1-ounce block made from an unknown material`,
  `A small cloth doll skewered with needles`,
  `A tooth from an unknown beast`,
  `An enormous scale, perhaps from a dragon`,
  `A bright green feather`,
  `An old divination card bearing your likeness`,
  `A glass orb filled with moving smoke`,
  `A 1-pound egg with a bright red shell`,
  `A pipe that blows bubbles`,
  `A glass jar containing a weird bit of flesh floating in pickling fluid`,
  `A tiny gnome-crafted music box that plays a song you dimly remember from your childhood`,
  `A small wooden statuette of a smug halfling`,
  `A brass orb etched with strange runes`,
  `A multicolored stone disk`,
  `A tiny silver icon of a raven`,
  `A bag containing forty-seven humanoid teeth, one of which is rotten`,
  `A shard of obsidian that always feels warm to the touch`,
  `A dragon's bony talon hanging from a plain leather necklace`,
  `A pair of old socks`,
  `A blank book whose pages refuse to hold ink, chalk, graphite, or any other substance or marking`,
  `A silver badge in the shape of a five-pointed star`,
  `A knife that belonged to a relative`,
  `A glass vial filled with nail clippings`,
  `A rectangular metal device with two tiny metal cups on one end that throws sparks when wet`,
  `A white, sequined glove sized for a human`,
  `A vest with one hundred tiny pockets`,
  `A small, weightless stone block`,
  `A tiny sketch portrait of a goblin`,
  `An empty glass vial that smells of perfume when opened`,
  `A gemstone that looks like a lump of coal when examined by anyone but you`,
  `A scrap of cloth from an old banner`,
  `A rank insignia from a lost legionnaire`,
  `A tiny silver bell without a clapper`,
  `A mechanical canary inside a gnome-crafted lamp`,
  `A tiny chest carved to look like it has numerous feet on the bottom`,
  `A dead sprite inside a clear glass bottle`,
  `A metal can that has no opening but sounds as if it is filled with liquid, sand, spiders, or broken glass (your choice`,
  `A glass orb filled with water, in which swims a clockwork goldfish`,
  `A silver spoon with an M engraved on the handle`,
  `A whistle made from gold-colored wood`,
  `A dead scarab beetle the size of your hand`,
  `Two toy soldiers, one with a missing head`,
  `A small box filled with different-sized buttons`,
  `A candle that can’t be lit`,
  `A tiny cage with no door`,
  `An old key`,
  `An indecipherable treasure map`,
  `A hilt from a broken sword`,
  `A rabbit’s foot`,
  `A glass eye`,
  `A cameo carved in the likeness of a hideous person`,
  `A silver skull the size of a coin`,
  `An alabaster mask`,
  `A pyramid of sticky black incense that smells very bad`,
  `A nightcap that, when worn, gives you pleasant dreams`,
  `A single caltrop made from bone`,
  `A gold monocle frame without the lens`,
  `A 1-inch cube, each side painted a different color`,
  `A crystal knob from a door`,
  `A small packet filled with pink dust`,
  `A fragment of a beautiful song, written as musical notes on two pieces of parchment`,
  `A silver teardrop earring made from a real teardrop`,
  `The shell of an egg painted with scenes of human misery in disturbing detail`,
  `A fan that, when unfolded, shows a sleeping cat`,
  `A set of bone pipes`,
  `A four-leaf clover pressed inside a book discussing manners and etiquette`,
  `A sheet of parchment upon which is drawn a complex mechanical contraption`,
  `An ornate scabbard that fits no blade you have found so far`,
  `An invitation to a party where a murder happened`,
  `A bronze pentacle with an etching of a rat's head in its center`,
  `A purple handkerchief embroidered with the name of a powerful archmage`,
  `Half of a floorplan for a temple, castle, or some other structure`,
  `A bit of folded cloth that, when unfolded, turns into a stylish cap`,
  `A receipt of deposit at a bank in a far-flung city`,
  `A diary with seven missing pages`,
  `An empty silver snuffbox bearing an inscription on the surface that says "dreams"`,
  `An iron holy symbol devoted to an unknown god`,
  `A book that tells the story of a legendary hero's rise and fall, with the last chapter missing`,
  `A vial of dragon blood`,
  `An ancient arrow of elven design`,
  `A needle that never bends`,
  `An ornate brooch of dwarven design`,
  `An empty wine bottle bearing a pretty label that says, "The Wizard of Wines Winery, Red Dragon Crush, 331422-W"`,
  `A mosaic tile with a multicolored, glazed surface`,
  `A petrified mouse`,
  `A black pirate flag adorned with a dragon's skull and crossbones`,
  `A tiny mechanical crab or spider that moves about when it’s not being observed`,
  `A glass jar containing lard with a label that reads, "Griffon Grease"`,
  `A wooden box with a ceramic bottom that holds a living worm with a head on each end of its body`,
  `A metal urn containing the ashes of a hero`,
];
const commonMagicalItems = [
  `Armour of Gleaming`,
  `Bead of Nourishment`,
  `Bead of Refreshment`,
  `Boots of False Tracks`,
  `Candle of the Deep`,
  `Cast-Off Armour`,
  `Charlatan's Die`,
  `Cloak of Billowing`,
  `Claok of Many Fashions`,
  `Clockwork Amulet`,
  `Clothes of Mending`,
  `Dark Shard Amulet`,
  `Dread Helm`,
  `Ear Horn of Hearing`,
  `Enduring Spellbook`,
  `Ersatz Eye`,
  `Hat of Vermin`,
  `Hat of Wizardry`,
  `Heward's Handy Spice Pouch`,
  `Horn of Silent Alarm`,
  `Instrument of Illusion`,
  `Instrument of Scribing`,
  `Lock of Trickery`,
  `Moon-Touched Sword`,
  `Mystery Key`,
  `Orb of Direction`,
  `Orb of Time`,
  `Perfume of Bewitching`,
  `Pipe of Smoke Monsters`,
  `Pole of Angling`,
  `Pole of Collapsing`,
  `Potion of Climbing`,
  `Potion of Healing`,
  `Rope of Mending`,
  `Ruby of the War Mage`,
  `Shield of Expression`,
  `Smoldering Armour`,
  `Spell Scroll (Cantrip)`,
  `Spell Scroll (First level)`,
  `Staff of Adornment`,
  `Staff of Birdcalls`,
  `Staff of Flowers`,
  `Talking Doll`,
  `Tankard of Sobriety`,
  `Unbreakable Arrow`,
  `Veteran's Cane`,
  `Walloping Ammunition`,
  `Wand of Conducting`,
  `Wand of Pyrotechnics`,
  `Wand of Scowls`,
  `Wand of Smiles`,
];
const simpleMeleeWeapons = [
  `Club`,
  `Dagger`,
  `Greatclub`,
  `Handaxe`,
  `Javelin`,
  `Light hammer`,
  `Mace`,
  `Quaterstaff`,
  `Sickle`,
  `Spear`,
];
const simpleRangedWeapons = [`Light Crossbow`, `Dart`, `Shortbow`, `Sling`];
const martialMeleeWeapons = [
  `Battleaxe`,
  `Flail`,
  `Glaive`,
  `Greataxe`,
  `Greatsword`,
  `Halberd`,
  `Lance`,
  `Longsword`,
  `Maul`,
  `Morningstar`,
  `Pike`,
  `Rapier`,
  `Scimitar`,
  `Shortsword`,
  `Trident`,
  `War pick`,
  `Warhammer`,
  `Whip`,
];
const martialRangedWeapons = [
  `Blowgun`,
  `Hand Crossbow`,
  `Heavy Crossbow`,
  `Longbow`,
  `Net`,
];
// Quest Hook Tables
const dungeonGoals = [
  `Stop the dungeon's monstrous inhabitants from raiding the surface world. `,
  `Foil a villain's evil scheme. `,
  `Destroy a magical threat inside the dungeon.`,
  `Acquire treasure . `,
  `Find a particular item for a specific purpose.`,
  `Retrieve a stolen item hidden in the dungeon. `,
  `Find information needed for a special purpose.`,
  `Rescue a captive.`,
  `Discover the fate of a previous adventuring party.`,
  `Find an NPC who disappeared in the area.`,
  `Slay a dragon or some other challenging monster`,
  `Discover the nature and origin of a strange location or phenomenon.`,
  `Pursue fleeing foes taking refuge in the dungeon. `,
  `Escape from captivity in the dungeon. `,
  `Clear a ruin so it can be rebuilt and reoccupied. `,
  `Discover why a villain is interested in the dungeon. `,
  `Win a bet or complete a rite of passage by surviving in the dungeon for a certain amount of time.`,
  `Parley with a villain in the dungeon. `,
  `Hide from a threat outside the dungeon. `,
  `Roll twice, ignoring resu lts of 20. `,
];
const wildernessGoals = [
  `Locate a dungeon or other site of interest (roll on the Dungeon Goals table to find out why).`,
  `Assess the scope of a natural or unnatural disaster.`,
  `Escort an NPC to a destination.`,
  `Arrive at a destination without being seen by the villain's forces.`,
  `Stop monsters from raiding caravans and farms.`,
  `Establish trade with a distant town.`,
  `Protect a caravan traveling to a distant town .`,
  `Map a new land.`,
  `Find a place to establish a colony.`,
  `Find a natural resource.`,
  `Hunt a specific monster.`,
  `Return home from a distant place.`,
  `Obtain information from a reclusive hermit.`,
  `Find an object that was lost in the wilds.`,
  `Discover the fate of a missing group of explorers.`,
  `Pursue fleeing foes.`,
  `Assess the size of an approaching army.`,
  `Escape the reign of a tyrant.`,
  `Protect a wilderness site from attackers.`,
  `Roll twice, ignoring results of 20.`,
];
const otherGoals = [
  `Seize control of a fortified location such as a fortress, town, or ship.`,
  `Defend a location from attackers.`,
  `Retrieve an object from inside a secure location in a settlement.`,
  `Retrieve an object from a caravan.`,
  `Salvage an object or goods from a lost vessel or caravan.`,
  `Break a prisoner out of a jail or prison camp.`,
  `Escape from a jail or prison camp. `,
  `Successfully travel through an obstacle course to gain recognition or reward.`,
  `Infiltrate a fortified location.`,
  `Find the source of strange occurrences in a haunted house or other location.`,
  `Interfere with the operation of a business.`,
  `Rescue a character, monster, or object from a natural or unnatural disaster.`,
];
// Tavern Name Tables
const tavernFirst = [
  `The Silver`,
  `The Golden`,
  `The Staggering`,
  `The Laughing`,
  `The Prancing`,
  `The Gilded`,
  `The Running`,
  `The Howling`,
  `The Slaughtered`,
  `The Leering`,
  `The Drunken`,
  `The Leaping`,
  `The Roaring`,
  `The Frowning`,
  `The Lonely`,
  `The Wandering`,
  `The Mysterious`,
  `The Barking`,
  `The Black`,
  `The Gleaming`,
];
const tavernSecond = [
  `Eel`,
  `Dolphin`,
  `Dwarf`,
  `Pegasus`,
  `Pony`,
  `Rose`,
  `Stag`,
  `Wolf`,
  `Lamb`,
  `Demon`,
  `Goat`,
  `Spirit`,
  `Horde`,
  `Jester`,
  `Mountain`,
  `Eagle`,
  `Satyr`,
  `Dog`,
  `Spider`,
  `Star`,
];
// God Tables
const godsOfTheForgottenRealms = new Map([
  [
    `Auril`,
    {
      epitaph: `godess of winter`,
      alignment: `NE`,
      domain: [`Nature`, `Tempest`],
      symbol: `Six-pointed snowflake`,
      shortSymbol: [`snowflake`],
    },
  ],
  [
    `Azuth`,
    {
      epitaph: `god of wizards`,
      alignment: `LN`,
      domain: [`Knowledge`],
      symbol: `Left hand pointing upward, outlined in fire`,
      shortSymbol: [`flaming hand`, `burning hand`, `pointed finger`],
    },
  ],
  [
    `Bane`,
    {
      epitaph: `god of tyranny`,
      alignment: `LE`,
      domain: [`War`],
      symbol: `Upright black right hand, thumb and fingers together`,
      shortSymbol: [`black hand`, `black palm`],
    },
  ],
  [
    `Beshaba`,
    {
      epitaph: `godess of misfortune`,
      alignment: `CE`,
      domain: [`Trickery`],
      symbol: `Black antlers`,
      shortSymbol: [`antlers`, `black antlers`],
    },
  ],
  [
    `Bhaal`,
    {
      epitaph: `god of murder`,
      alignment: `NE`,
      domain: [`Death`],
      symbol: `Skull surrounded by a ring of blood droplets`,
      shortSymbol: [`skull`, `bloody skull`, `blood-ringed skull`],
    },
  ],
  [
    `Chauntea`,
    {
      epitaph: ` goddess of agriculture`,
      alignment: `NG`,
      domain: [`Life`],
      symbol: `Sheaf of grain or a blooming rose over grain`,
      shortSymbol: [`grain`, `rose`, `blooming rose`],
    },
  ],
  [
    `Cyric`,
    {
      epitaph: `god of lies`,
      alignment: `CE`,
      domain: [`Trickery`],
      symbol: `White jawless skull on black or purple sunburst`,
      shortSymbol: [`skull`, `pale skull`, `jawless skull`, `sunburst`],
    },
  ],
  [
    `Deneir`,
    {
      epitaph: `god of writing`,
      alignment: `NG`,
      domain: [`Knowledge`],
      symbol: ` Lit candle above an open eye`,
      shortSymbol: [`candle`, `lit candle`, `open eye`],
    },
  ],
  [
    `Eldath`,
    {
      epitaph: `goddess of peace`,
      alignment: `NG`,
      domain: [`Life`, `Nature`],
      symbol: `Waterfall plunging into still pool`,
      shortSymbol: [`waterfall`, `cascade`, `pool`, `still pool`],
    },
  ],
  [
    `Gond`,
    {
      epitaph: `god of craft`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Toothed cog with four spokes`,
      shortSymbol: [`cog`, `spoked cog`, `toothed cog`, `cog and spokes`],
    },
  ],
  [
    `Helm`,
    {
      epitaph: `god of protection`,
      alignment: `LN`,
      domain: [`Life`, `Light`],
      symbol: `Staring eye on upright left gauntlet`,
      shortSymbol: [`eye`, `gauntlet`, `iron fist`, `left fist`, `staring eye`],
    },
  ],
  [
    `Ilmater`,
    {
      epitaph: `god of endurance`,
      alignment: `LG`,
      domain: [`Life`],
      symbol: `Hands bound at the wrist with red cord`,
      shortSymbol: [`hands`, `bound hands`, `cord`, `red cord`],
    },
  ],
  [
    `Kelemvor`,
    {
      epitaph: `god of the dead`,
      alignment: `LN`,
      domain: [`Death`],
      symbol: `Upright skeletal arm holding balanced scales`,
      shortSymbol: [
        `arm`,
        `skeletal arm`,
        `scales`,
        `balanced scales`,
        `arm and scales`,
      ],
    },
  ],
  [
    `Lathander`,
    {
      epitaph: `god of birth and renewal`,
      alignment: `NG`,
      domain: [`Life`, `Light`],
      symbol: `Road traveling into a sunrise`,
      shortSymbol: [`road`, `rising sun`, `well-lit road`],
    },
  ],
  [
    `Leira`,
    {
      epitaph: `goddess of illusion`,
      alignment: `CN`,
      domain: [`Trickery`],
      symbol: `Point-down triangle containing a swirl of mist`,
      shortSymbol: [`mist`, `mists`, `swirling mist`],
    },
  ],
  [
    `Lliira`,
    {
      epitaph: `goddess of joy`,
      alignment: `CG`,
      domain: [`Life`],
      symbol: `Triangle of three six-pointed stars`,
      shortSymbol: [`stars`, `six-pointed stars`],
    },
  ],
  [
    `Loviatar`,
    {
      epitaph: `goddess of pain`,
      alignment: `LE`,
      domain: [`Death`],
      symbol: `Nine-tailed barbed scourge`,
      shortSymbol: [`scourge`, `barbed scourge`, `nine-tailed scourge`],
    },
  ],
  [
    `Malar`,
    {
      epitaph: `god of the hunt`,
      alignment: `CE`,
      domain: [`Nature`],
      symbol: `Clawed paw`,
      shortSymbol: [`claws`, `paw`, `clawed paw`],
    },
  ],
  [
    `Mask`,
    {
      epitaph: `god of thieves`,
      alignment: `CN`,
      domain: [`Trickery`],
      symbol: `Black mask`,
      shortSymbol: [`mask`, `black mask`],
    },
  ],
  [
    `Mielikki`,
    {
      epitaph: `goddess of forests`,
      alignment: `NG`,
      domain: [`Nature`],
      symbol: `Unicorn’s head`,
      shortSymbol: [`unicorn`],
    },
  ],
  [
    `Milil`,
    {
      epitaph: `god of poetry song`,
      alignment: `NG`,
      domain: [`Light`],
      symbol: `Five-stringed harp made of leaves`,
      shortSymbol: [`harp`, `leafy harp`, `five-stringed harp`],
    },
  ],
  [
    `Myrkul`,
    {
      epitaph: `god of death`,
      alignment: `NE`,
      domain: [`Death`],
      symbol: `White human skull`,
      shortSymbol: [`skull`, `white skull`, `pale skull`],
    },
  ],
  [
    `Mystra`,
    {
      epitaph: `Mystra`,
      alignment: `NG`,
      domain: [`Knowledge`],
      symbol: `Circle of seven stars, or nine stars encircling a flowing red mist, or a single star`,
      shortSymbol: [`seven stars`, `nine stars`, `mist`, `red mist`, `star`],
    },
  ],
  [
    `Oghma`,
    {
      epitaph: `god of knowledge`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Blank scroll`,
      shortSymbol: [`scroll`, `blank scroll`],
    },
  ],
  [
    `Savras`,
    {
      epitaph: `god of divination and fate`,
      alignment: `LN`,
      domain: [`Knowledge`],
      symbol: `Crystal ball containing many kinds of eyes`,
      shortSymbol: [`ball`, `crystal ball`, `eyes`, `many eyes`],
    },
  ],
  [
    `Selune`,
    {
      epitaph: ` goddess of the moon`,
      alignment: `CG`,
      domain: [`Knowledge`, `Life`],
      symbol: `Pair of eyes surrounded by seven stars`,
      shortSymbol: [`eyes`, `stars`, `seven stars`],
    },
  ],
  [
    `Shar`,
    {
      epitaph: `goddess of darkness and loss`,
      alignment: `NE`,
      domain: [`Death`, `Trickery`],
      symbol: `Black disk encircled with a border`,
      shortSymbol: [`disk`, `black disk`],
    },
  ],
  [
    `Silvanus`,
    {
      epitaph: `god of wild nature`,
      alignment: `N`,
      domain: [`Nature`],
      symbol: `Oak leaf`,
      shortSymbol: [`leaf`, `oak leaf`],
    },
  ],
  [
    `Sune`,
    {
      epitaph: `goddess of love and beauty`,
      alignment: `CG`,
      domain: [`Life`, `Light`],
      symbol: `Face of a beautiful red-haired woman`,
      shortSymbol: [`face`, `beautiful face`, `red hair`],
    },
  ],
  [
    `Talona`,
    {
      epitaph: ` goddess of disease and poison`,
      alignment: `CE`,
      domain: [`Death`],
      symbol: `Three teardrops on a triangle`,
      shortSymbol: [`tears`, `three tears`],
    },
  ],
  [
    `Talos`,
    {
      epitaph: `god of storms`,
      alignment: `CE`,
      domain: [`Tempst`],
      symbol: `Three lightning bolts radiating from a central point`,
      shortSymbol: [`lightning bolts`, `bolts`, `three bolts`],
    },
  ],
  [
    `Tempus`,
    {
      epitaph: `god of war`,
      alignment: `N`,
      domain: [`War`],
      symbol: `Upright flaming sword`,
      shortSymbol: [
        `sword`,
        `upright sword`,
        `flaming sword`,
        `burning sword`,
        `burning blade`,
      ],
    },
  ],
  [
    `Torm`,
    {
      epitaph: `god of courage and self-sacrifice`,
      alignment: `LG`,
      domain: [`War`],
      symbol: `White right gauntlet`,
      shortSymbol: [
        `gauntlet`,
        `iron fist`,
        `white gauntlet`,
        `right gauntlet`,
        `right fist`,
      ],
    },
  ],
  [
    `Tymora`,
    {
      epitaph: `goddess of good fortune`,
      alignment: `CG`,
      domain: [`Trickery`],
      symbol: `Face-up coin`,
      shortSymbol: [`coin`, `face-up coin`, `lucky coin`],
    },
  ],
  [
    `Tyr`,
    {
      epitaph: `god of justice`,
      alignment: `LG`,
      domain: [`War`],
      symbol: `Balanced scales resting on a warhammer`,
      shortSymbol: [
        `scales`,
        `hammer`,
        `warhammer`,
        `hammer and scales`,
        `balanced scales`,
      ],
    },
  ],
  [
    `Umberlee`,
    {
      epitaph: `goddess of the sea`,
      alignment: `CE`,
      domain: [`Tempest`],
      symbol: `Wave curling left and right`,
      shortSymbol: [`wave`, `heaving wave`, `great wave`],
    },
  ],
  [
    `Waukeen`,
    {
      epitaph: `goddess of trade`,
      alignment: `N`,
      domain: [`Knowledge`, `Trickery`],
      symbol: `Upright coin with Waukeen’s profile facing left`,
      shortSymbol: [`coin`, `profitable coin`],
    },
  ],
]);
const godsOfGreyhawk = new Map([
  [
    `Beory`,
    {
      epitaph: `godess of nature`,
      alignment: `N`,
      domain: [`Nature`],
      symbol: `Green disk`,
      shortSymbol: [`disk`, `green disk`],
    },
  ],
  [
    `Boccob`,
    {
      epitaph: `god of magic`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Eye within a pentagram`,
      shortSymbol: [`eye`, `pentagram`],
    },
  ],
  [
    `Celestian`,
    {
      epitaph: ` god of stars and wanderers`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Arc of seven stars inside a circle`,
      shortSymbol: [`stars`],
    },
  ],
  [
    `Ehlonna`,
    {
      epitaph: `goddess of woodlands`,
      alignment: `NG`,
      domain: [`Life`, `Nature`],
      symbol: `Unicorn horn`,
      shortSymbol: [`horn`, `unicorn`],
    },
  ],
  [
    `Erythnu`,
    {
      epitaph: `god of envy and slaughter`,
      alignment: `CE`,
      domain: [`War`],
      symbol: ` Blood drop`,
      shortSymbol: [`blood`, `blood drop`],
    },
  ],
  [
    `Fharlanghn`,
    {
      epitaph: `god of horizons and travel`,
      alignment: `NG`,
      domain: [`Knowledge`, `Trickery`],
      symbol: `Circle crossed by a curved horizon line`,
      shortSymbol: [`horizon`],
    },
  ],
  [
    `Heironeous`,
    {
      epitaph: `god of chivalry and valor`,
      alignment: `LG`,
      domain: [`War`],
      symbol: `Lightning bolt`,
      shortSymbol: [`bolt`, `lightning`, `lightning bolt`],
    },
  ],
  [
    `Hextor`,
    {
      epitaph: `god of war and discord`,
      alignment: `LE`,
      domain: [`War`],
      symbol: `Six arrows facing downward in a fan`,
      shortSymbol: [`arrows`, `six arrows`, `fanned arrows`],
    },
  ],
  [
    `Kord`,
    {
      epitaph: `god of athletics and sport`,
      alignment: `CG`,
      domain: [`Tempest`, `War`],
      symbol: `Four spears and four maces radiating out from a central point`,
      shortSymbol: [`spears`, `maces`, `spears and maces`],
    },
  ],
  [
    `Istus`,
    {
      epitaph: ` goddess of fate and destiny`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Weaver's spindle with three strands`,
      shortSymbol: [
        `spindle`,
        `strands`,
        `first strand`,
        `second strand`,
        `third strand`,
      ],
    },
  ],
  [
    `Iuz`,
    {
      epitaph: `god of pain and oppression`,
      alignment: `CE`,
      domain: [`Death`],
      symbol: `Grinning human skull`,
      shortSymbol: [`skull`, `grinning skull`],
    },
  ],
  [
    `Nerull`,
    {
      epitaph: `god of death`,
      alignment: `NE`,
      domain: [`Death`],
      symbol: `Skull with either a sickle or a scythe`,
      shortSymbol: [
        `skull`,
        `scythe`,
        `sickle`,
        `skull and sickle`,
        `skull and scythe`,
      ],
    },
  ],
  [
    `Obad-Hai`,
    {
      epitaph: `god of nature`,
      alignment: `N`,
      domain: [`Nature`],
      symbol: `Oak leaf and acorn`,
      shortSymbol: [`leaf`, `oak leaf`, `acorn`],
    },
  ],
  [
    `Olidammara`,
    {
      epitaph: `god of revelry`,
      alignment: `CN`,
      domain: [`Trickery`],
      symbol: `Laughing mask`,
      shortSymbol: [`mask`, `laughing mask`],
    },
  ],
  [
    `Pelor`,
    {
      epitaph: `god of the sun and healing`,
      alignment: `NG`,
      domain: [`Life`, `Light`],
      symbol: `Sun`,
      shortSymbol: [`light`, `sun`],
    },
  ],
  [
    `Pholtus`,
    {
      epitaph: `god of light and law`,
      alignment: `LG`,
      domain: [`Light`],
      symbol: `Silver sun or full moon partially eclipsed by a smaller crescent moon`,
      shortSymbol: [
        `sun`,
        `silver sun`,
        `moon`,
        `full moon`,
        `crescent moon`,
        `twin moons`,
      ],
    },
  ],
  [
    `Ralishaz`,
    {
      epitaph: `god of ill luck and insanity`,
      alignment: `CN`,
      domain: [`Trickery`],
      symbol: `Three bone fate-casting sticks`,
      shortSymbol: [`bones`, `three bones`, `sticks`, `fate-sticks`],
    },
  ],
  [
    `Rao`,
    {
      epitaph: `god of peace and reason`,
      alignment: `LG`,
      domain: [`Knowledge`],
      symbol: `White heart`,
      shortSymbol: [`heart`, `white heart`, `pure heart`],
    },
  ],
  [
    `St. Cuthbert`,
    {
      epitaph: `god of common sense and zeal`,
      alignment: `LN`,
      domain: [`Knowledge`],
      symbol: `Circle at the center of a starburst of lines`,
      shortSymbol: [`starburst`, `star`, `circle`],
    },
  ],
  [
    `Tharizdun`,
    {
      epitaph: `god of eternal darkness`,
      alignment: `CE`,
      domain: [`Trickery`],
      symbol: `dark spiral or inverted ziggurat`,
      shortSymbol: [`spiral`, `dark spiral`, `ziggurat`],
    },
  ],
  [
    `Trithereon`,
    {
      epitaph: `god of liberty and retribution`,
      alignment: `CG`,
      domain: [`War`],
      symbol: `Triskelion`,
      shortSymbol: [`triskelion`, `three spirals`],
    },
  ],
  [
    `Ulaa`,
    {
      epitaph: `godess of hills and mountains`,
      alignment: `LG`,
      domain: [`Life`, `War`],
      symbol: `Mountain with a circle at its heart`,
      shortSymbol: [`mountain`, `circle`],
    },
  ],
  [
    `Vecna`,
    {
      epitaph: `god of evil secrets`,
      alignment: `NE`,
      domain: [`Knowledge`],
      symbol: `Hand with eye in the palm`,
      shortSymbol: [`hand`, `eye`, `palm`, `eyed palm`],
    },
  ],
  [
    `Wee Jas`,
    {
      epitaph: `godess of magic and death`,
      alignment: `LN`,
      domain: [`Death`, `Knowledge`],
      symbol: `Red skull in front of  a fireball`,
      shortSymbol: [`skull`, `red skull`, `fireball`, `flame`],
    },
  ],
]);
const godsOfDragonlance = new Map([
  [
    `Paladine`,
    {
      epitaph: `god ff rulers and guardians`,
      alignment: `LG`,
      domain: [`War`],
      symbol: `Silver triangle`,
      shortSymbol: [`triangle`, `silver triangle`],
    },
  ],
  [
    `Branchala`,
    {
      epitaph: `god of music`,
      alignment: `NG`,
      domain: [`Light`],
      symbol: `Bard's harp`,
      shortSymbol: [`harp`],
    },
  ],
  [
    `Habbakuk`,
    {
      epitaph: `god of animals and the sea`,
      alignment: `NG`,
      domain: [`Nature`, `Tempest`],
      symbol: `Blue bird`,
      shortSymbol: [`bird`, `blue bird`],
    },
  ],
  [
    `Kiri-Jolith`,
    {
      epitaph: `god of honour and war`,
      alignment: `LG`,
      domain: [`War`],
      symbol: `Bison's horns`,
      shortSymbol: [`horns`],
    },
  ],
  [
    `Majere`,
    {
      epitaph: `god of meditation and order`,
      alignment: `LG`,
      domain: [`KNowledge`],
      symbol: `Copper spider`,
      shortSymbol: [`spider`, `copper spider`],
    },
  ],
  [
    `Mishakal`,
    {
      epitaph: `godess of healing`,
      alignment: `LG`,
      domain: [`Knowledge`, `Life`],
      symbol: `Blue infinity sign`,
      shortSymbol: [`sign`, `symbol`],
    },
  ],
  [
    `Solinari`,
    {
      epitaph: `god of good magic`,
      alignment: `LG`,
      domain: [`No Clerics`],
      symbol: `White circle or sphere`,
      shortSymbol: [`circle`, `sphere`, `white circle`, `white sphere`],
    },
  ],
  [
    `Gilean`,
    {
      epitaph: `god of knowledge`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Open book`,
      shortSymbol: [`book`, `open book`],
    },
  ],
  [
    `Chioslev`,
    {
      epitaph: `godess of nature`,
      alignment: `N`,
      domain: [`Nature`],
      symbol: `Feather`,
      shortSymbol: [`feather`],
    },
  ],
  [
    `Reorx`,
    {
      epitaph: `god of craft`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Forging hammer`,
      shortSymbol: [`hammer`, `heavy hammer`, `forging hammer`],
    },
  ],
  [
    `Shinare`,
    {
      epitaph: `godess of wealth and trade`,
      alignment: `N`,
      domain: [`Knowledge`, `Trickery`],
      symbol: `Griffon's wing`,
      shortSymbol: [`wing`, `griffon's wing`],
    },
  ],
  [
    `Sirrion`,
    {
      epitaph: `god of fire and change`,
      alignment: `N`,
      domain: [`Nature`],
      symbol: `Multi-colored fire`,
      shortSymbol: [`fire`, `flame`, `flames`],
    },
  ],
  [
    `Zivilyn`,
    {
      epitaph: `god of wisdom`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Great green or gold tree`,
      shortSymbol: [
        `tree`,
        `great tree`,
        `green tree`,
        `gold tree`,
        "golden tree",
      ],
    },
  ],
  [
    `Lunitari`,
    {
      epitaph: `goddess of neutral magic`,
      alignment: `N`,
      domain: [`No Clerics`],
      symbol: `Red circle or sphere`,
      shortSymbol: [`circle`, `sphere`, `red circle`, `red sphere`],
    },
  ],
  [
    `Takhisis`,
    {
      epitaph: `goddess of night and hatred`,
      alignment: `LE`,
      domain: [`Death`],
      symbol: `Black crescent`,
      shortSymbol: [`crescent`, `black crescent`],
    },
  ],
  [
    `Chemosh`,
    {
      epitaph: `god of the undead`,
      alignment: `LE`,
      domain: [`Death`],
      symbol: `Yellow skull`,
      shortSymbol: [`skull`, `yellow skull`],
    },
  ],
  [
    `Hiddukel`,
    {
      epitaph: `god of lies and greed`,
      alignment: `CE`,
      domain: [`Trickery`],
      symbol: `Broken merchant’s scales`,
      shortSymbol: [`scales`, `broken scales`],
    },
  ],
  [
    `Morgion`,
    {
      epitaph: ` god of disease and secrecy`,
      alignment: `NE`,
      domain: [`Death`],
      symbol: `Stylized red condor`,
      shortSymbol: [`condor`, `red condor`],
    },
  ],
  [
    `Zeboim`,
    {
      epitaph: `goddess of the sea and storms`,
      alignment: `CE`,
      domain: [`Tempest`],
      symbol: `Turtle shell`,
      shortSymbol: [`shell`, `turtle shell`],
    },
  ],
  [
    `Nuitari`,
    {
      epitaph: `god of evil magic`,
      alignment: `LE`,
      domain: [`No Clerics`],
      symbol: `Black circle or sphere`,
      shortSymbol: [`circle`, `sphere`, `black circle`, `black sphere`],
    },
  ],
]);
const godsOfEberron = new Map([
  [
    `Arawai`,
    {
      epitaph: `godess of fertility`,
      alignment: `NG`,
      domain: [`Life`, `Nature`],
      symbol: `Sheaf of wheat tied with green ribbon`,
      shortSymbol: [`sheaf`, `wheat`, `tied sheaf`, `grain`],
    },
  ],
  [
    `Aureon`,
    {
      epitaph: `god of law and knowledge`,
      alignment: `LN`,
      domain: [`Knowledge`],
      symbol: `Open tome`,
      shortSymbol: [`tome`, `open tome`],
    },
  ],
  [
    `Balinor`,
    {
      epitaph: `god of beasts and the hunt`,
      alignment: `N`,
      domain: [`Life`, `Nature`],
      symbol: `Pair of antlers`,
      shortSymbol: [`antlers`],
    },
  ],
  [
    `Boldrei`,
    {
      epitaph: `godess of community and home`,
      alignment: `LG`,
      domain: [`Life`],
      symbol: `Fire in a stone hearth`,
      shortSymbol: [
        `fire`,
        `hearth`,
        `heated hearth`,
        `stone hearth`,
        `warming flames`,
      ],
    },
  ],
  [
    `Dol Arrah`,
    {
      epitaph: `godess of sunlight and honour`,
      alignment: `LG`,
      domain: [`Light`, `War`],
      symbol: `Rising sun`,
      shortSymbol: [`sun`, `dawning sun`, `rising sun`],
    },
  ],
  [
    `Dol Dorn`,
    {
      epitaph: `god of strength at arms`,
      alignment: `CG`,
      domain: [`War`],
      symbol: `Longsword crossed over a shield`,
      shortSymbol: [
        `sword`,
        `shield`,
        `mighty sword`,
        `blade`,
        `longsword`,
        `mighty shield`,
      ],
    },
  ],
  [
    `Kol Korran`,
    {
      epitaph: `god of trade and wealth`,
      alignment: `N`,
      domain: [`Trickery`],
      symbol: `Nine-sided gold coin`,
      shortSymbol: [
        `coin`,
        `gold coin`,
        `golden coin`,
        `nine-sided coin`,
        `many-sided coin`,
      ],
    },
  ],
  [
    `Olladra`,
    {
      epitaph: `goddess of good fortune`,
      alignment: `NG`,
      domain: [`Life`, `Trickery`],
      symbol: `Domino`,
      shortSymbol: [`domino`],
    },
  ],
  [
    `Onatar`,
    {
      epitaph: `god of craft`,
      alignment: `NG`,
      domain: [` Knowledge`],
      symbol: `Crossed hammer and tongs`,
      shortSymbol: [`hammer`, `tongs`, `hammer and tongs`, `tools`],
    },
  ],
  [
    `The Devourer`,
    {
      epitaph: `god of nature’s wrath`,
      alignment: `NE`,
      domain: [`Tempest`],
      symbol: `Bundle of five sharpened bones`,
      shortSymbol: [`bones`, `five bones`, `many bones`, `sharpened bones`],
    },
  ],
  [
    `The Fury`,
    {
      epitaph: `goddess of wrath and madness`,
      alignment: `NE`,
      domain: [` War`],
      symbol: `Winged wyrm with woman’s head and upper body`,
      shortSymbol: [`wyrm`, `winged wyrm`],
    },
  ],
  [
    `The Keeper`,
    {
      epitaph: `god of greed and death`,
      alignment: `NE`,
      domain: [`Death`],
      symbol: `Dragonshard stone in the shape of a fang`,
      shortSymbol: [`dragonshard`, `fang`, `stone fang`],
    },
  ],
  [
    `The Mockery`,
    {
      epitaph: `god of violence and treachery`,
      alignment: `NE`,
      domain: [`War`],
      symbol: `Five blood-spattered tools
  `,
      shortSymbol: [`bloody tools`, `five tools`, `many tools`],
    },
  ],
  [
    `The Shadow`,
    {
      epitaph: `god of dark magic`,
      alignment: `CE`,
      domain: [`Knowledge`],
      symbol: `Obsidian tower`,
      shortSymbol: [`tower`, `obsidian tower`, `black tower`],
    },
  ],
  [
    `The Traveler`,
    {
      epitaph: `deity of chaos and change`,
      alignment: `CN`,
      domain: [`Knowledge`, `Trickery`],
      symbol: `Four crossed, rune-inscribed bones`,
      shortSymbol: [`bones`, `crossed bones`, `carved bones`, `rune-bones`],
    },
  ],
  [
    `The Silver Flame`,
    {
      epitaph: `deity of protection and good`,
      alignment: `LG`,
      domain: [`Light`, `Life`, `War`],
      symbol: `Flame drawn on silver or molded from silver`,
      shortSymbol: [`flame`, `silver flame`],
    },
  ],
]);
const godsOfNonHumans = new Map([
  [
    `Bahamut`,
    {
      epitaph: `dragon god of good`,
      alignment: `LG`,
      domain: [`Life`, `War`],
      symbol: `Dragon’s head in profile`,
      shortSymbol: [
        `head`,
        `teeth`,
        `fangs`,
        `breath`,
        `eyes`,
        `claws`,
        `visage`,
      ],
    },
  ],
  [
    `Blibdoolpoolp`,
    {
      epitaph: `kuo-toa goddess`,
      alignment: `NE`,
      domain: [`Death`],
      symbol: `Lobster head or black pearl`,
      shortSymbol: [`lobster`, `lobster's head`, `pearl`, `black pearl`],
    },
  ],
  [
    `Corellon Larethian`,
    {
      epitaph: `elf deity of art and magic `,
      alignment: `CG`,
      domain: [`Light`],
      symbol: `Quarter moon or starburst`,
      shortSymbol: [`moon`, `quarter moon`, `starburst`],
    },
  ],
  [
    `Deep Sashelas`,
    {
      epitaph: `elf god of the sea`,
      alignment: `CG`,
      domain: [`Nature`, `Tempest`],
      symbol: `Dolphin`,
      shortSymbol: [`dolphin`],
    },
  ],
  [
    `Eadro`,
    {
      epitaph: `merfolk deity of the sea`,
      alignment: `N`,
      domain: [`Nature`, `Tempest`],
      symbol: `Spiral design`,
      shortSymbol: [`spiral`],
    },
  ],
  [
    `Garl Glittergold`,
    {
      epitaph: `gnome god of trickery and wiles`,
      alignment: `LG`,
      domain: [`Trickery`],
      symbol: `Gold nugget`,
      shortSymbol: [`nugget`, `gold nugget`],
    },
  ],
  [
    `Grolantor`,
    {
      epitaph: `hill giant god of war`,
      alignment: `CE`,
      domain: [`War`],
      symbol: `Wooden club`,
      shortSymbol: [`club`, `wooden club`, `big club`],
    },
  ],
  [
    `Gruumsh`,
    {
      epitaph: `orc god of storms and war`,
      alignment: `CE`,
      domain: [`Tempest`, `War`],
      symbol: `Unblinking eye`,
      shortSymbol: [`eye`, `unblinking eye`],
    },
  ],
  [
    `Hruggek`,
    {
      epitaph: `bugbear god of violence `,
      alignment: `CE`,
      domain: [`War`],
      symbol: `Morningstar`,
      shortSymbol: [`morningstar`],
    },
  ],
  [
    `Kurtulmak`,
    {
      epitaph: `kobold god of war and mining`,
      alignment: `LE`,
      domain: [`War`],
      symbol: `Gnome skull`,
      shortSymbol: [`skull`, `gnome-skull`],
    },
  ],
  [
    `Laogzed`,
    {
      epitaph: `troglodyte god of hunger`,
      alignment: `CE`,
      domain: [`Death`],
      symbol: `Image of the lizard/toad god`,
      shortSymbol: [`image`],
    },
  ],
  [
    `Lolth`,
    {
      epitaph: `drow goddess of spiders`,
      alignment: `CE`,
      domain: [`Trickery`],
      symbol: `Spider`,
      shortSymbol: [`spider`],
    },
  ],
  [
    `Maglubiyet`,
    {
      epitaph: `goblinoid god of war`,
      alignment: `LE`,
      domain: [`War`],
      symbol: `Bloody axe`,
      shortSymbol: [`axe`, `bloody axe`],
    },
  ],
  [
    `Moradin`,
    {
      epitaph: `dwarf god of creation`,
      alignment: `LG`,
      domain: [`Knowledge`],
      symbol: `Hammer and anvil`,
      shortSymbol: [`hammer`, `anvil`, `hammer and anvil`],
    },
  ],
  [
    `Rillifane Rallathil`,
    {
      epitaph: `wood elf god of nature`,
      alignment: `CG`,
      domain: [`Nature`],
      symbol: `Oak`,
      shortSymbol: [`oak`],
    },
  ],
  [
    `Sehanine Moonbow`,
    {
      epitaph: `elf goddess of the moon`,
      alignment: `CG`,
      domain: [`Trickery`],
      symbol: `Crescent moon`,
      shortSymbol: [`moon`, `crescent moon`],
    },
  ],
  [
    `Sekolah`,
    {
      epitaph: `sahuagin god of the hunt`,
      alignment: `LE`,
      domain: [`Nature`, `Tempest`],
      symbol: `Shark`,
      shortSymbol: [`shark`, `shark's teeth`, `shark's fins`, `shark's maw`],
    },
  ],
  [
    `Semuanya`,
    {
      epitaph: `lizardfolk deity of survival`,
      alignment: `N`,
      domain: [`Life`],
      symbol: `Egg`,
      shortSymbol: [`egg`, `shell`, `yolk`, `white`],
    },
  ],
  [
    `Skerrit`,
    {
      epitaph: `centaur and satyr god of nature`,
      alignment: `N`,
      domain: [`Nature`],
      symbol: `Oak growing from acorn`,
      shortSymbol: [`oak`, `acorn`, `growing oak`],
    },
  ],
  [
    `Skoraeus Stonebones`,
    {
      epitaph: `god of stone giants and art`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Stalactite`,
      shortSymbol: [`stalactite`],
    },
  ],
  [
    `Surtur`,
    {
      epitaph: `god of fire giants and craft `,
      alignment: `LE`,
      domain: [`Knowledge`, `War`],
      symbol: `Flaming sword`,
      shortSymbol: [`sword`, `flaming sword`, `mighty flaming sword`],
    },
  ],
  [
    `Thrym`,
    {
      epitaph: `god of frost giants and strength`,
      alignment: `CE`,
      domain: [`War`],
      symbol: `White double-bladed axe`,
      shortSymbol: [`axe`, `mighty axe`, `white axe`],
    },
  ],
  [
    `Tiamat`,
    {
      epitaph: `dragon goddess of evil `,
      alignment: `LE`,
      domain: [`Trickery`],
      symbol: `Dragon head with five claw marks`,
      shortSymbol: [
        `head`,
        `teeth`,
        `fangs`,
        `breath`,
        `eyes`,
        `claws`,
        `clawed visage`,
      ],
    },
  ],
  [
    `Yondalla`,
    {
      epitaph: `halfling goddess of fertility and protection`,
      alignment: `LG`,
      domain: [`Life`],
      symbol: `Shield`,
      shortSymbol: [`shield`],
    },
  ],
]);
// Pantheon list for random pantheons
const pantheonList = [
  godsOfTheForgottenRealms,
  godsOfGreyhawk,
  godsOfDragonlance,
  godsOfEberron,
  godsOfNonHumans,
];
// God Object for generateReligiousOath
const godsObject = {
  "Gods of the Forgotten Realms": [
    `Auril`,
    `Azuth`,
    `Bane`,
    `Beshaba`,
    `Bhaal`,
    `Chauntea`,
    `Cyric`,
    `Deneir`,
    `Eldath`,
    `Gond`,
    `Helm`,
    `Ilmater`,
    `Kelemvor`,
    `Lathander`,
    `Leira`,
    `Lliira`,
    `Loviatar`,
    `Malar`,
    `Mask`,
    `Mielikki`,
    `Milil`,
    `Myrkul`,
    `Mystra`,
    `Oghma`,
    `Savras`,
    `Selune`,
    `Shar`,
    `Silvanus`,
    `Sune`,
    `Talona`,
    `Talos`,
    `Tempus`,
    `Torm`,
    `Tymora`,
    `Umberlee`,
    `Waukeen`,
  ],
  "Gods of Greyhawk": [
    `Beory`,
    `Boccob`,
    `Celestian`,
    `Elhonna`,
    `Erythnul`,
    `Fharlanghn`,
    ` Heironeous`,
    `Hextor`,
    `Kord`,
    `Incabulos`,
    `Istus`,
    `Iuz`,
    `Nerull`,
    `Obad-Hai`,
    `Olidammara`,
    `Pelor`,
    `Pholtus`,
    `Ralishaz`,
    `Rao`,
    `St. Cuthbert`,
    `Tharizdun`,
    `Trithereon`,
    `Ulaa`,
    `Vecna `,
    `Wee Jas`,
  ],
  "Gods of Dragonlance": [
    `Branchala`,
    `Habbakuk`,
    `Kiri-Jolith`,
    `Majere`,
    `Mishakal`,
    `Paladine`,
    `Solinari`,
    `Chislev`,
    `Gilean`,
    `Lunitari`,
    `Reorx`,
    `Shinare`,
    `Sirrion`,
    `Zivilyn`,
    `Chemosh`,
    `Hiddukel`,
    `Morgion`,
    `Nuitari`,
    `Sargonnas`,
    `Takhisis`,
    `Zeboim`,
  ],
  "Gods of Eberron": [
    `Arawai`,
    `Aureon`,
    `Balinor`,
    `Boldrei`,
    `Dol Arrah`,
    `Dol Dorn`,
    `Kol Koran`,
    `Olladra`,
    `Onatar`,
    `The Devourer`,
    `The Fury`,
    `The Keeper`,
    `The Mockery`,
    `The Shadow`,
    `The Traveller`,
    `The Silver Flame`,
  ],
  "Gods of Non-Humans": [
    `Bahamut`,
    `Blibdoolpoolp`,
    `Corellon Larethian`,
    `Deep Sashelas`,
    `Eadro`,
    `Garl Glittergold`,
    `Grolantor`,
    `Gruumsh`,
    `Hruggek`,
    `Kurtulmak`,
    `Laogzed`,
    `Lolth`,
    `Maglubiyet`,
    `Moradin`,
    `Rillifane Rallathil`,
    `Sehanine Moonbow`,
    `Sekolah`,
    `Semuanya`,
    `Skerrit`,
    `Skoraeus Stonebones`,
    `Surtur`,
    `Thrym`,
    `Tiamat`,
    `Yondalla`,
  ],
};
