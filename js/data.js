// Words
const negativeAdjectives = [
  `Abhorrent`,
  `Abject`,
  `Abnormal`,
  `Abrasive`,
  `Abrupt`,
  `Absent`,
  `Absentminded`,
  `Absurd`,
  `Abusive`,
  `Abysmal`,
  `Accidental`,
  `Acerbic`,
  `Aching`,
  `Acrimonious`,
  `Adversarial`,
  `Afraid`,
  `Aggravating`,
  `Aggressive`,
  `Agonizing`,
  `Aimless`,
  `Alarming`,
  `Aloof`,
  `Anaemic`,
  `Angry`,
  `Annoying`,
  `Antagonistic`,
  `Antiquated`,
  `Appalling`,
  `Apprehensive`,
  `Argumentative`,
  `Arrogant`,
  `Artificial`,
  `Artless`,
  `Ashamed`,
  `Astringent`,
  `Atrocious`,
  `Awful`,
  `Awkward`,
  `Babbling`,
  `Backhanded`,
  `Bacterial`,
  `Bad`,
  `Baffled`,
  `Baffling`,
  `Barbaric`,
  `Barbarous`,
  `Barren`,
  `Basic`,
  `Battered`,
  `Batty`,
  `Bawling`,
  `Beady`,
  `Befuddled`,
  `Belching`,
  `Belligerent`,
  `Berserk`,
  `Betrayed`,
  `Bewildered`,
  `Bewitched`,
  `Biased`,
  `Bigoted`,
  `Biting`,
  `Bitter`,
  `Bizarre`,
  `Bland`,
  `Blank`,
  `Blaring`,
  `Blasphemous`,
  `Bleak`,
  `Bleary`,
  `Blind`,
  `Blistering`,
  `Bloated`,
  `Bloodied`,
  `Bloodthirsty`,
  `Bloody`,
  `Blue`,
  `Blundering`,
  `Blunt`,
  `Blurred`,
  `Blurry`,
  `Boastful`,
  `Bookish`,
  `Boorish`,
  `Bored`,
  `Boring`,
  `Bossy`,
  `Bothered`,
  `Brainless`,
  `Brash`,
  `Brassy`,
  `Breakable`,
  `Brisk`,
  `Bristly`,
  `Broken`,
  `Brooding`,
  `Bruised`,
  `Brutal`,
  `Brutish`,
  `Bulky`,
  `Bumpy`,
  `Bungling`,
  `Bureaucratic`,
  `Busiest`,
  `Caged`,
  `Cagey`,
  `Callous`,
  `Cancelled`,
  `Cancerous`,
  `Cantankerous`,
  `Capricious`,
  `Captive`,
  `Careless`,
  `Carsick`,
  `Catastrophic`,
  `Catatonic`,
  `Caustic`,
  `Cavalier`,
  `Certifiable`,
  `Challenged`,
  `Challenging`,
  `Chauvinistic`,
  `Cheap`,
  `Cheerless`,
  `Chemical`,
  `Chicken`,
  `Childish`,
  `Chilling`,
  `Chilly`,
  `Choking`,
  `Choppy`,
  `Chubby`,
  `Chunky`,
  `Clammy`,
  `Clamouring`,
  `Clashing`,
  `Clingy`,
  `Clinical`,
  `Cliquish`,
  `Clogged`,
  `Cloistered`,
  `Clownish`,
  `Clueless`,
  `Clumsy`,
  `Cluttered`,
  `Coarse`,
  `Cockamamie`,
  `Cocky`,
  `Coercive`,
  `Cold`,
  `Cold-hearted`,
  `Colourless`,
  `Combative`,
  `Commercial`,
  `Common`,
  `Complacent`,
  `Complaining`,
  `Complicated`,
  `Compulsive`,
  `Compulsory`,
  `Conceited`,
  `Concerning`,
  `Condemned`,
  `Condescending`,
  `Conditional`,
  `Conflicted`,
  `Conflicting`,
  `Confounded`,
  `Confused`,
  `Confusing`,
  `Congested`,
  `Conspicuous`,
  `Constrictive`,
  `Contagious`,
  `Contemptible`,
  `Contemptuous`,
  `Contradicting`,
  `Contradictory`,
  `Contrarian`,
  `Contrary`,
  `Contrite`,
  `Controllable`,
  `Controlling`,
  `Controversial`,
  `Convoluted`,
  `Cornered`,
  `Corny`,
  `Corporate`,
  `Corrosive`,
  `Corrupt`,
  `Corrupting`,
  `Corruptive`,
  `Costly`,
  `Cowardly`,
  `Cowering`,
  `Coy`,
  `Crabby`,
  `Cracked`,
  `Crafty`,
  `Crammed`,
  `Cramped`,
  `Cranky`,
  `Crass`,
  `Craven`,
  `Crazy`,
  `Creaky`,
  `Creeping`,
  `Creepy`,
  `Crestfallen`,
  `Criminal`,
  `Crippling`,
  `Critical`,
  `Crooked`,
  `Cross`,
  `Crotchety`,
  `Crowded`,
  `Crude`,
  `Cruel`,
  `Crumbling`,
  `Crumbly`,
  `Crumply`,
  `Crushable`,
  `Crushed`,
  `Crusty`,
  `Crying`,
  `Cryptic`,
  `Culpable`,
  `Cumbersome`,
  `Cursed`,
  `Curt`,
  `Cutting`,
  `Cynical`,
  `Daffy`,
  `Daft`,
  `Damaged`,
  `Damaging`,
  `Damp`,
  `Dangerous`,
  `Dark`,
  `Daunting`,
  `Dawdling`,
  `Dazed`,
  `Deadly`,
  `Deafening`,
  `Decayed`,
  `Decaying`,
  `Deceitful`,
  `Deceivable`,
  `Deceiving`,
  `Deceptive`,
  `Decimated`,
  `Decipherable`,
  `Declining`,
  `Decrepit`,
  `Defeated`,
  `Defective`,
  `Defenseless`,
  `Defensive`,
  `Defiant`,
  `Deficient`,
  `Deformed`,
  `Degenerative`,
  `Degraded`,
  `Dejected`,
  `Delinquent`,
  `Delirious`,
  `Deluded`,
  `Demanding`,
  `Demented`,
  `Demonic`,
  `Deniable`,
  `Dense`,
  `Dependent`,
  `Deplorable`,
  `Depraved`,
  `Depressed`,
  `Depressing`,
  `Depressive`,
  `Deprived`,
  `Deranged`,
  `Derivative`,
  `Derogative`,
  `Derogatory`,
  `Deserted`,
  `Desolate`,
  `Despairing`,
  `Desperate`,
  `Despicable`,
  `Despised`,
  `Despondent`,
  `Destroyed`,
  `Destructive`,
  `Detached`,
  `Detestable`,
  `Detrimental`,
  `Devastated`,
  `Devastating`,
  `Devious`,
  `Diabolical`,
  `Difficult`,
  `Digressive`,
  `Dilapidated`,
  `Dim`,
  `Diminishing`,
  `Diminutive`,
  `Dingy`,
  `Dire`,
  `Dirty`,
  `Disadvantaged`,
  `Disadvantageous`,
  `Disaffected`,
  `Disagreeable`,
  `Disappearing`,
  `Disappointed`,
  `Disappointing`,
  `Disapproving`,
  `Disastrous`,
  `Discarded`,
  `Disconnected`,
  `Discontented`,
  `Discordant`,
  `Discouraged`,
  `Discouraging`,
  `Discourteous`,
  `Discredited`,
  `Discreet`,
  `Discriminatory`,
  `Disdainful`,
  `Diseased`,
  `Disenchanted`,
  `Disgraceful`,
  `Disgruntled`,
  `Disgusted`,
  `Disgusting`,
  `Disheartened`,
  `Disheartening`,
  `Dishonest`,
  `Dishonorable`,
  `Disillusioned`,
  `Disinclined`,
  `Disingenuous`,
  `Disinterested`,
  `Disjointed`,
  `Dislikeable`,
  `Disliked`,
  `Disloyal`,
  `Dismal`,
  `Dismissive`,
  `Disobedient`,
  `Disorderly`,
  `Disorganized`,
  `Disparaging`,
  `Dispassionate`,
  `Dispensable`,
  `Displeased`,
  `Displeasing`,
  `Disposable`,
  `Disproportionate`,
  `Disproved`,
  `Disputed`,
  `Disreputable`,
  `Disrespectful`,
  `Disruptive`,
  `Dissatisfied`,
  `Dissimilar`,
  `Distant`,
  `Distasteful`,
  `Distracted`,
  `Distraught`,
  `Distressed`,
  `Distressing`,
  `Distrustful`,
  `Disturbed`,
  `Disturbing`,
  `Divided`,
  `Divisive`,
  `Dizzy`,
  `Domineering`,
  `Doubtful`,
  `Doubting`,
  `Dowdy`,
  `Down`,
  `Drab`,
  `Drained`,
  `Dramatic`,
  `Drastic`,
  `Dreaded`,
  `Dreadful`,
  `Dreary`,
  `Dripping`,
  `Droll`,
  `Drooping`,
  `Droopy`,
  `Drowsy`,
  `Drunk`,
  `Dry`,
  `Dubious`,
  `Dulcet`,
  `Dull`,
  `Duplicitous`,
  `Dusty`,
  `Dwindling`,
  `Dysfunctional`,
  `Eerie`,
  `Egocentric`,
  `Egomaniacal`,
  `Egotistical`,
  `Emaciated`,
  `Embarrassed`,
  `Embarrassing`,
  `Embittered`,
  `Embroiled`,
  `Emotional`,
  `Emotionless`,
  `Empty`,
  `Encrusted`,
  `Endangered`,
  `Enraged`,
  `Envious`,
  `Erasable`,
  `Eroding`,
  `Errant`,
  `Erratic`,
  `Erroneous`,
  `Estranged`,
  `Evasive`,
  `Evil`,
  `Exacerbating`,
  `Exasperated`,
  `Exasperating`,
  `Excessive`,
  `Excruciating`,
  `Exhausting`,
  `Expendable`,
  `Expired`,
  `Exploitative`,
  `Exploited`,
  `Explosive`,
  `Exposed`,
  `Expressionless`,
  `Extraneous`,
  `Extreme`,
  `Facetious`,
  `Faded`,
  `Failed`,
  `Faint`,
  `Faithless`,
  `Fallacious`,
  `Falsified`,
  `Faltering`,
  `Famished`,
  `Fanatical`,
  `Fatal`,
  `Fatigued`,
  `Faulty`,
  `Fawning`,
  `Feared`,
  `Fearful`,
  `Fearsome`,
  `Feckless`,
  `Feeble`,
  `Feebleminded`,
  `Feigned`,
  `Felonious`,
  `Fetid`,
  `Feverish`,
  `Fidgeting`,
  `Fidgety`,
  `Fiendish`,
  `Filmy`,
  `Filtered`,
  `Filthy`,
  `Finicky`,
  `Fishy`,
  `Flaky`,
  `Flat`,
  `Flavourless`,
  `Flawed`,
  `Fleeting`,
  `Flimsy`,
  `Flippant`,
  `Floppy`,
  `Foggy`,
  `Foolhardy`,
  `Foolish`,
  `Forbidding`,
  `Forceful`,
  `Foreboding`,
  `Forgetful`,
  `Forgettable`,
  `Forgotten`,
  `Formulaic`,
  `Foul`,
  `Fractious`,
  `Fragile`,
  `Fragmented`,
  `Frail`,
  `Frantic`,
  `Fraudulent`,
  `Frayed`,
  `Freakish`,
  `Freaky`,
  `Freezing`,
  `Fretful`,
  `Fried`,
  `Frightened`,
  `Frightening`,
  `Frightful`,
  `Frigid`,
  `Frilly`,
  `Frivolous`,
  `Frosty`,
  `Frowning`,
  `Frozen`,
  `Frugal`,
  `Fruitless`,
  `Frumpy`,
  `Frustrated`,
  `Frustrating`,
  `Fumbling`,
  `Fuming`,
  `Furious`,
  `Furtive`,
  `Fussy`,
  `Futile`,
  `Fuzzy`,
  `Gabby`,
  `Galling`,
  `Gangly`,
  `Gaping`,
  `Garbled`,
  `Garish`,
  `Garrulous`,
  `Gasping`,
  `Gaudy`,
  `Gaunt`,
  `Gawky`,
  `Generic`,
  `Ghastly`,
  `Ghoulish`,
  `Glassy`,
  `Glib`,
  `Gloomy`,
  `Glum`,
  `Gluttonous`,
  `Gnarly`,
  `Goofy`,
  `Grainy`,
  `Grating`,
  `Grave`,
  `Greasy`,
  `Greedy`,
  `Green`,
  `Grim`,
  `Grimacing`,
  `Grimy`,
  `Gritty`,
  `Groaning`,
  `Groggy`,
  `Gross`,
  `Grotesque`,
  `Grouchy`,
  `Growling`,
  `Grubby`,
  `Gruelling`,
  `Gruesome`,
  `Gruff`,
  `Grumbling`,
  `Grumpy`,
  `Guarded`,
  `Guilty`,
  `Gullible`,
  `Haggard`,
  `Halting`,
  `Haphazard`,
  `Hapless`,
  `Hard`,
  `Hare-brained`,
  `Harmful`,
  `Harried`,
  `Harsh`,
  `Hasty`,
  `Hated`,
  `Hateful`,
  `Haughty`,
  `Hazardous`,
  `Hazy`,
  `Heart-breaking`,
  `Heartbroken`,
  `Heartless`,
  `Heated`,
  `Heavy`,
  `Hectic`,
  `Heinous`,
  `Helpless`,
  `Hesitant`,
  `Hideous`,
  `Hoarse`,
  `Hollow`,
  `Homeless`,
  `Homely`,
  `Hopeless`,
  `Hormonal`,
  `Horrendous`,
  `Horrible`,
  `Horrid`,
  `Horrific`,
  `Horrified`,
  `Horrifying`,
  `Hostile`,
  `Huffy`,
  `Hulking`,
  `Humdrum`,
  `Humiliated`,
  `Humiliating`,
  `Humourless`,
  `Hungry`,
  `Hurried`,
  `Hurt`,
  `Hurtful`,
  `Hushed`,
  `Icky`,
  `Iconoclastic`,
  `Icy`,
  `Idiotic`,
  `Ignorable`,
  `Ignorant`,
  `Ill`,
  `Illegal`,
  `Illegible`,
  `Illegitimate`,
  `Illicit`,
  `Illiterate`,
  `Illogical`,
  `Immature`,
  `Immodest`,
  `Immoral`,
  `Impatient`,
  `Imperfect`,
  `Imperial`,
  `Impersonal`,
  `Impertinent`,
  `Impetuous`,
  `Impolite`,
  `Imposing`,
  `Impossible`,
  `Impoverished`,
  `Impractical`,
  `Imprecise`,
  `Improper`,
  `Imprudent`,
  `Impulsive`,
  `Impure`,
  `Inaccessible`,
  `Inaccurate`,
  `Inactive`,
  `Inadequate`,
  `Inadmissible`,
  `Inadvisable`,
  `Inane`,
  `Inappropriate`,
  `Inarticulate`,
  `Inattentive`,
  `Inauspicious`,
  `Incapable`,
  `Incessant`,
  `Incoherent`,
  `Incompatible`,
  `Incompetent`,
  `Incomplete`,
  `Incomprehensible`,
  `Inconceivable`,
  `Inconclusive`,
  `Incongruent`,
  `Inconsequential`,
  `Inconsiderate`,
  `Inconsistent`,
  `Inconsolable`,
  `Inconvenient`,
  `Incorrect`,
  `Indecent`,
  `Indecipherable`,
  `Indecisive`,
  `Indifferent`,
  `Indignant`,
  `Indiscriminate`,
  `Inefficient`,
  `Infantile`,
  `Inferior`,
  `Infuriating`,
  `Inhospitable`,
  `Insane`,
  `Insincere`,
  `Insipid`,
  `Irksome`,
  `Irrational`,
  `Jaded`,
  `Jeering`,
  `Judgmental`,
  `Lame`,
  `Laughable`,
  `Lecherous`,
  `Leering`,
  `Loathsome`,
  `Lowly`,
  `Malevolent`,
  `Malignant`,
  `Manipulative`,
  `Melodramatic`,
  `Messy`,
  `Moody`,
  `Muddled`,
  `Myopic`,
  `Narcissistic`,
  `Negligent`,
  `Nosy`,
  `Obscene`,
  `Obstinate`,
  `Odd`,
  `Opportunistic`,
  `Oppressive`,
  `Parasitic`,
  `Pathological`,
  `Pedantic`,
  `Pessimistic`,
  `Petty`,
  `Petulant`,
  `Pitiful`,
  `Predictable`,
  `Prejudiced`,
  `Putrid`,
  `Querulous`,
  `Racist`,
  `Redundant`,
  `Reprehensible`,
  `Repugnant`,
  `Rude`,
  `Sanctimonious`,
  `Sickening`,
  `Smothering`,
  `Smug`,
  `Squalid`,
  `Tacky`,
  `Tasteless`,
  `Temperamental`,
  `Thoughtless`,
  `Timid`,
  `Toxic`,
  `Tyrannical`,
  `Upsetting`,
  `Vacuous`,
  `Wasteful`,
  `Wretched`,
  `Yellow`,
];
const negativeNouns = [
  `Addict`,
  `Alcoholic`,
  `Amateur`,
  `Baby`,
  `Bastard`,
  `Beginner`,
  `Blabbermouth`,
  `Black-sheep`,
  `Blockhead`,
  `Boaster`,
  `Bonehead`,
  `Bookworm`,
  `Bore`,
  `Braggart`,
  `Brat`,
  `Brown-nose`,
  `Brute`,
  `Buffoon`,
  `Bully`,
  `Bum`,
  `Busybody`,
  `Butterfingers`,
  `Cheapskate`,
  `Cheater`,
  `Chicken`,
  `Child`,
  `City-slicker`,
  `Clown`,
  `Cow`,
  `Coward`,
  `Crab`,
  `Creep`,
  `Crook`,
  `Cry-baby`,
  `Daydreamer`,
  `Deadbeat`,
  `Deceiver`,
  `Degenerate`,
  `Delinquent`,
  `Dingbat`,
  `Diplomat`,
  `Do-nothing`,
  `Dog`,
  `Dope`,
  `Dreamer`,
  `Drifter`,
  `Drudge`,
  `Drunk`,
  `Drunkard`,
  `Dunce`,
  `Eavesdropper`,
  `Fake`,
  `Flirt`,
  `Fool`,
  `Fox`,
  `Freak`,
  `Glutton`,
  `Goof`,
  `Gossip`,
  `Granny`,
  `Heathen`,
  `Hermit`,
  `Homemaker`,
  `Idiot`,
  `Imbecile`,
  `Incompetent`,
  `Invalid`,
  `Jerk`,
  `Jester`,
  `Lazybones`,
  `Liar`,
  `Lightweight`,
  `Loafer`,
  `Loser`,
  `Loudmouth`,
  `Lunatic`,
  `Money-grubber`,
  `Moocher`,
  `Moron`,
  `Mortal`,
  `Nag`,
  `Nobody`,
  `Novice`,
  `Nuisance`,
  `Outcast`,
  `Outsider`,
  `Party-pooper`,
  `Pest`,
  `Phony`,
  `Pig`,
  `Poet`,
  `Protector`,
  `Punk`,
  `Pushover`,
  `Quitter`,
  `Rat`,
  `Rebel`,
  `Recluse`,
  `Romantic`,
  `Runt`,
  `Scaredy-cat`,
  `Scatterbrain`,
  `Scoundrel`,
  `Scrooge`,
  `Shrimp`,
  `Sitting-duck`,
  `Slacker`,
  `Sleepyhead`,
  `Slob`,
  `Slouch`,
  `Slowpoke`,
  `Slug`,
  `Snake`,
  `Sneak`,
  `Snob`,
  `Snoop`,
  `Spoilsport`,
  `Stereotype`,
  `Thief`,
  `Thinker`,
  `Traitor`,
  `Tramp`,
  `Troublemaker`,
  `Twit`,
  `Vegetable`,
  `Vegetarian`,
  `Weasel`,
  `Wimp`,
  `Witch`,
  `Worm`,
  `Worrywart`,
  `Wreck`,
  `Failure`,
  `Gambler`,
  `Idealist`,
  `Klutz`,
  `Pacifist`,
  `Quack`,
  `Talker`,
  `Vandal`,
  `Weakling`,
];
const shakespeareanInsultsPartOne = [
  "artless",
  "bawdy",
  "beslubbering",
  "bootless",
  "churlish",
  "clouted",
  "cockered",
  "craven",
  "currish",
  "dankish",
  "dissembling",
  "droning",
  "errant",
  "fawning",
  "fobbing",
  "frothy",
  "froward",
  "gleeking",
  "goatish",
  "gorbellied",
  "impertinent",
  "infectious",
  "jarring",
  "loggerheaded",
  "lumpish",
  "mammering",
  "mangled",
  "mewling",
  "paunchy",
  "pribbling",
  "puking",
  "puny",
  "qualling",
  "rank",
  "reeky",
  "roguish",
  "ruttish",
  "saucy",
  "spleeny",
  "spongy",
  "surly",
  "tottering",
  "unmuzzled",
  "vain",
  "venomed",
  "villainous",
  "warped",
  "wayward",
  "weedy",
  "yeasty",
  "abominable",
  "accursed",
  "adulterate",
  "arrogant",
  "babbling",
  "barbarous",
  "base",
  "mumbling",
  "overwheening",
  "perfidious",
  "pestilent",
  "poisonous",
  "pragging",
  "rancorous",
  "rascally",
  "sanctimonious",
  "shameless",
  "slanderous",
  "soulless",
  "spongey",
  "crusty",
  "withered",
  "loathed",
  "tongueless",
  "traitorous",
  "unwholesome",
  "viperous",
  "greasy",
  "obscene",
  "beggarly",
  "scandalous",
  "creeping",
  "lascivious",
  "degenerate",
  "meddling",
];
const shakespeareanInsultsPartTwo = [
  "base-court",
  "prick-eared",
  "puisny-tilted",
  "puke-stockinged",
  "open-arsed",
  "bat-fowling",
  "beef-witted",
  "beetle-headed",
  "boil-brained",
  "clapper-clawed",
  "clay-brained",
  "common-kissing",
  "crook-pated",
  "dismal-dreaming",
  "dizzy-eyed",
  "doghearted",
  "dread-bolted",
  "earth-vexing",
  "elf-skinned",
  "fat-kidneyed",
  "fen-sucked",
  "flap-mouthed",
  "fly-bitten",
  "folly-fallen",
  "fool-born",
  "full-gorged",
  "guts-griping",
  "half-faced",
  "hasty-witted",
  "hedge-born",
  "hell-hated",
  "idle-headed",
  "ill-bred",
  "ill-nurtured",
  "knotty-pated",
  "milk-livered",
  "motley-minded",
  "onion-eyed",
  "plume-plucked",
  "pottle-deep",
  "pox-marked",
  "reeling-ripe",
  "rough-hewn",
  "rude-growing",
  "rump-fed",
  "shard-borne",
  "sheep-biting",
  "spur-galled",
  "swag-bellied",
  "tardy-gaited",
  "tickle-brained",
  "white-livered",
  "toad-spotted",
  "urchin-snouted",
  "weather-bitten",
  "shag-haired",
  "tallow-faced",
  "beef-witted",
  "decayed",
  "deformed",
  "muddy-mottled",
  "hag-born",
  "long-tongued",
  "toad-spotted",
];
const shakespeareanInsultsPartThree = [
  "baggage",
  "barnacle",
  "bladder",
  "boar-pig",
  "bugbear",
  "bum-bailey",
  "canker-blossom",
  "clack-dish",
  "clotpole",
  "codpiece",
  "coxcomb",
  "death-token",
  "dewberry",
  "flap-dragon",
  "flax-wench",
  "flirt-gill",
  "foot-licker",
  "fustilarian",
  "giglet",
  "gudgeon",
  "haggard",
  "harpy",
  "hedge-pig",
  "horn-beast",
  "hugger-mugger",
  "joithead",
  "lewdster",
  "lout",
  "maggot-pie",
  "malt-worm",
  "mammet",
  "measle",
  "minnow",
  "miscreant",
  "moldwarp",
  "mumble-news",
  "nut-hook",
  "pigeon-egg",
  "pignut",
  "pumpion",
  "puttock",
  "ratsbane",
  "scut",
  "skainsmate",
  "strumpet",
  "varlet",
  "vassal",
  "wagtail",
  "whey-face",
  "scullion",
  "serpents-egg",
  "callet",
  "slug",
  "bag of guts",
  "punk",
  "bitch-wolf",
  "botch",
  "withered-hag",
  "mangy-dog",
  "foul deformity",
  "odiferous stench",
  "no bowels",
  "drunkard",
  "turd",
  "bear-whelp",
  "eunuch",
  "devil-incarnate",
  "filthy rogue",
  "vile worm",
  "writhled shrimp",
  "scurvy-knave",
  "whore-master",
  "malt-horse",
  "varlet",
  "worms-meat",
  "canker-blossom",
  "carrion",
  "hag-seed",
  "ruinous-butt",
  "contriver",
  "hypocrite",
  "infection",
  "imbossed carbunkle",
  "eternal devil",
  "execrable-wretch",
  "murderous coward",
  "foul adulterer",
  "ingested-lump",
  "wrinkled-witch",
  "plebian",
  "strumpet",
  "horse-drench",
  "promise-breaker",
  "incontinent varlet",
  "leprous witch",
  "babbling gossip",
  "tyrant",
  "purified-cur",
  "misbegotten-divel",
  "mildewed-ear",
];
// Individual Loot Tables
const individualLootTableCR0 = new Map([
  [30, [[5, 6, 1, `cp`]]], // Roll below 30 and recieve 5D6 * 1 Copper Pieces.
  [60, [[4, 6, 1, `sp`]]],
  [70, [[3, 6, 1, `ep`]]],
  [95, [[3, 6, 1, `gp`]]],
  [100, [[1, 6, 1, `pp`]]],
]);
const individualLootTableCR5 = new Map([
  [
    30,
    [
      [4, 6, 100, `cp`],
      [1, 6, 10, `ep`],
    ],
  ], // Roll 30 or less and recieve 4D6 * 10 Copper, and 1D6 * 10 Electrum Pieces.
  [
    60,
    [
      [6, 6, 10, `sp`],
      [2, 6, 10, `gp`],
    ],
  ],
  [
    70,
    [
      [3, 6, 10, `ep`],
      [2, 6, 10, `gp`],
    ],
  ],
  [95, [[4, 6, 10, `gp`]]],
  [
    100,
    [
      [2, 6, 10, `gp`],
      [3, 6, 1, `pp`],
    ],
  ],
]);
const individualLootTableCR11 = new Map([
  [
    20,
    [
      [4, 6, 100, `sp`],
      [1, 6, 100, `gp`],
    ],
  ],
  [
    35,
    [
      [1, 6, 100, `ep`],
      [1, 6, 100, `gp`],
    ],
  ],
  [
    75,
    [
      [2, 6, 100, `gp`],
      [1, 6, 10, `pp`],
    ],
  ],
  [
    100,
    [
      [2, 6, 100, `gp`],
      [2, 6, 10, `pp`],
    ],
  ],
]);
const individualLootTableCR17 = new Map([
  [
    15,
    [
      [2, 6, 1000, `ep`],
      [8, 6, 100, `gp`],
    ],
  ],
  [
    55,
    [
      [1, 6, 1000, `gp`],
      [1, 6, 100, `pp`],
    ],
  ],
  [
    100,
    [
      [1, 6, 1000, `gp`],
      [2, 6, 100, `pp`],
    ],
  ],
]);
// Hoard Loot Contents
const gemstones = new Map([
  [
    10,
    [
      `Azurite`,
      `Banded Agate`,
      `Blue Quartz`,
      `Eye Agate`,
      `Hematite`,
      `Lapis Lazuli`,
      `Malachite`,
      `Moss Agate`,
      `Obsidian`,
      `Rhondochrosite`,
      `Tiger Eye`,
      `Turquoise`,
    ],
  ],
  [
    50,
    [
      `Bloodstone`,
      `Carnelian`,
      `Chalcedony`,
      `Chrysoprase`,
      `Citrine`,
      `Jasper`,
      `Moonstone`,
      `Onyx`,
      `Quartz`,
      `Sardonyx`,
      `Star Rose Quartz`,
      `Zircon`,
    ],
  ],
  [
    500,
    [
      `Alexandrite`,
      `Aquamarine`,
      `Black Pearl`,
      `Blue Spinel`,
      `Peridot`,
      `Topaz`,
    ],
  ],
  [
    1000,
    [
      `Black Opal`,
      `Blue Sapphire`,
      `Emerald`,
      `Fire Opal`,
      `Opal`,
      `Star Ruby`,
      `Star Sapphire`,
      `Yellow Sapphire`,
    ],
  ],
  [5000, [`Black Sapphire`, `Diamond`, `Jacinth`, `Ruby`]],
]);
const artworks = new Map([
  [
    25,
    [
      `Silver Ewer`,
      `Carved Bone Statuette`,
      `Small Gold Bracelet`,
      `Cloth-of-Gold Vestments`,
      `Black Velvet Mask Stitched with Silver Thread`,
      `Copper Chalice with Silver Filigree`,
      `Pair of Engraved Bone Dice`,
      `Small Mirror Set in a Painted Wooden Frame`,
      `Embroidered Silk Handkerchief`,
      `Gold Locket with a Painted Portrait Inside`,
    ],
  ],
  [
    250,
    [
      `Gold Ring Set with Bloodstones`,
      `Carved Ivory Statuette`,
      `Large Gold Bracelet`,
      `Silver Necklace with a Gemstone Pendant`,
      `Bronze Crown`,
      `Silk Robe with Gold Embroidery`,
      `Large Well-Made Tapestry`,
      `Brass Mug with Jade Inlay`,
      `Box of Turquoise Animal Figurines`,
      `Gold Bird Cage with Electrum Filigree`,
    ],
  ],
  [
    750,
    [
      `Silver Chalice Set with Moonstones`,
      `Silver-Plated Steel Longsword with  Jet Set in Hilt`,
      `Carved Harp of Exotic Wood with Ivory Inlay and Zircon Gems`,
      `Small Gold Idol`,
      `Gold Dragon Comb Set with Red Garnets as Eyes`,
      `Bottle Stopper Cork Embossed with Gold Leaf and Set with Amethysts`,
      `Ceremonial Electrum Dagger with a Black Pearl in the Pommel`,
      `Silver and Gold Brooch`,
      `Obsidian Statuette with Gold Fittings and Inlay`,
      `Painted Gold War Mask`,
    ],
  ],
  [
    2500,
    [
      `Fine Gold Chain Set with a Fire Opal`,
      `Old Masterpiece Painting`,
      `Embroidered Silk and Velvet Mantle Set with Numerous Moonstones`,
      `Platinum Bracelet Set with a Sapphire`,
      `Embroidered Glove Set with Jewel Chips`,
      `Jeweled Anklet`,
      `Gold Music Box`,
      `Gold Circlet Set with Four Aquamarines`,
      `Eye Patch with a Mock Eye Set in Blue Sapphire and Moonstone`,
      `A Necklace with a String of Small Pink Pearls`,
    ],
  ],
  [
    7500,
    [
      `Jeweled Gold Crown`,
      `Jewled Platinum Ring`,
      `Small Gold Statuette Set with Rubies`,
      `Gold Cup Set with Emeralds`,
      `Gold Jewelery Box with Platinum Filigree`,
      `Painted Gold Child's Sarcophagus`,
      `Jade Game Board with Solid Gold Playing Pieces`,
      `Bejeweled Ivory Drinking Horn with Gold Filigree`,
    ],
  ],
]);
const magicItemTableA = new Map([
  [50, `Potion of Healing`],
  [60, `Spell Scroll (Cantrip)`],
  [70, `Potion of Climbing`],
  [90, `Spell Scroll (First Level)`],
  [94, `Spell Scroll (Second Level)`],
  [98, `Potion of Greater Healing`],
  [99, `Bag of Holding`],
  [100, `Driftglobe`],
]);
const magicItemTableB = new Map([
  [15, `Potion of Greater Healing`],
  [22, `Potion of Fire Breath`],
  [29, `Potion of Resistance`],
  [34, `Ammunition (Plus One)`],
  [39, `Potion of Animal Friendship`],
  [44, `Potion of Hill Giant Strength`],
  [49, `Potion of Growth`],
  [54, `Potion of Water Breathing`],
  [59, `Spell Scroll (Second Level)`],
  [64, `Spell Scroll (Third Level)`],
  [67, `Bag of Holding`],
  [70, `Keoghtom's Ointment`],
  [73, `Oil of Slipperiness`],
  [75, `Dust of Disappearance`],
  [77, `Dust of Dryness`],
  [79, `Dust of Sneezing and Choking`],
  [81, `Elemental Gem`],
  [83, `Philter of Love`],
  [84, `Alchemy Jug`],
  [85, `Cap of Water-Breathing`],
  [86, `Cloak of the Manta Ray`],
  [87, `Driftglobe`],
  [88, `Goggles of Night`],
  [89, `Helm of Comprehending Languages`],
  [90, `Immovable Rod`],
  [91, `Lantern of Revealing`],
  [92, `Mariner's Armour`],
  [93, `Mithril Armour`],
  [94, `Potion of Poison`],
  [95, `Ring of Swimming`],
  [96, `Robe of Useful Items`],
  [97, `Rope of Climbing`],
  [98, `Saddle of the Cavalier`],
  [99, `Wand of Magic Detection`],
  [100, `Wand of Secrets`],
]);
const magicItemTableC = new Map([
  [15, `Potion of Superior Healing`],
  [22, `Spell Scroll (Fourth Level)`],
  [27, `Ammunition (Plus Two)`],
  [32, `Potion of Clairvoyance`],
  [37, `Potion of Diminution`],
  [42, `Potion of Gaseous Form`],
  [47, `Potion of Frost Giant Strength`],
  [52, `Potion of Stone Giant Strength`],
  [57, `Potion of Heroism`],
  [62, `Potion of Invulnerablility`],
  [67, `Potion of Mind Reading`],
  [72, `Spell Scroll (Fifth Level)`],
  [75, `Elixir of Health`],
  [78, `Oil of Etherealness`],
  [81, `Potion of Fire Giant Strength`],
  [84, `Quaal's Feather Token`],
  [87, `Scroll of Protection`],
  [89, `Bag of Beans`],
  [91, `Bead of Force`],
  [92, `Chime of Opening`],
  [93, `Decanter of Endless Water`],
  [94, `Eyes of Minute Seeing`],
  [95, `Folding Boat`],
  [96, `Heward's Handy haversack`],
  [97, `Horseshoes of Speed`],
  [98, `Necklace of Fireballs`],
  [99, `Peripat of Health`],
  [100, `Sending Stones`],
]);
const magicItemTableD = new Map([
  [20, `Potion of Supreme Healing`],
  [30, `Potion of Invisibility`],
  [40, `Potion of Speed`],
  [50, `Spell Scroll (Sixth Level)`],
  [57, `Spell Scroll (Seventh Level)`],
  [62, `Ammunition (Plus Three)`],
  [67, `Oil of Sharpness`],
  [72, `Potion of Flying`],
  [77, `Potion of Cloud Giant Strength`],
  [82, `Potion of Longevity`],
  [87, `Potion of Vitality`],
  [92, `Spell Scroll (Eighth Level)`],
  [95, `Horseshoes of a Zephyr`],
  [98, `Nolzur's Marvelous Pigments`],
  [99, `Bag of Devouring`],
  [100, `Portable Hole`],
]);
const magicItemTableE = new Map([
  [30, `Spell Scroll (Eighth Level)`],
  [55, `Potion of Storm Giant Strength`],
  [70, `Potion of Supreme Healing`],
  [85, `Spell Scroll (Ninth Level)`],
  [93, `Universal Solvent`],
  [98, `Arrow of Slaying`],
  [100, `Sovereign Glue`],
]);
const magicItemTableF = new Map([
  [15, `Weapon (Plus One)`],
  [18, `Shield (Plus One)`],
  [21, `Sentinel Shield`],
  [23, `Amulet of Proof Against Detection and Location`],
  [25, `Boots of Elvenkind`],
  [27, `Boots of Striding and Springing`],
  [29, `Bracers of Archery`],
  [31, `Brooch of Shielding`],
  [33, `Broom of Flying`],
  [35, `Cloak of Elvenkind`],
  [37, `Cloak of Protection`],
  [39, `Gauntlets of Ogre Power`],
  [41, `Hat of Disguise`],
  [43, `Javelin of Lightning`],
  [45, `Pearl of Power`],
  [47, `Rod of the Pact Keeper (Plus One)`],
  [49, `Slippers of Spider Climbing`],
  [51, `Staff of the Adder`],
  [53, `Staff of the Python`],
  [55, `Sword of Vengance`],
  [57, `Trident of Fish Command`],
  [59, `Wand of Magic Missiles`],
  [61, `Wand of the War Mage (Plus One)`],
  [63, `Wand of Web`],
  [65, `Weapon of Warning`],
  [66, `Adamantine Armour (Chain Mail)`],
  [67, `Adamantine Armour (Chain Shirt)`],
  [68, `Adamantine Armour (Scale Mail)`],
  [69, `Bag of Tricks (Grey)`],
  [70, `Bag of Tricks (Rust)`],
  [71, `Bag of Tricks (Tan)`],
  [72, `Boots of the Winterlands`],
  [73, `Circlet of Blasting`],
  [74, `Deck of Illusions`],
  [75, `Eversmoking Bottle`],
  [76, `Eyes of Charming`],
  [77, `Eyes of the Eagle`],
  [78, `Figurine of Wondrous Power (Silver Raven)`],
  [79, `Gem of Brightness`],
  [80, `Gloves of Missile Snaring`],
  [81, `Gloves of Swimming and Climbing`],
  [82, `Gloves of Thievery`],
  [83, `Headband of Intellect`],
  [84, `Helm of Telepathy`],
  [85, `Instrument of the Bards (Doss Lute)`],
  [86, `Instrument of the Bards (Fochlucan Bandore)`],
  [87, `Instrument of the Bards (Mac-Fuimidh Cittern)`],
  [88, `Medallion of Thoughts`],
  [89, `Necklace of Adaption`],
  [90, `Periapt of Wound Closure`],
  [91, `Pipes of Haunting`],
  [92, `Pipes of the Sewers`],
  [93, `Ring of Jumping`],
  [94, `Ring of Mind Shielding`],
  [95, `Ring of Warmth`],
  [96, `Ring of Water Walking`],
  [97, `Quivr of Ehlonna`],
  [98, `Stone of Good Luck`],
  [99, `Wind Fan`],
  [100, `Winged Boots`],
]);
const magicItemTableG = new Map([
  [11, `Weapon (Plus Two)`],
  [14, `Figurine of Wondrous Power`],
  [15, `Adamantine Armour (Brastplate)`],
  [16, `Adamantine Armour (Splint)`],
  [17, `Amulet of Health`],
  [18, `Armour of Vulnerability`],
  [19, `Arrow-Catching Shield`],
  [20, `Belt of Dwarvenkind`],
  [21, `Belt of Hill Giant Strength`],
  [22, `Berserker Axe`],
  [23, `Boots of Levitation`],
  [14, `Boots of Speed`],
  [25, `Bowl of Commanding Water Elementals`],
  [26, `Bracers of Defence`],
  [27, `Brazier of Commanding Fire Elementals`],
  [28, `Cape of the Mountebank`],
  [29, `Censer of Controlling Air Elementals`],
  [30, `Armour (Plus One, Chain Mail)`],
  [31, `Armour of Resistance (Chain Mail)`],
  [32, `Armour (Plus One, Chain Shirt)`],
  [33, `Armour of Resistance (Chain Shirt)`],
  [34, `Cloak of Displacement`],
  [35, `Cloak of the Bat`],
  [36, `Cube of Force`],
  [37, `Daern's Instant Fortress`],
  [38, `Dagger of Venom`],
  [39, `Dimensional Shackles`],
  [40, `Dragon Slayer`],
  [41, `Elven Chain`],
  [42, `Flame Tongue`],
  [43, `Gem of Seeing`],
  [44, `Giant Slayer`],
  [45, `Glamoured Studded Leather`],
  [46, `Helm of Teleportation`],
  [47, `Horn of Blasting`],
  [48, `Horn of Valhalla (Silver or Brass)`],
  [49, `Instrument of the Bards (Canaith Mandolin)`],
  [50, `Instrument of the Bards (Cli Lyre)`],
  [51, `Ioun Stone (Awareness)`],
  [52, `Ioun Stone (Protection)`],
  [53, `Ioun Stone (Reserve)`],
  [54, `Ioun Stone (Sustenance)`],
  [55, `Iron Bands of Bilarro`],
  [56, `Armour (Plus One, Leather)`],
  [57, `Armour of Resistance (Leather)`],
  [58, `Mace of Distruption`],
  [59, `Mace of Smiting`],
  [60, `Mace of Terror`],
  [61, `Mantle of Spell Resistance`],
  [62, `Necklace of Prayer Beads`],
  [63, `Periapt of Proof Against Poison`],
  [64, `Ring of Animal Influence`],
  [65, `Ring of Evasion`],
  [66, `Ring of Feather Falling`],
  [67, `Ring of Free Action`],
  [68, `Ring of Protection`],
  [69, `Ring of Resistance`],
  [70, `Ring of Spell Storing`],
  [71, `Ring of the Ram`],
  [72, `Ring of X-Ray Vision`],
  [73, `Robe of Eyes`],
  [74, `Rod of Rulership`],
  [75, `Rod of the Pact Keeper (Plus Two)`],
  [76, `Rope of Entanglement`],
  [77, `Armour (Plus One, Scale Mail)`],
  [78, `Armour of Resistance (Scale Mail)`],
  [79, `Shield (Plus Two)`],
  [80, `Shield of Missile Attraction`],
  [81, `Staff of Charming`],
  [82, `Staff of Healing`],
  [83, `Staff of Swarming Insects`],
  [84, `Staff of the Woodlands`],
  [85, `Staff of Withering`],
  [86, `Stone of Controlling Earth Elementals`],
  [87, `Sun Blade`],
  [88, `Sword of Life Stealing`],
  [89, `Sword of Wounding`],
  [90, `Tentacle Rod`],
  [91, `Vicious Weapon`],
  [92, `Wand of Binding`],
  [93, `Wand of Enemy Detection`],
  [94, `Wand of Fear`],
  [95, `Wand of Fireballs`],
  [96, `Wand of Lightning Bolts`],
  [97, `Wand of Paralysis`],
  [98, `Wand of the War Mage`],
  [99, `Wand of Wonder`],
  [100, `Wings of Flying`],
]);
const magicItemTableH = new Map([
  [10, `Weapon (Plus Three)`],
  [12, `Amulet of the Planes`],
  [14, `Carpet of Flying`],
  [16, `Crystal Ball (Very Rare Version)`],
  [18, `Ring of Regeneration`],
  [20, `Ring of Shooting Stars`],
  [22, `Ring of Telekinesis`],
  [24, `Robe of Scintillating Colours`],
  [26, `Robe of Stars`],
  [28, `Rod of Absorbtion`],
  [30, `Rod of Alertness`],
  [32, `Rod of Security`],
  [34, `Rod of the Pact Keeper`],
  [36, `Scimitar of Speed`],
  [38, `Shield (Plus Three)`],
  [40, `Staff of Fire`],
  [42, `Staff of Frost`],
  [44, `Staff of Power`],
  [46, `Staff of Striking`],
  [48, `Staff of Thunder and Lightning`],
  [50, `Sword of Sharpness`],
  [52, `Wand of Polymorph`],
  [54, `Wand of the War MAge (Plus One)`],
  [55, `Adamantine Armour (Half Plate)`],
  [56, `Adamantine Armour (Plate)`],
  [57, `Animated Shield`],
  [58, `Belt of Fire Giant Strength`],
  [59, `Belt of Frost (or Stone) Giant Strength`],
  [60, `Armour (Plus One, Breastplate)`],
  [61, `Armour of Resistance (Breastplate)`],
  [62, `Candle of Invocation`],
  [63, `Armour (Plus Two, Chain Mail)`],
  [64, `Armour (Plus Two, Chain Shirt)`],
  [65, `Cloak of Arachnida`],
  [66, `Dancing Sword`],
  [67, `Demon Armour`],
  [68, `Dragon Scale Mail`],
  [69, `Dwarven Plate`],
  [70, `Dwarven Thrower`],
  [71, `Efreeti Bottle`],
  [72, `Figurine of Wondrous Power (Obsidian Steed)`],
  [73, `Frost Band`],
  [74, `Helm of Brilliance`],
  [75, `Horn of Valhalla (Bronze)`],
  [76, `Instrument of the Bards (Anstruth Harp)`],
  [77, `Ioun Stone (Absorbtion)`],
  [78, `Ioun Stone (Agility)`],
  [79, `Ioun Stone (Fortitude)`],
  [80, `Ioun Stone (Insight)`],
  [81, `Ioun Stone (Intellect)`],
  [82, `Ioun Stone (Leadership)`],
  [83, `Ioun Stone (Strength)`],
  [84, `Armour (Plus Two, Leather)`],
  [85, `Manual of Bodily Health`],
  [86, `Manual of Gainful Exercise`],
  [87, `Manual of Golems`],
  [88, `Manual of Quickness of Action`],
  [89, `Mirror of Life Trapping`],
  [90, `Nine Lives Stealer`],
  [91, `Oathbow`],
  [92, `Armour (Plus Two, Scale Mail)`],
  [93, `Spellguard Shield`],
  [94, `Armour (Plus One, Splint)`],
  [95, `Armour of Resistance (Splint)`],
  [96, `Armour (Plus One, Studded Leather)`],
  [97, `Armour of Resistance (Studded Leather)`],
  [98, `Tome of Clear Thought`],
  [99, `Tome of Leadership and Influence`],
  [100, `Tome of Understanding`],
]);
const magicItemTableI = new Map([
  [5, `Defender`],
  [10, `Hammer of Thunderbolts`],
  [15, `Luck Blade`],
  [20, `Sword of Answering`],
  [23, `Holy Avenger`],
  [26, `Ring of Djinni Summoning`],
  [29, `Ring of Invisibility`],
  [32, `Ring of Spell Turning`],
  [35, `Rod of Lordly Might`],
  [38, `Staff of the Magi`],
  [41, `Vorpal Sword`],
  [43, `Belt of Cloud Giant Strength`],
  [45, `Armour (Plus Two, Breastplate)`],
  [47, `Armour (Plus Three, Chain Mail)`],
  [49, `Armour (Plus Three, Chain Shirt)`],
  [51, `Cloak of Invisibility`],
  [53, `Crystal Ball (Legendary Version)`],
  [55, `Armour (Plus One, Half Plate)`],
  [57, `Iron Flask`],
  [59, `Armour (Plus Three, Leather)`],
  [61, `Armour (Plus One, Plate)`],
  [63, `Robe of the Archmagi`],
  [65, `Rod of Resurrection`],
  [67, `Armour (Plus One, Scale Mail)`],
  [69, `Scarab of Protection`],
  [71, `Armour (Plus Two, Splint)`],
  [73, `Armour (Plus Two, Studded Leather)`],
  [75, `Well of Many Worlds`],
  [76, `Magic armour (Roll 1D12)`],
  [77, `Apparatus of Kwalish`],
  [78, `Armour of Invulnerability`],
  [79, `Belt of Storm Giant Strength`],
  [80, `Cubic Gate`],
  [81, `Deck of Many Things`],
  [82, `Efreeti Chain`],
  [83, `Armour of Resistance (Half Plate)`],
  [84, `Horn of Valhalla (Iron)`],
  [85, `Instrument of the Bards (Ollamh Harp)`],
  [86, `Ioun Stone (Greater Absorption)`],
  [87, `Ioun Stone (Mastery)`],
  [88, `Ioun Stone (Regeneration)`],
  [89, `Plate Armour of Etherealness`],
  [90, `Plate Armour of Resistance`],
  [91, `Ring of Air Elemental Command`],
  [92, `Ring of Earth Elemental Command`],
  [93, `Ring of Fire Elemental Command`],
  [94, `Ring of Three Wishes`],
  [95, `Ring of Water Elemental Command`],
  [96, `Sphere of Annihilation`],
  [97, `Talisman of Pure Good`],
  [98, `Talisman of the Sphere`],
  [99, `Talisman of Ultimate Evil`],
  [100, `Tome of the Stilled Tongue`],
]);
const treasureHoardCoins = new Map([
  [
    0,
    [
      [6, 6, 100, `cp`],
      [3, 6, 100, `sp`],
      [2, 6, 10, `gp`],
    ],
  ],
  [
    5,
    [
      [2, 6, 100, `cp`],
      [2, 6, 1000, `sp`],
      [6, 6, 100, `gp`],
      [3, 6, 100, `pp`],
    ],
  ],
  [
    11,
    [
      [4, 6, 1000, `gp`],
      [5, 6, 100, `pp`],
    ],
  ],
  [
    17,
    [
      [12, 6, 1000, `gp`],
      [8, 6, 1000, `pp`],
    ],
  ],
]);
// Treasure Hoard Tables
const treasureHoardTable0 = new Map([
  [6, [[], []]],
  [16, [[2, 6, 10, `gems`], []]],
  [26, [[2, 4, 25, `art`], []]],
  [36, [[1, 6, 50, `gems`], []]],
  [
    44,
    [
      [2, 6, 10, `gems`],
      [6, `A`],
    ],
  ],
  [
    52,
    [
      [2, 4, 25, `art`],
      [6, `A`],
    ],
  ],
  [
    60,
    [
      [2, 6, 50, `gems`],
      [6, `A`],
    ],
  ],
  [
    65,
    [
      [2, 6, 10, `gems`],
      [4, `B`],
    ],
  ],
  [
    70,
    [
      [2, 4, 25, `art`],
      [4, `B`],
    ],
  ],
  [
    75,
    [
      [2, 6, 50, `gems`],
      [4, `B`],
    ],
  ],
  [
    78,
    [
      [2, 6, 10, `gems`],
      [4, `C`],
    ],
  ],
  [
    80,
    [
      [2, 4, 25, `art`],
      [4, `C`],
    ],
  ],
  [
    85,
    [
      [2, 6, 50, `gems`],
      [4, `C`],
    ],
  ],
  [
    92,
    [
      [2, 4, 25, `art`],
      [4, `F`],
    ],
  ],
  [
    97,
    [
      [2, 6, 50, `gems`],
      [4, `F`],
    ],
  ],
  [
    99,
    [
      [2, 4, 25, `art`],
      [0, `G`],
    ],
  ],
  [
    100,
    [
      [2, 6, 50, `gems`],
      [0, `G`],
    ],
  ],
]);
const treasureHoardTable5 = new Map([
  [4, [[], []]],
  [10, [[2, 4, 25, `art`], []]],
  [16, [[3, 6, 50, `gems`], []]],
  [22, [[3, 6, 100, `gems`], []]],
  [28, [[2, 4, 250, `art`], []]],
  [
    32,
    [
      [2, 4, 25, `art`],
      [6, `A`],
    ],
  ],
  [
    36,
    [
      [3, 6, 50, `gems`],
      [6, `A`],
    ],
  ],
  [
    40,
    [
      [3, 6, 100, `gems`],
      [6, `A`],
    ],
  ],
  [
    44,
    [
      [2, 4, 350, `art`],
      [6, `A`],
    ],
  ],
  [
    49,
    [
      [2, 4, 25, `art`],
      [4, `B`],
    ],
  ],
  [
    54,
    [
      [3, 6, 50, `gems`],
      [4, `B`],
    ],
  ],
  [
    59,
    [
      [3, 6, 100, `gems`],
      [4, `B`],
    ],
  ],
  [
    63,
    [
      [2, 4, 250, `art`],
      [4, `B`],
    ],
  ],
  [
    66,
    [
      [2, 4, 25, `art`],
      [4, `C`],
    ],
  ],
  [
    69,
    [
      [3, 6, 25, `art`],
      [4, `C`],
    ],
  ],
  [
    72,
    [
      [3, 6, 100, `gems`],
      [4, `C`],
    ],
  ],
  [
    74,
    [
      [2, 4, 250, `art`],
      [4, `C`],
    ],
  ],
  [
    76,
    [
      [2, 4, 25, `art`],
      [0, `D`],
    ],
  ],
  [
    78,
    [
      [3, 6, 50, `gems`],
      [0, `D`],
    ],
  ],
  [
    79,
    [
      [3, 6, 100, `gems`],
      [0, `D`],
    ],
  ],
  [
    80,
    [
      [2, 4, 250, `art`],
      [0, `D`],
    ],
  ],
  [
    84,
    [
      [2, 4, 25, `art`],
      [4, `F`],
    ],
  ],
  [
    88,
    [
      [3, 6, 50, `gems`],
      [4, `F`],
    ],
  ],
  [
    91,
    [
      [3, 6, 100, `gems`],
      [4, `F`],
    ],
  ],
  [
    94,
    [
      [2, 4, 250, `art`],
      [4, `F`],
    ],
  ],
  [
    96,
    [
      [3, 6, 100, `gems`],
      [4, `G`],
    ],
  ],
  [
    98,
    [
      [2, 4, 250, `art`],
      [4, `G`],
    ],
  ],
  [
    99,
    [
      [3, 6, 100, `gems`],
      [0, `H`],
    ],
  ],
  [
    100,
    [
      [2, 4, 250, `art`],
      [0, `H`],
    ],
  ],
]);
const treasureHoardTable11 = new Map([
  [3, [[], []]],
  [6, [[2, 4, 250, `art`], []]],
  [9, [[2, 4, 750, `art`], []]],
  [12, [[3, 6, 500, `gems`], []]],
  [15, [[3, 6, 1000, `gems`], []]],
  [
    19,
    [
      [2, 4, 250, `art`],
      [4, `A`],
      [6, `B`],
    ],
  ],
  [
    23,
    [
      [2, 4, 750, `art`],
      [4, `A`],
      [6, `B`],
    ],
  ],
  [
    26,
    [
      [3, 6, 500, `gems`],
      [4, `A`],
      [6, `B`],
    ],
  ],
  [
    29,
    [
      [3, 6, 1000, `gems`],
      [4, `A`],
      [6, `B`],
    ],
  ],
  [
    35,
    [
      [2, 4, 250, `art`],
      [6, `C`],
    ],
  ],
  [
    40,
    [
      [2, 4, 750, `art`],
      [6, `C`],
    ],
  ],
  [
    45,
    [
      [3, 6, 500, `gems`],
      [6, `C`],
    ],
  ],
  [
    50,
    [
      [3, 6, 1000, `gems`],
      [6, `C`],
    ],
  ],
  [
    54,
    [
      [2, 4, 250, `art`],
      [4, `D`],
    ],
  ],
  [
    58,
    [
      [2, 4, 750, `art`],
      [4, `D`],
    ],
  ],
  [
    62,
    [
      [3, 6, 500, `gems`],
      [4, `D`],
    ],
  ],
  [
    66,
    [
      [3, 6, 1000, `gems`],
      [4, `D`],
    ],
  ],
  [
    68,
    [
      [2, 4, 250, `art`],
      [0, `E`],
    ],
  ],
  [
    70,
    [
      [2, 4, 750, `art`],
      [0, `E`],
    ],
  ],
  [
    72,
    [
      [3, 6, 500, `gems`],
      [0, `E`],
    ],
  ],
  [
    74,
    [
      [3, 6, 1000, `gems`],
      [0, `E`],
    ],
  ],
  [
    76,
    [
      [2, 4, 250, `art`],
      [0, `F`],
      [4, `G`],
    ],
  ],
  [
    78,
    [
      [2, 4, 750, `art`],
      [0, `F`],
      [4, `G`],
    ],
  ],
  [
    80,
    [
      [3, 6, 500, `gems`],
      [0, `F`],
      [4, `G`],
    ],
  ],
  [
    82,
    [
      [3, 6, 1000, `gems`],
      [0, `F`],
      [4, `G`],
    ],
  ],
  [
    85,
    [
      [2, 4, 250, `art`],
      [4, `H`],
    ],
  ],
  [
    88,
    [
      [2, 4, 750, `art`],
      [4, `H`],
    ],
  ],
  [
    90,
    [
      [3, 6, 500, `gems`],
      [4, `H`],
    ],
  ],
  [
    92,
    [
      [3, 6, 1000, `gems`],
      [4, `H`],
    ],
  ],

  [
    94,
    [
      [2, 4, 250, `art`],
      [0, `I`],
    ],
  ],
  [
    96,
    [
      [2, 4, 750, `art`],
      [0, `I`],
    ],
  ],
  [
    98,
    [
      [3, 6, 500, `gems`],
      [0, `I`],
    ],
  ],
  [
    100,
    [
      [3, 6, 1000, `gems`],
      [0, `I`],
    ],
  ],
]);
const treasureHoardTable17 = new Map([
  [2, [[], []]],
  [
    5,
    [
      [3, 6, 1000, `gems`],
      [8, `C`],
    ],
  ],
  [
    8,
    [
      [1, 10, 2500, `art`],
      [8, `C`],
    ],
  ],
  [
    11,
    [
      [4, 2, 7500, `art`],
      [8, `C`],
    ],
  ],
  [
    14,
    [
      [1, 8, 5000, `gems`],
      [8, `C`],
    ],
  ],
  [
    22,
    [
      [3, 6, 1000, `gems`],
      [6, `D`],
    ],
  ],
  [
    30,
    [
      [1, 10, 2500, `art`],
      [6, `D`],
    ],
  ],
  [
    38,
    [
      [4, 2, 7500, `art`],
      [6, `D`],
    ],
  ],
  [
    46,
    [
      [1, 8, 5000, `gems`],
      [6, `D`],
    ],
  ],
  [
    52,
    [
      [3, 6, 1000, `gems`],
      [6, `E`],
    ],
  ],
  [
    58,
    [
      [1, 10, 2500, `art`],
      [6, `E`],
    ],
  ],
  [
    63,
    [
      [4, 2, 7500, `art`],
      [6, `E`],
    ],
  ],
  [
    68,
    [
      [1, 8, 5000, `gems`],
      [6, `E`],
    ],
  ],
  [
    69,
    [
      [3, 6, 1000, `gems`],
      [4, `G`],
    ],
  ],
  [
    70,
    [
      [1, 10, 2500, `art`],
      [4, `G`],
    ],
  ],
  [
    71,
    [
      [4, 2, 7500, `art`],
      [4, `G`],
    ],
  ],
  [
    72,
    [
      [1, 8, 5000, `gems`],
      [4, `G`],
    ],
  ],
  [
    74,
    [
      [3, 6, 1000, `gems`],
      [4, `H`],
    ],
  ],
  [
    76,
    [
      [1, 10, 2500, `art`],
      [4, `H`],
    ],
  ],
  [
    78,
    [
      [4, 2, 7500, `art`],
      [4, `H`],
    ],
  ],
  [
    80,
    [
      [1, 8, 5000, `gems`],
      [4, `H`],
    ],
  ],

  [
    85,
    [
      [3, 6, 1000, `gems`],
      [4, `I`],
    ],
  ],
  [
    90,
    [
      [1, 10, 2500, `art`],
      [4, `I`],
    ],
  ],
  [
    95,
    [
      [4, 2, 7500, `art`],
      [4, `I`],
    ],
  ],
  [
    100,
    [
      [1, 8, 5000, `gems`],
      [4, `I`],
    ],
  ],
]);
// Other Item Tables
const trinkets = [
  `A mummified goblin hand`,
  `A piece of crystal that faintly glows in the moonlight`,
  `A gold coin minted in an unknown land`,
  `A diary written in a language you don’t know`,
  `A brass ring that never tarnishes`,
  `An old chess piece made from glass`,
  `A pair of knucklebone dice, each with a skull symbol on the side that would normally show six pips`,
  `A small idol depicting a nightmarish creature that gives you unsettling dreams when you sleep near it`,
  `A rope necklace from which dangles four mummified elf fingers`,
  `The deed for a parcel of land in a realm unknown to you`,
  `A 1-ounce block made from an unknown material`,
  `A small cloth doll skewered with needles`,
  `A tooth from an unknown beast`,
  `An enormous scale, perhaps from a dragon`,
  `A bright green feather`,
  `An old divination card bearing your likeness`,
  `A glass orb filled with moving smoke`,
  `A 1-pound egg with a bright red shell`,
  `A pipe that blows bubbles`,
  `A glass jar containing a weird bit of flesh floating in pickling fluid`,
  `A tiny gnome-crafted music box that plays a song you dimly remember from your childhood`,
  `A small wooden statuette of a smug halfling`,
  `A brass orb etched with strange runes`,
  `A multicolored stone disk`,
  `A tiny silver icon of a raven`,
  `A bag containing forty-seven humanoid teeth, one of which is rotten`,
  `A shard of obsidian that always feels warm to the touch`,
  `A dragon's bony talon hanging from a plain leather necklace`,
  `A pair of old socks`,
  `A blank book whose pages refuse to hold ink, chalk, graphite, or any other substance or marking`,
  `A silver badge in the shape of a five-pointed star`,
  `A knife that belonged to a relative`,
  `A glass vial filled with nail clippings`,
  `A rectangular metal device with two tiny metal cups on one end that throws sparks when wet`,
  `A white, sequined glove sized for a human`,
  `A vest with one hundred tiny pockets`,
  `A small, weightless stone block`,
  `A tiny sketch portrait of a goblin`,
  `An empty glass vial that smells of perfume when opened`,
  `A gemstone that looks like a lump of coal when examined by anyone but you`,
  `A scrap of cloth from an old banner`,
  `A rank insignia from a lost legionnaire`,
  `A tiny silver bell without a clapper`,
  `A mechanical canary inside a gnome-crafted lamp`,
  `A tiny chest carved to look like it has numerous feet on the bottom`,
  `A dead sprite inside a clear glass bottle`,
  `A metal can that has no opening but sounds as if it is filled with liquid, sand, spiders, or broken glass (your choice`,
  `A glass orb filled with water, in which swims a clockwork goldfish`,
  `A silver spoon with an M engraved on the handle`,
  `A whistle made from gold-colored wood`,
  `A dead scarab beetle the size of your hand`,
  `Two toy soldiers, one with a missing head`,
  `A small box filled with different-sized buttons`,
  `A candle that can’t be lit`,
  `A tiny cage with no door`,
  `An old key`,
  `An indecipherable treasure map`,
  `A hilt from a broken sword`,
  `A rabbit’s foot`,
  `A glass eye`,
  `A cameo carved in the likeness of a hideous person`,
  `A silver skull the size of a coin`,
  `An alabaster mask`,
  `A pyramid of sticky black incense that smells very bad`,
  `A nightcap that, when worn, gives you pleasant dreams`,
  `A single caltrop made from bone`,
  `A gold monocle frame without the lens`,
  `A 1-inch cube, each side painted a different color`,
  `A crystal knob from a door`,
  `A small packet filled with pink dust`,
  `A fragment of a beautiful song, written as musical notes on two pieces of parchment`,
  `A silver teardrop earring made from a real teardrop`,
  `The shell of an egg painted with scenes of human misery in disturbing detail`,
  `A fan that, when unfolded, shows a sleeping cat`,
  `A set of bone pipes`,
  `A four-leaf clover pressed inside a book discussing manners and etiquette`,
  `A sheet of parchment upon which is drawn a complex mechanical contraption`,
  `An ornate scabbard that fits no blade you have found so far`,
  `An invitation to a party where a murder happened`,
  `A bronze pentacle with an etching of a rat's head in its center`,
  `A purple handkerchief embroidered with the name of a powerful archmage`,
  `Half of a floorplan for a temple, castle, or some other structure`,
  `A bit of folded cloth that, when unfolded, turns into a stylish cap`,
  `A receipt of deposit at a bank in a far-flung city`,
  `A diary with seven missing pages`,
  `An empty silver snuffbox bearing an inscription on the surface that says "dreams"`,
  `An iron holy symbol devoted to an unknown god`,
  `A book that tells the story of a legendary hero's rise and fall, with the last chapter missing`,
  `A vial of dragon blood`,
  `An ancient arrow of elven design`,
  `A needle that never bends`,
  `An ornate brooch of dwarven design`,
  `An empty wine bottle bearing a pretty label that says, "The Wizard of Wines Winery, Red Dragon Crush, 331422-W"`,
  `A mosaic tile with a multicolored, glazed surface`,
  `A petrified mouse`,
  `A black pirate flag adorned with a dragon's skull and crossbones`,
  `A tiny mechanical crab or spider that moves about when it’s not being observed`,
  `A glass jar containing lard with a label that reads, "Griffon Grease"`,
  `A wooden box with a ceramic bottom that holds a living worm with a head on each end of its body`,
  `A metal urn containing the ashes of a hero`,
];
const commonMagicalItems = [
  `Armour of Gleaming`,
  `Bead of Nourishment`,
  `Bead of Refreshment`,
  `Boots of False Tracks`,
  `Candle of the Deep`,
  `Cast-Off Armour`,
  `Charlatan's Die`,
  `Cloak of Billowing`,
  `Claok of Many Fashions`,
  `Clockwork Amulet`,
  `Clothes of Mending`,
  `Dark Shard Amulet`,
  `Dread Helm`,
  `Ear Horn of Hearing`,
  `Enduring Spellbook`,
  `Ersatz Eye`,
  `Hat of Vermin`,
  `Hat of Wizardry`,
  `Heward's Handy Spice Pouch`,
  `Horn of Silent Alarm`,
  `Instrument of Illusion`,
  `Instrument of Scribing`,
  `Lock of Trickery`,
  `Moon-Touched Sword`,
  `Mystery Key`,
  `Orb of Direction`,
  `Orb of Time`,
  `Perfume of Bewitching`,
  `Pipe of Smoke Monsters`,
  `Pole of Angling`,
  `Pole of Collapsing`,
  `Potion of Climbing`,
  `Potion of Healing`,
  `Rope of Mending`,
  `Ruby of the War Mage`,
  `Shield of Expression`,
  `Smoldering Armour`,
  `Spell Scroll (Cantrip)`,
  `Spell Scroll (First level)`,
  `Staff of Adornment`,
  `Staff of Birdcalls`,
  `Staff of Flowers`,
  `Talking Doll`,
  `Tankard of Sobriety`,
  `Unbreakable Arrow`,
  `Veteran's Cane`,
  `Walloping Ammunition`,
  `Wand of Conducting`,
  `Wand of Pyrotechnics`,
  `Wand of Scowls`,
  `Wand of Smiles`,
];
// Quest Hook Tables
const dungeonGoals = [
  `Stop the dungeon's monstrous inhabitants from raiding the surface world. `,
  `Foil a villain's evil scheme. `,
  `Destroy a magical threat inside the dungeon.`,
  `Acquire treasure . `,
  `Find a particular item for a specific purpose.`,
  `Retrieve a stolen item hidden in the dungeon. `,
  `Find information needed for a special purpose.`,
  `Rescue a captive.`,
  `Discover the fate of a previous adventuring party.`,
  `Find an NPC who disappeared in the area.`,
  `Slay a dragon or some other challenging monster`,
  `Discover the nature and origin of a strange location or phenomenon.`,
  `Pursue fleeing foes taking refuge in the dungeon. `,
  `Escape from captivity in the dungeon. `,
  `Clear a ruin so it can be rebuilt and reoccupied. `,
  `Discover why a villain is interested in the dungeon. `,
  `Win a bet or complete a rite of passage by surviving in the dungeon for a certain amount of time.`,
  `Parley with a villain in the dungeon. `,
  `Hide from a threat outside the dungeon. `,
  `Roll twice, ignoring resu lts of 20. `,
];
const wildernessGoals = [
  `Locate a dungeon or other site of interest (roll on the Dungeon Goals table to find out why).`,
  `Assess the scope of a natural or unnatural disaster.`,
  `Escort an NPC to a destination.`,
  `Arrive at a destination without being seen by the villain's forces.`,
  `Stop monsters from raiding caravans and farms.`,
  `Establish trade with a distant town.`,
  `Protect a caravan traveling to a distant town .`,
  `Map a new land.`,
  `Find a place to establish a colony.`,
  `Find a natural resource.`,
  `Hunt a specific monster.`,
  `Return home from a distant place.`,
  `Obtain information from a reclusive hermit.`,
  `Find an object that was lost in the wilds.`,
  `Discover the fate of a missing group of explorers.`,
  `Pursue fleeing foes.`,
  `Assess the size of an approaching army.`,
  `Escape the reign of a tyrant.`,
  `Protect a wilderness site from attackers.`,
  `Roll twice, ignoring results of 20.`,
];
const otherGoals = [
  `Seize control of a fortified location such as a fortress, town, or ship.`,
  `Defend a location from attackers.`,
  `Retrieve an object from inside a secure location in a settlement.`,
  `Retrieve an object from a caravan.`,
  `Salvage an object or goods from a lost vessel or caravan.`,
  `Break a prisoner out of a jail or prison camp.`,
  `Escape from a jail or prison camp. `,
  `Successfully travel through an obstacle course to gain recognition or reward.`,
  `Infiltrate a fortified location.`,
  `Find the source of strange occurrences in a haunted house or other location.`,
  `Interfere with the operation of a business.`,
  `Rescue a character, monster, or object from a natural or unnatural disaster.`,
];
// Tavern Name Tables
const tavernFirst = [
  `The Silver`,
  `The Golden`,
  `The Staggering`,
  `The Laughing`,
  `The Prancing`,
  `The Gilded`,
  `The Running`,
  `The Howling`,
  `The Slaughtered`,
  `The Leering`,
  `The Drunken`,
  `The Leaping`,
  `The Roaring`,
  `The Frowning`,
  `The Lonely`,
  `The Wandering`,
  `The Mysterious`,
  `The Barking`,
  `The Black`,
  `The Gleaming`,
];
const tavernSecond = [
  `Eel`,
  `Dolphin`,
  `Dwarf`,
  `Pegasus`,
  `Pony`,
  `Rose`,
  `Stag`,
  `Wolf`,
  `Lamb`,
  `Demon`,
  `Goat`,
  `Spirit`,
  `Horde`,
  `Jester`,
  `Mountain`,
  `Eagle`,
  `Satyr`,
  `Dog`,
  `Spider`,
  `Star`,
];
// God Tables
const godsOfTheForgottenRealms = new Map([
  [
    `Auril`,
    {
      epitaph: `godess of winter`,
      alignment: `NE`,
      domain: [`Nature`, `Tempest`],
      symbol: `Six-pointed snowflake`,
      shortSymbol: [`snowflake`],
    },
  ],
  [
    `Azuth`,
    {
      epitaph: `god of wizards`,
      alignment: `LN`,
      domain: [`Knowledge`],
      symbol: `Left hand pointing upward, outlined in fire`,
      shortSymbol: [`flaming hand`, `burning hand`, `pointed finger`],
    },
  ],
  [
    `Bane`,
    {
      epitaph: `god of tyranny`,
      alignment: `LE`,
      domain: [`War`],
      symbol: `Upright black right hand, thumb and fingers together`,
      shortSymbol: [`black hand`, `black palm`],
    },
  ],
  [
    `Beshaba`,
    {
      epitaph: `godess of misfortune`,
      alignment: `CE`,
      domain: [`Trickery`],
      symbol: `Black antlers`,
      shortSymbol: [`antlers`, `black antlers`],
    },
  ],
  [
    `Bhaal`,
    {
      epitaph: `god of murder`,
      alignment: `NE`,
      domain: [`Death`],
      symbol: `Skull surrounded by a ring of blood droplets`,
      shortSymbol: [`skull`, `bloody skull`, `blood-ringed skull`],
    },
  ],
  [
    `Chauntea`,
    {
      epitaph: ` goddess of agriculture`,
      alignment: `NG`,
      domain: [`Life`],
      symbol: `Sheaf of grain or a blooming rose over grain`,
      shortSymbol: [`grain`, `rose`, `blooming rose`],
    },
  ],
  [
    `Cyric`,
    {
      epitaph: `god of lies`,
      alignment: `CE`,
      domain: [`Trickery`],
      symbol: `White jawless skull on black or purple sunburst`,
      shortSymbol: [`skull`, `pale skull`, `jawless skull`, `sunburst`],
    },
  ],
  [
    `Deneir`,
    {
      epitaph: `god of writing`,
      alignment: `NG`,
      domain: [`Knowledge`],
      symbol: ` Lit candle above an open eye`,
      shortSymbol: [`candle`, `lit candle`, `open eye`],
    },
  ],
  [
    `Eldath`,
    {
      epitaph: `goddess of peace`,
      alignment: `NG`,
      domain: [`Life`, `Nature`],
      symbol: `Waterfall plunging into still pool`,
      shortSymbol: [`waterfall`, `cascade`, `pool`, `still pool`],
    },
  ],
  [
    `Gond`,
    {
      epitaph: `god of craft`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Toothed cog with four spokes`,
      shortSymbol: [`cog`, `spoked cog`, `toothed cog`, `cog and spokes`],
    },
  ],
  [
    `Helm`,
    {
      epitaph: `god of protection`,
      alignment: `LN`,
      domain: [`Life`, `Light`],
      symbol: `Staring eye on upright left gauntlet`,
      shortSymbol: [`eye`, `gauntlet`, `iron fist`, `left fist`, `staring eye`],
    },
  ],
  [
    `Ilmater`,
    {
      epitaph: `god of endurance`,
      alignment: `LG`,
      domain: [`Life`],
      symbol: `Hands bound at the wrist with red cord`,
      shortSymbol: [`hands`, `bound hands`, `cord`, `red cord`],
    },
  ],
  [
    `Kelemvor`,
    {
      epitaph: `god of the dead`,
      alignment: `LN`,
      domain: [`Death`],
      symbol: `Upright skeletal arm holding balanced scales`,
      shortSymbol: [
        `arm`,
        `skeletal arm`,
        `scales`,
        `balanced scales`,
        `arm and scales`,
      ],
    },
  ],
  [
    `Lathander`,
    {
      epitaph: `god of birth and renewal`,
      alignment: `NG`,
      domain: [`Life`, `Light`],
      symbol: `Road traveling into a sunrise`,
      shortSymbol: [`road`, `rising sun`, `well-lit road`],
    },
  ],
  [
    `Leira`,
    {
      epitaph: `goddess of illusion`,
      alignment: `CN`,
      domain: [`Trickery`],
      symbol: `Point-down triangle containing a swirl of mist`,
      shortSymbol: [`mist`, `mists`, `swirling mist`],
    },
  ],
  [
    `Lliira`,
    {
      epitaph: `goddess of joy`,
      alignment: `CG`,
      domain: [`Life`],
      symbol: `Triangle of three six-pointed stars`,
      shortSymbol: [`stars`, `six-pointed stars`],
    },
  ],
  [
    `Loviatar`,
    {
      epitaph: `goddess of pain`,
      alignment: `LE`,
      domain: [`Death`],
      symbol: `Nine-tailed barbed scourge`,
      shortSymbol: [`scourge`, `barbed scourge`, `nine-tailed scourge`],
    },
  ],
  [
    `Malar`,
    {
      epitaph: `god of the hunt`,
      alignment: `CE`,
      domain: [`Nature`],
      symbol: `Clawed paw`,
      shortSymbol: [`claws`, `paw`, `clawed paw`],
    },
  ],
  [
    `Mask`,
    {
      epitaph: `god of thieves`,
      alignment: `CN`,
      domain: [`Trickery`],
      symbol: `Black mask`,
      shortSymbol: [`mask`, `black mask`],
    },
  ],
  [
    `Mielikki`,
    {
      epitaph: `goddess of forests`,
      alignment: `NG`,
      domain: [`Nature`],
      symbol: `Unicorn’s head`,
      shortSymbol: [`unicorn`],
    },
  ],
  [
    `Milil`,
    {
      epitaph: `god of poetry song`,
      alignment: `NG`,
      domain: [`Light`],
      symbol: `Five-stringed harp made of leaves`,
      shortSymbol: [`harp`, `leafy harp`, `five-stringed harp`],
    },
  ],
  [
    `Myrkul`,
    {
      epitaph: `god of death`,
      alignment: `NE`,
      domain: [`Death`],
      symbol: `White human skull`,
      shortSymbol: [`skull`, `white skull`, `pale skull`],
    },
  ],
  [
    `Mystra`,
    {
      epitaph: `Mystra`,
      alignment: `NG`,
      domain: [`Knowledge`],
      symbol: `Circle of seven stars, or nine stars encircling a flowing red mist, or a single star`,
      shortSymbol: [`seven stars`, `nine stars`, `mist`, `red mist`, `star`],
    },
  ],
  [
    `Oghma`,
    {
      epitaph: `god of knowledge`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Blank scroll`,
      shortSymbol: [`scroll`, `blank scroll`],
    },
  ],
  [
    `Savras`,
    {
      epitaph: `god of divination and fate`,
      alignment: `LN`,
      domain: [`Knowledge`],
      symbol: `Crystal ball containing many kinds of eyes`,
      shortSymbol: [`ball`, `crystal ball`, `eyes`, `many eyes`],
    },
  ],
  [
    `Selune`,
    {
      epitaph: ` goddess of the moon`,
      alignment: `CG`,
      domain: [`Knowledge`, `Life`],
      symbol: `Pair of eyes surrounded by seven stars`,
      shortSymbol: [`eyes`, `stars`, `seven stars`],
    },
  ],
  [
    `Shar`,
    {
      epitaph: `goddess of darkness and loss`,
      alignment: `NE`,
      domain: [`Death`, `Trickery`],
      symbol: `Black disk encircled with a border`,
      shortSymbol: [`disk`, `black disk`],
    },
  ],
  [
    `Silvanus`,
    {
      epitaph: `god of wild nature`,
      alignment: `N`,
      domain: [`Nature`],
      symbol: `Oak leaf`,
      shortSymbol: [`leaf`, `oak leaf`],
    },
  ],
  [
    `Sune`,
    {
      epitaph: `goddess of love and beauty`,
      alignment: `CG`,
      domain: [`Life`, `Light`],
      symbol: `Face of a beautiful red-haired woman`,
      shortSymbol: [`face`, `beautiful face`, `red hair`],
    },
  ],
  [
    `Talona`,
    {
      epitaph: ` goddess of disease and poison`,
      alignment: `CE`,
      domain: [`Death`],
      symbol: `Three teardrops on a triangle`,
      shortSymbol: [`tears`, `three tears`],
    },
  ],
  [
    `Talos`,
    {
      epitaph: `god of storms`,
      alignment: `CE`,
      domain: [`Tempst`],
      symbol: `Three lightning bolts radiating from a central point`,
      shortSymbol: [`lightning bolts`, `bolts`, `three bolts`],
    },
  ],
  [
    `Tempus`,
    {
      epitaph: `god of war`,
      alignment: `N`,
      domain: [`War`],
      symbol: `Upright flaming sword`,
      shortSymbol: [
        `sword`,
        `upright sword`,
        `flaming sword`,
        `burning sword`,
        `burning blade`,
      ],
    },
  ],
  [
    `Torm`,
    {
      epitaph: `god of courage and self-sacrifice`,
      alignment: `LG`,
      domain: [`War`],
      symbol: `White right gauntlet`,
      shortSymbol: [
        `gauntlet`,
        `iron fist`,
        `white gauntlet`,
        `right gauntlet`,
        `right fist`,
      ],
    },
  ],
  [
    `Tymora`,
    {
      epitaph: `goddess of good fortune`,
      alignment: `CG`,
      domain: [`Trickery`],
      symbol: `Face-up coin`,
      shortSymbol: [`coin`, `face-up coin`, `lucky coin`],
    },
  ],
  [
    `Tyr`,
    {
      epitaph: `god of justice`,
      alignment: `LG`,
      domain: [`War`],
      symbol: `Balanced scales resting on a warhammer`,
      shortSymbol: [
        `scales`,
        `hammer`,
        `warhammer`,
        `hammer and scales`,
        `balanced scales`,
      ],
    },
  ],
  [
    `Umberlee`,
    {
      epitaph: `goddess of the sea`,
      alignment: `CE`,
      domain: [`Tempest`],
      symbol: `Wave curling left and right`,
      shortSymbol: [`wave`, `heaving wave`, `great wave`],
    },
  ],
  [
    `Waukeen`,
    {
      epitaph: `goddess of trade`,
      alignment: `N`,
      domain: [`Knowledge`, `Trickery`],
      symbol: `Upright coin with Waukeen’s profile facing left`,
      shortSymbol: [`coin`, `profitable coin`],
    },
  ],
]);
const godsOfGreyhawk = new Map([
  [
    `Beory`,
    {
      epitaph: `godess of nature`,
      alignment: `N`,
      domain: [`Nature`],
      symbol: `Green disk`,
      shortSymbol: [`disk`, `green disk`],
    },
  ],
  [
    `Boccob`,
    {
      epitaph: `god of magic`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Eye within a pentagram`,
      shortSymbol: [`eye`, `pentagram`],
    },
  ],
  [
    `Celestian`,
    {
      epitaph: ` god of stars and wanderers`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Arc of seven stars inside a circle`,
      shortSymbol: [`stars`],
    },
  ],
  [
    `Ehlonna`,
    {
      epitaph: `goddess of woodlands`,
      alignment: `NG`,
      domain: [`Life`, `Nature`],
      symbol: `Unicorn horn`,
      shortSymbol: [`horn`, `unicorn`],
    },
  ],
  [
    `Erythnu`,
    {
      epitaph: `god of envy and slaughter`,
      alignment: `CE`,
      domain: [`War`],
      symbol: ` Blood drop`,
      shortSymbol: [`blood`, `blood drop`],
    },
  ],
  [
    `Fharlanghn`,
    {
      epitaph: `god of horizons and travel`,
      alignment: `NG`,
      domain: [`Knowledge`, `Trickery`],
      symbol: `Circle crossed by a curved horizon line`,
      shortSymbol: [`horizon`],
    },
  ],
  [
    `Heironeous`,
    {
      epitaph: `god of chivalry and valor`,
      alignment: `LG`,
      domain: [`War`],
      symbol: `Lightning bolt`,
      shortSymbol: [`bolt`, `lightning`, `lightning bolt`],
    },
  ],
  [
    `Hextor`,
    {
      epitaph: `god of war and discord`,
      alignment: `LE`,
      domain: [`War`],
      symbol: `Six arrows facing downward in a fan`,
      shortSymbol: [`arrows`, `six arrows`, `fanned arrows`],
    },
  ],
  [
    `Kord`,
    {
      epitaph: `god of athletics and sport`,
      alignment: `CG`,
      domain: [`Tempest`, `War`],
      symbol: `Four spears and four maces radiating out from a central point`,
      shortSymbol: [`spears`, `maces`, `spears and maces`],
    },
  ],
  [
    `Istus`,
    {
      epitaph: ` goddess of fate and destiny`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Weaver's spindle with three strands`,
      shortSymbol: [
        `spindle`,
        `strands`,
        `first strand`,
        `second strand`,
        `third strand`,
      ],
    },
  ],
  [
    `Iuz`,
    {
      epitaph: `god of pain and oppression`,
      alignment: `CE`,
      domain: [`Death`],
      symbol: `Grinning human skull`,
      shortSymbol: [`skull`, `grinning skull`],
    },
  ],
  [
    `Nerull`,
    {
      epitaph: `god of death`,
      alignment: `NE`,
      domain: [`Death`],
      symbol: `Skull with either a sickle or a scythe`,
      shortSymbol: [
        `skull`,
        `scythe`,
        `sickle`,
        `skull and sickle`,
        `skull and scythe`,
      ],
    },
  ],
  [
    `Obad-Hai`,
    {
      epitaph: `god of nature`,
      alignment: `N`,
      domain: [`Nature`],
      symbol: `Oak leaf and acorn`,
      shortSymbol: [`leaf`, `oak leaf`, `acorn`],
    },
  ],
  [
    `Olidammara`,
    {
      epitaph: `god of revelry`,
      alignment: `CN`,
      domain: [`Trickery`],
      symbol: `Laughing mask`,
      shortSymbol: [`mask`, `laughing mask`],
    },
  ],
  [
    `Pelor`,
    {
      epitaph: `god of the sun and healing`,
      alignment: `NG`,
      domain: [`Life`, `Light`],
      symbol: `Sun`,
      shortSymbol: [`light`, `sun`],
    },
  ],
  [
    `Pholtus`,
    {
      epitaph: `god of light and law`,
      alignment: `LG`,
      domain: [`Light`],
      symbol: `Silver sun or full moon partially eclipsed by a smaller crescent moon`,
      shortSymbol: [
        `sun`,
        `silver sun`,
        `moon`,
        `full moon`,
        `crescent moon`,
        `twin moons`,
      ],
    },
  ],
  [
    `Ralishaz`,
    {
      epitaph: `god of ill luck and insanity`,
      alignment: `CN`,
      domain: [`Trickery`],
      symbol: `Three bone fate-casting sticks`,
      shortSymbol: [`bones`, `three bones`, `sticks`, `fate-sticks`],
    },
  ],
  [
    `Rao`,
    {
      epitaph: `god of peace and reason`,
      alignment: `LG`,
      domain: [`Knowledge`],
      symbol: `White heart`,
      shortSymbol: [`heart`, `white heart`, `pure heart`],
    },
  ],
  [
    `St. Cuthbert`,
    {
      epitaph: `god of common sense and zeal`,
      alignment: `LN`,
      domain: [`Knowledge`],
      symbol: `Circle at the center of a starburst of lines`,
      shortSymbol: [`starburst`, `star`, `circle`],
    },
  ],
  [
    `Tharizdun`,
    {
      epitaph: `god of eternal darkness`,
      alignment: `CE`,
      domain: [`Trickery`],
      symbol: `dark spiral or inverted ziggurat`,
      shortSymbol: [`spiral`, `dark spiral`, `ziggurat`],
    },
  ],
  [
    `Trithereon`,
    {
      epitaph: `god of liberty and retribution`,
      alignment: `CG`,
      domain: [`War`],
      symbol: `Triskelion`,
      shortSymbol: [`triskelion`, `three spirals`],
    },
  ],
  [
    `Ulaa`,
    {
      epitaph: `godess of hills and mountains`,
      alignment: `LG`,
      domain: [`Life`, `War`],
      symbol: `Mountain with a circle at its heart`,
      shortSymbol: [`mountain`, `circle`],
    },
  ],
  [
    `Vecna`,
    {
      epitaph: `god of evil secrets`,
      alignment: `NE`,
      domain: [`Knowledge`],
      symbol: `Hand with eye in the palm`,
      shortSymbol: [`hand`, `eye`, `palm`, `eyed palm`],
    },
  ],
  [
    `Wee Jas`,
    {
      epitaph: `godess of magic and death`,
      alignment: `LN`,
      domain: [`Death`, `Knowledge`],
      symbol: `Red skull in front of  a fireball`,
      shortSymbol: [`skull`, `red skull`, `fireball`, `flame`],
    },
  ],
]);
const godsOfDragonlance = new Map([
  [
    `Paladine`,
    {
      epitaph: `god ff rulers and guardians`,
      alignment: `LG`,
      domain: [`War`],
      symbol: `Silver triangle`,
      shortSymbol: [`triangle`, `silver triangle`],
    },
  ],
  [
    `Branchala`,
    {
      epitaph: `god of music`,
      alignment: `NG`,
      domain: [`Light`],
      symbol: `Bard's harp`,
      shortSymbol: [`harp`],
    },
  ],
  [
    `Habbakuk`,
    {
      epitaph: `god of animals and the sea`,
      alignment: `NG`,
      domain: [`Nature`, `Tempest`],
      symbol: `Blue bird`,
      shortSymbol: [`bird`, `blue bird`],
    },
  ],
  [
    `Kiri-Jolith`,
    {
      epitaph: `god of honour and war`,
      alignment: `LG`,
      domain: [`War`],
      symbol: `Bison's horns`,
      shortSymbol: [`horns`],
    },
  ],
  [
    `Majere`,
    {
      epitaph: `god of meditation and order`,
      alignment: `LG`,
      domain: [`KNowledge`],
      symbol: `Copper spider`,
      shortSymbol: [`spider`, `copper spider`],
    },
  ],
  [
    `Mishakal`,
    {
      epitaph: `godess of healing`,
      alignment: `LG`,
      domain: [`Knowledge`, `Life`],
      symbol: `Blue infinity sign`,
      shortSymbol: [`sign`, `symbol`],
    },
  ],
  [
    `Solinari`,
    {
      epitaph: `god of good magic`,
      alignment: `LG`,
      domain: [`No Clerics`],
      symbol: `White circle or sphere`,
      shortSymbol: [`circle`, `sphere`, `white circle`, `white sphere`],
    },
  ],
  [
    `Gilean`,
    {
      epitaph: `god of knowledge`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Open book`,
      shortSymbol: [`book`, `open book`],
    },
  ],
  [
    `Chioslev`,
    {
      epitaph: `godess of nature`,
      alignment: `N`,
      domain: [`Nature`],
      symbol: `Feather`,
      shortSymbol: [`feather`],
    },
  ],
  [
    `Reorx`,
    {
      epitaph: `god of craft`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Forging hammer`,
      shortSymbol: [`hammer`, `heavy hammer`, `forging hammer`],
    },
  ],
  [
    `Shinare`,
    {
      epitaph: `godess of wealth and trade`,
      alignment: `N`,
      domain: [`Knowledge`, `Trickery`],
      symbol: `Griffon's wing`,
      shortSymbol: [`wing`, `griffon's wing`],
    },
  ],
  [
    `Sirrion`,
    {
      epitaph: `god of fire and change`,
      alignment: `N`,
      domain: [`Nature`],
      symbol: `Multi-colored fire`,
      shortSymbol: [`fire`, `flame`, `flames`],
    },
  ],
  [
    `Zivilyn`,
    {
      epitaph: `god of wisdom`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Great green or gold tree`,
      shortSymbol: [
        `tree`,
        `great tree`,
        `green tree`,
        `gold tree`,
        "golden tree",
      ],
    },
  ],
  [
    `Lunitari`,
    {
      epitaph: `goddess of neutral magic`,
      alignment: `N`,
      domain: [`No Clerics`],
      symbol: `Red circle or sphere`,
      shortSymbol: [`circle`, `sphere`, `red circle`, `red sphere`],
    },
  ],
  [
    `Takhisis`,
    {
      epitaph: `goddess of night and hatred`,
      alignment: `LE`,
      domain: [`Death`],
      symbol: `Black crescent`,
      shortSymbol: [`crescent`, `black crescent`],
    },
  ],
  [
    `Chemosh`,
    {
      epitaph: `god of the undead`,
      alignment: `LE`,
      domain: [`Death`],
      symbol: `Yellow skull`,
      shortSymbol: [`skull`, `yellow skull`],
    },
  ],
  [
    `Hiddukel`,
    {
      epitaph: `god of lies and greed`,
      alignment: `CE`,
      domain: [`Trickery`],
      symbol: `Broken merchant’s scales`,
      shortSymbol: [`scales`, `broken scales`],
    },
  ],
  [
    `Morgion`,
    {
      epitaph: ` god of disease and secrecy`,
      alignment: `NE`,
      domain: [`Death`],
      symbol: `Stylized red condor`,
      shortSymbol: [`condor`, `red condor`],
    },
  ],
  [
    `Zeboim`,
    {
      epitaph: `goddess of the sea and storms`,
      alignment: `CE`,
      domain: [`Tempest`],
      symbol: `Turtle shell`,
      shortSymbol: [`shell`, `turtle shell`],
    },
  ],
  [
    `Nuitari`,
    {
      epitaph: `god of evil magic`,
      alignment: `LE`,
      domain: [`No Clerics`],
      symbol: `Black circle or sphere`,
      shortSymbol: [`circle`, `sphere`, `black circle`, `black sphere`],
    },
  ],
]);
const godsOfEberron = new Map([
  [
    `Arawai`,
    {
      epitaph: `godess of fertility`,
      alignment: `NG`,
      domain: [`Life`, `Nature`],
      symbol: `Sheaf of wheat tied with green ribbon`,
      shortSymbol: [`sheaf`, `wheat`, `tied sheaf`, `grain`],
    },
  ],
  [
    `Aureon`,
    {
      epitaph: `god of law and knowledge`,
      alignment: `LN`,
      domain: [`Knowledge`],
      symbol: `Open tome`,
      shortSymbol: [`tome`, `open tome`],
    },
  ],
  [
    `Balinor`,
    {
      epitaph: `god of beasts and the hunt`,
      alignment: `N`,
      domain: [`Life`, `Nature`],
      symbol: `Pair of antlers`,
      shortSymbol: [`antlers`],
    },
  ],
  [
    `Boldrei`,
    {
      epitaph: `godess of community and home`,
      alignment: `LG`,
      domain: [`Life`],
      symbol: `Fire in a stone hearth`,
      shortSymbol: [
        `fire`,
        `hearth`,
        `heated hearth`,
        `stone hearth`,
        `warming flames`,
      ],
    },
  ],
  [
    `Dol Arrah`,
    {
      epitaph: `godess of sunlight and honour`,
      alignment: `LG`,
      domain: [`Light`, `War`],
      symbol: `Rising sun`,
      shortSymbol: [`sun`, `dawning sun`, `rising sun`],
    },
  ],
  [
    `Dol Dorn`,
    {
      epitaph: `god of strength at arms`,
      alignment: `CG`,
      domain: [`War`],
      symbol: `Longsword crossed over a shield`,
      shortSymbol: [
        `sword`,
        `shield`,
        `mighty sword`,
        `blade`,
        `longsword`,
        `mighty shield`,
      ],
    },
  ],
  [
    `Kol Korran`,
    {
      epitaph: `god of trade and wealth`,
      alignment: `N`,
      domain: [`Trickery`],
      symbol: `Nine-sided gold coin`,
      shortSymbol: [
        `coin`,
        `gold coin`,
        `golden coin`,
        `nine-sided coin`,
        `many-sided coin`,
      ],
    },
  ],
  [
    `Olladra`,
    {
      epitaph: `goddess of good fortune`,
      alignment: `NG`,
      domain: [`Life`, `Trickery`],
      symbol: `Domino`,
      shortSymbol: [`domino`],
    },
  ],
  [
    `Onatar`,
    {
      epitaph: `god of craft`,
      alignment: `NG`,
      domain: [` Knowledge`],
      symbol: `Crossed hammer and tongs`,
      shortSymbol: [`hammer`, `tongs`, `hammer and tongs`, `tools`],
    },
  ],
  [
    `The Devourer`,
    {
      epitaph: `god of nature’s wrath`,
      alignment: `NE`,
      domain: [`Tempest`],
      symbol: `Bundle of five sharpened bones`,
      shortSymbol: [`bones`, `five bones`, `many bones`, `sharpened bones`],
    },
  ],
  [
    `The Fury`,
    {
      epitaph: `goddess of wrath and madness`,
      alignment: `NE`,
      domain: [` War`],
      symbol: `Winged wyrm with woman’s head and upper body`,
      shortSymbol: [`wyrm`, `winged wyrm`],
    },
  ],
  [
    `The Keeper`,
    {
      epitaph: `god of greed and death`,
      alignment: `NE`,
      domain: [`Death`],
      symbol: `Dragonshard stone in the shape of a fang`,
      shortSymbol: [`dragonshard`, `fang`, `stone fang`],
    },
  ],
  [
    `The Mockery`,
    {
      epitaph: `god of violence and treachery`,
      alignment: `NE`,
      domain: [`War`],
      symbol: `Five blood-spattered tools
`,
      shortSymbol: [`bloody tools`, `five tools`, `many tools`],
    },
  ],
  [
    `The Shadow`,
    {
      epitaph: `god of dark magic`,
      alignment: `CE`,
      domain: [`Knowledge`],
      symbol: `Obsidian tower`,
      shortSymbol: [`tower`, `obsidian tower`, `black tower`],
    },
  ],
  [
    `The Traveler`,
    {
      epitaph: `deity of chaos and change`,
      alignment: `CN`,
      domain: [`Knowledge`, `Trickery`],
      symbol: `Four crossed, rune-inscribed bones`,
      shortSymbol: [`bones`, `crossed bones`, `carved bones`, `rune-bones`],
    },
  ],
  [
    `The Silver Flame`,
    {
      epitaph: `deity of protection and good`,
      alignment: `LG`,
      domain: [`Light`, `Life`, `War`],
      symbol: `Flame drawn on silver or molded from silver`,
      shortSymbol: [`flame`, `silver flame`],
    },
  ],
]);
const godsOfNonHumans = new Map([
  [
    `Bahamut`,
    {
      epitaph: `dragon god of good`,
      alignment: `LG`,
      domain: [`Life`, `War`],
      symbol: `Dragon’s head in profile`,
      shortSymbol: [
        `head`,
        `teeth`,
        `fangs`,
        `breath`,
        `eyes`,
        `claws`,
        `visage`,
      ],
    },
  ],
  [
    `Blibdoolpoolp`,
    {
      epitaph: `kuo-toa goddess`,
      alignment: `NE`,
      domain: [`Death`],
      symbol: `Lobster head or black pearl`,
      shortSymbol: [`lobster`, `lobster's head`, `pearl`, `black pearl`],
    },
  ],
  [
    `Corellon Larethian`,
    {
      epitaph: `elf deity of art and magic `,
      alignment: `CG`,
      domain: [`Light`],
      symbol: `Quarter moon or starburst`,
      shortSymbol: [`moon`, `quarter moon`, `starburst`],
    },
  ],
  [
    `Deep Sashelas`,
    {
      epitaph: `elf god of the sea`,
      alignment: `CG`,
      domain: [`Nature`, `Tempest`],
      symbol: `Dolphin`,
      shortSymbol: [`dolphin`],
    },
  ],
  [
    `Eadro`,
    {
      epitaph: `merfolk deity of the sea`,
      alignment: `N`,
      domain: [`Nature`, `Tempest`],
      symbol: `Spiral design`,
      shortSymbol: [`spiral`],
    },
  ],
  [
    `Garl Glittergold`,
    {
      epitaph: `gnome god of trickery and wiles`,
      alignment: `LG`,
      domain: [`Trickery`],
      symbol: `Gold nugget`,
      shortSymbol: [`nugget`, `gold nugget`],
    },
  ],
  [
    `Grolantor`,
    {
      epitaph: `hill giant god of war`,
      alignment: `CE`,
      domain: [`War`],
      symbol: `Wooden club`,
      shortSymbol: [`club`, `wooden club`, `big club`],
    },
  ],
  [
    `Gruumsh`,
    {
      epitaph: `orc god of storms and war`,
      alignment: `CE`,
      domain: [`Tempest`, `War`],
      symbol: `Unblinking eye`,
      shortSymbol: [`eye`, `unblinking eye`],
    },
  ],
  [
    `Hruggek`,
    {
      epitaph: `bugbear god of violence `,
      alignment: `CE`,
      domain: [`War`],
      symbol: `Morningstar`,
      shortSymbol: [`morningstar`],
    },
  ],
  [
    `Kurtulmak`,
    {
      epitaph: `kobold god of war and mining`,
      alignment: `LE`,
      domain: [`War`],
      symbol: `Gnome skull`,
      shortSymbol: [`skull`, `gnome-skull`],
    },
  ],
  [
    `Laogzed`,
    {
      epitaph: `troglodyte god of hunger`,
      alignment: `CE`,
      domain: [`Death`],
      symbol: `Image of the lizard/toad god`,
      shortSymbol: [`image`],
    },
  ],
  [
    `Lolth`,
    {
      epitaph: `drow goddess of spiders`,
      alignment: `CE`,
      domain: [`Trickery`],
      symbol: `Spider`,
      shortSymbol: [`spider`],
    },
  ],
  [
    `Maglubiyet`,
    {
      epitaph: `goblinoid god of war`,
      alignment: `LE`,
      domain: [`War`],
      symbol: `Bloody axe`,
      shortSymbol: [`axe`, `bloody axe`],
    },
  ],
  [
    `Moradin`,
    {
      epitaph: `dwarf god of creation`,
      alignment: `LG`,
      domain: [`Knowledge`],
      symbol: `Hammer and anvil`,
      shortSymbol: [`hammer`, `anvil`, `hammer and anvil`],
    },
  ],
  [
    `Rillifane Rallathil`,
    {
      epitaph: `wood elf god of nature`,
      alignment: `CG`,
      domain: [`Nature`],
      symbol: `Oak`,
      shortSymbol: [`oak`],
    },
  ],
  [
    `Sehanine Moonbow`,
    {
      epitaph: `elf goddess of the moon`,
      alignment: `CG`,
      domain: [`Trickery`],
      symbol: `Crescent moon`,
      shortSymbol: [`moon`, `crescent moon`],
    },
  ],
  [
    `Sekolah`,
    {
      epitaph: `sahuagin god of the hunt`,
      alignment: `LE`,
      domain: [`Nature`, `Tempest`],
      symbol: `Shark`,
      shortSymbol: [`shark`, `shark's teeth`, `shark's fins`, `shark's maw`],
    },
  ],
  [
    `Semuanya`,
    {
      epitaph: `lizardfolk deity of survival`,
      alignment: `N`,
      domain: [`Life`],
      symbol: `Egg`,
      shortSymbol: [`egg`, `shell`, `yolk`, `white`],
    },
  ],
  [
    `Skerrit`,
    {
      epitaph: `centaur and satyr god of nature`,
      alignment: `N`,
      domain: [`Nature`],
      symbol: `Oak growing from acorn`,
      shortSymbol: [`oak`, `acorn`, `growing oak`],
    },
  ],
  [
    `Skoraeus Stonebones`,
    {
      epitaph: `god of stone giants and art`,
      alignment: `N`,
      domain: [`Knowledge`],
      symbol: `Stalactite`,
      shortSymbol: [`stalactite`],
    },
  ],
  [
    `Surtur`,
    {
      epitaph: `god of fire giants and craft `,
      alignment: `LE`,
      domain: [`Knowledge`, `War`],
      symbol: `Flaming sword`,
      shortSymbol: [`sword`, `flaming sword`, `mighty flaming sword`],
    },
  ],
  [
    `Thrym`,
    {
      epitaph: `god of frost giants and strength`,
      alignment: `CE`,
      domain: [`War`],
      symbol: `White double-bladed axe`,
      shortSymbol: [`axe`, `mighty axe`, `white axe`],
    },
  ],
  [
    `Tiamat`,
    {
      epitaph: `dragon goddess of evil `,
      alignment: `LE`,
      domain: [`Trickery`],
      symbol: `Dragon head with five claw marks`,
      shortSymbol: [
        `head`,
        `teeth`,
        `fangs`,
        `breath`,
        `eyes`,
        `claws`,
        `clawed visage`,
      ],
    },
  ],
  [
    `Yondalla`,
    {
      epitaph: `halfling goddess of fertility and protection`,
      alignment: `LG`,
      domain: [`Life`],
      symbol: `Shield`,
      shortSymbol: [`shield`],
    },
  ],
]);
// Pantheon list for random pantheons
const pantheonList = [
  godsOfTheForgottenRealms,
  godsOfGreyhawk,
  godsOfDragonlance,
  godsOfEberron,
  godsOfNonHumans,
];
// God Object for generateReligiousOath
const godsObject = {
  "Gods of the Forgotten Realms": [
    `Auril`,
    `Azuth`,
    `Bane`,
    `Beshaba`,
    `Bhaal`,
    `Chauntea`,
    `Cyric`,
    `Deneir`,
    `Eldath`,
    `Gond`,
    `Helm`,
    `Ilmater`,
    `Kelemvor`,
    `Lathander`,
    `Leira`,
    `Lliira`,
    `Loviatar`,
    `Malar`,
    `Mask`,
    `Mielikki`,
    `Milil`,
    `Myrkul`,
    `Mystra`,
    `Oghma`,
    `Savras`,
    `Selune`,
    `Shar`,
    `Silvanus`,
    `Sune`,
    `Talona`,
    `Talos`,
    `Tempus`,
    `Torm`,
    `Tymora`,
    `Umberlee`,
    `Waukeen`,
  ],
  "Gods of Greyhawk": [
    `Beory`,
    `Boccob`,
    `Celestian`,
    `Elhonna`,
    `Erythnul`,
    `Fharlanghn`,
    ` Heironeous`,
    `Hextor`,
    `Kord`,
    `Incabulos`,
    `Istus`,
    `Iuz`,
    `Nerull`,
    `Obad-Hai`,
    `Olidammara`,
    `Pelor`,
    `Pholtus`,
    `Ralishaz`,
    `Rao`,
    `St. Cuthbert`,
    `Tharizdun`,
    `Trithereon`,
    `Ulaa`,
    `Vecna `,
    `Wee Jas`,
  ],
  "Gods of Dragonlance": [
    `Branchala`,
    `Habbakuk`,
    `Kiri-Jolith`,
    `Majere`,
    `Mishakal`,
    `Paladine`,
    `Solinari`,
    `Chislev`,
    `Gilean`,
    `Lunitari`,
    `Reorx`,
    `Shinare`,
    `Sirrion`,
    `Zivilyn`,
    `Chemosh`,
    `Hiddukel`,
    `Morgion`,
    `Nuitari`,
    `Sargonnas`,
    `Takhisis`,
    `Zeboim`,
  ],
  "Gods of Eberron": [
    `Arawai`,
    `Aureon`,
    `Balinor`,
    `Boldrei`,
    `Dol Arrah`,
    `Dol Dorn`,
    `Kol Koran`,
    `Olladra`,
    `Onatar`,
    `The Devourer`,
    `The Fury`,
    `The Keeper`,
    `The Mockery`,
    `The Shadow`,
    `The Traveller`,
    `The Silver Flame`,
  ],
  "Gods of Non-Humans": [
    `Bahamut`,
    `Blibdoolpoolp`,
    `Corellon Larethian`,
    `Deep Sashelas`,
    `Eadro`,
    `Garl Glittergold`,
    `Grolantor`,
    `Gruumsh`,
    `Hruggek`,
    `Kurtulmak`,
    `Laogzed`,
    `Lolth`,
    `Maglubiyet`,
    `Moradin`,
    `Rillifane Rallathil`,
    `Sehanine Moonbow`,
    `Sekolah`,
    `Semuanya`,
    `Skerrit`,
    `Skoraeus Stonebones`,
    `Surtur`,
    `Thrym`,
    `Tiamat`,
    `Yondalla`,
  ],
};
// Random NPC Tables
// Race Tables
const randomNPCRace = new Map([
  [
    1,
    [
      `Dragonborn`,
      [
        `Black`,
        `Blue`,
        `Brass`,
        `Bronze`,
        `Copper`,
        `Gold`,
        `Green`,
        `Red`,
        `Silver`,
        `White`,
      ],
    ],
  ],
  [2, [`Dwarf`, [`Hill`, `Mountain`]]],
  [3, [`Elf`, [`High`, `Wood`, `Drow`]]],
  [4, [`Gnome`, [`Forest`, `Rock`]]],
  [5, [`Half-Elf`, []]],
  [6, [`Halfling`, [`Lightfoot`, `Stout`]]],
  [7, [`Half-Orc`, []]],
  [
    8,
    [
      `Human`,
      [
        `Calishite`,
        `Chondathan`,
        `Damaran`,
        `Illuskan`,
        `Mulan`,
        `Rashemi`,
        `Shou`,
        `Tethyrian`,
        `Turami`,
      ],
    ],
  ],
  [9, [`Tiefling`, []]],
]);
const languageByRace = new Map([
  [`Dragonborn`, [`Common`, `Draconic`]],
  [`Dwarf`, [`Common`, `Dwarvish`]],
  [`Elf`, [`Common`, `Elvish`]],
  [`Gnome`, [`Common`, `Gnomish`]],
  [`Half-Elf`, [`Common`, `Elvish`]],
  [`Halfling`, [`Common`, `Halfling`]],
  [`Half-Orc`, [`Common`, `Orc`]],
  [`Human`, [`Common`]],
  [`Tiefling`, [`Common`, `Infernal`]],
]);
const statsByRace = new Map([
  [
    `Dragonborn - Black`,
    [
      [`Strength`, 2],
      [`Charisma`, 1],
    ],
  ],
  [
    `Dragonborn - Blue`,
    [
      [`Strength`, 2],
      [`Charisma`, 1],
    ],
  ],
  [
    `Dragonborn - Brass`,
    [
      [`Strength`, 2],
      [`Charisma`, 1],
    ],
  ],
  [
    `Dragonborn - Bronze`,
    [
      [`Strength`, 2],
      [`Charisma`, 1],
    ],
  ],
  [
    `Dragonborn - Copper`,
    [
      [`Strength`, 2],
      [`Charisma`, 1],
    ],
  ],
  [
    `Dragonborn - Gold`,
    [
      [`Strength`, 2],
      [`Charisma`, 1],
    ],
  ],
  [
    `Dragonborn - Green`,
    [
      [`Strength`, 2],
      [`Charisma`, 1],
    ],
  ],
  [
    `Dragonborn - Red`,
    [
      [`Strength`, 2],
      [`Charisma`, 1],
    ],
  ],
  [
    `Dragonborn - Silver`,
    [
      [`Strength`, 2],
      [`Charisma`, 1],
    ],
  ],
  [
    `Dragonborn - White`,
    [
      [`Strength`, 2],
      [`Charisma`, 1],
    ],
  ],
  [
    `Dwarf - Hill`,
    [
      [`Constitution`, 2],
      [`Wisdom`, 1],
    ],
  ],
  [
    `Dwarf - Mountain`,
    [
      [`Constitution`, 2],
      [`Strength`, 2],
    ],
  ],
  [
    `Elf - Drow`,
    [
      [`Dexterity`, 2],
      [`Charisma`, 1],
    ],
  ],
  [
    `Elf - High`,
    [
      [`Dexterity`, 2],
      [`Intelligence`, 1],
    ],
  ],
  [
    `Elf - Wood`,
    [
      [`Dexterity`, 2],
      [`Wisdom`, 1],
    ],
  ],
  [
    `Gnome - Forest`,
    [
      [`Intelligence`, 2],
      [`Dexterity`, 1],
    ],
  ],
  [
    `Gnome - Rock`,
    [
      [`Intelligence`, 2],
      [`Constitution`, 1],
    ],
  ],
  [
    `Half-Elf`,
    [
      [`Charisma`, 2],
      [`Random`, 1],
      [`Random`, 1],
    ],
  ],
  [
    `Halfling - Lightfoot`,
    [
      [`Dexterity`, 2],
      [`Charisma`, 1],
    ],
  ],
  [
    `Halfling - Stout`,
    [
      [`Dexterity`, 2],
      [`Constitution`, 1],
    ],
  ],
  [
    `Half-Orc`,
    [
      [`Strength`, 2],
      [`Constitution`, 1],
    ],
  ],
  [
    `Human - Calishite`,
    [
      [`Strength`, 1],
      [`Dexterity`, 1],
      [`Constitution`, 1],
      [`Wisdom`, 1],
      [`Intelligence`, 1],
      [`Charisma`, 1],
    ],
  ],
  [
    `Human - Chondathan`,
    [
      [`Strength`, 1],
      [`Dexterity`, 1],
      [`Constitution`, 1],
      [`Wisdom`, 1],
      [`Intelligence`, 1],
      [`Charisma`, 1],
    ],
  ],
  [
    `Human - Damaran`,
    [
      [`Strength`, 1],
      [`Dexterity`, 1],
      [`Constitution`, 1],
      [`Wisdom`, 1],
      [`Intelligence`, 1],
      [`Charisma`, 1],
    ],
  ],
  [
    `Human - Illuskan`,
    [
      [`Strength`, 1],
      [`Dexterity`, 1],
      [`Constitution`, 1],
      [`Wisdom`, 1],
      [`Intelligence`, 1],
      [`Charisma`, 1],
    ],
  ],
  [
    `Human - Mulan`,
    [
      [`Strength`, 1],
      [`Dexterity`, 1],
      [`Constitution`, 1],
      [`Wisdom`, 1],
      [`Intelligence`, 1],
      [`Charisma`, 1],
    ],
  ],
  [
    `Human - Rashemi`,
    [
      [`Strength`, 1],
      [`Dexterity`, 1],
      [`Constitution`, 1],
      [`Wisdom`, 1],
      [`Intelligence`, 1],
      [`Charisma`, 1],
    ],
  ],
  [
    `Human - Shou`,
    [
      [`Strength`, 1],
      [`Dexterity`, 1],
      [`Constitution`, 1],
      [`Wisdom`, 1],
      [`Intelligence`, 1],
      [`Charisma`, 1],
    ],
  ],
  [
    `Human - Tethyrian`,
    [
      [`Strength`, 1],
      [`Dexterity`, 1],
      [`Constitution`, 1],
      [`Wisdom`, 1],
      [`Intelligence`, 1],
      [`Charisma`, 1],
    ],
  ],
  [
    `Human - Turami`,
    [
      [`Strength`, 1],
      [`Dexterity`, 1],
      [`Constitution`, 1],
      [`Wisdom`, 1],
      [`Intelligence`, 1],
      [`Charisma`, 1],
    ],
  ],
  [
    `Tiefling`,
    [
      [`Charisma`, 2],
      [`Intelligence`, 1],
    ],
  ],
]);
const randomHumanType = new Map([
  [1, `Calishite`],
  [2, `Chondathan`],
  [3, `Damaran`],
  [4, `Illuskan`],
  [5, `Mulan`],
  [6, `Rashemi`],
  [7, `Shou`],
  [8, `Tethyrian`],
  [9, `Turami`],
]);
// Name Lists
const namesDragonbornFemale = [
  `Akra`,
  `Asathra`,
  `Antara`,
  `Arava`,
  `Biri`,
  `Blendaeth`,
  `Burana`,
  `Chassath`,
  `Daar`,
  `Dentratha`,
  `Doudra`,
  `Driindar`,
  `Eggren`,
  `Farideh`,
  `Findex`,
  `Furrele`,
  `Gesrethe`,
  `Gilkass`,
  `Harann`,
  `Havilar`,
  `Hethress`,
  `Hillanot`,
  `Jaxi`,
  `Jezean`,
  `Jheri`,
  `Kadana`,
  `Kava`,
  `Korinn`,
  `Megren`,
  `Mijira`,
  `Mishann`,
  `Nala`,
  `Nuthra`,
  `Perra`,
  `Pogranix`,
  `Pyxrin`,
  `Quespa`,
  `Raiann`,
  `Rezena`,
  `Ruloth`,
  `Saphara`,
  `Savaran`,
  `Sora`,
  `Surina`,
  `Synthrin`,
  `Tatyan`,
  `Thava`,
  `Uadjit`,
  `Vezera`,
  `Zykroff`,
];
const namesDragonbornMale = [
  `Adrex`,
  `Arjhan`,
  `Azzakh`,
  `Balasar`,
  `Baradad`,
  `Bharash`,
  `Bidreked`,
  `Dadalan`,
  `Dazzazan`,
  `Direcris`,
  `Donaar`,
  `Fax`,
  `Gargax`,
  `Ghesh`,
  `Gorbundus`,
  `Greethen`,
  `Heskan`,
  `Hirrathak`,
  `Ildrex`,
  `Kaladan`,
  `Kerkad`,
  `Kiirith`,
  `Kriv`,
  `Maagog`,
  `Medrash`,
  `Mehen`,
  `Mozkith`,
  `Mreksh`,
  `Mugrunden`,
  `Nadarr`,
  `Nithther`,
  `Norkruuth`,
  `Nykkan`,
  `Pandjed`,
  `Paatrin`,
  `Pijjirik`,
  `Quarethon`,
  `Rathkran`,
  `Rhogar`,
  `Rivaan`,
  `Sethrekar`,
  `Shamash`,
  `Shedinn`,
  `Srorthen`,
  `Tarhun`,
  `Torinn`,
  `Trynnicus`,
  `Valorean`,
  `Vrondiss`,
  `Zedaar`,
];
const namesDragonbornClan = [
  `Akhamberylliax`,
  `Argenthrixus`,
  `baharoosh`,
  `Beryntolthropal`,
  `Benkhumbyrznaax`,
  `Caavylteradyn`,
  `Chumbyxirinnish`,
  `Clenthinthiallor`,
  `Daardendrian`,
  `Delmirev`,
  `Dhyrktelonis`,
  `Ebynichtomonis`,
  `Esstyrlynn`,
  `Fharngnarthnost`,
  `Ghaallixirn`,
  `Grrrmmballhyst`,
  `Gygazzylyshrift`,
  `Hashphronyxadyn`,
  `Hshhsstoroth`,
  `Imbixtellrhyst`,
  `Jerynomonis`,
  `Jharthraxyn`,
  `Kerrhylon`,
  `Kimbatuul`,
  `Lhamboldennish`,
  `Lixakasendalor`,
  `Mohradyllion`,
  `Mystan`,
  `Nemmonis`,
  `Norixius`,
  `Ophinshtalajiir`,
  `Orexijandilin`,
  `Pfaphnyrennish`,
  `Phradrandon`,
  `Pyraxtallinost`,
  `Qyxpahrgh`,
  `Ragthroknaar`,
  `Shestendeliath`,
  `Skaarzborroosh`,
  `Sumnarghthrysh`,
  `Tiammmanthyllish`,
  `Turnuroth`,
  `Umbyrphrael`,
  `Vangdondalor`,
  `Verthisathurgiesh`,
  `Wivvyrholdalphiax`,
  `Wystongjiir`,
  `Xephyrbahnor`,
  `Yarjerit`,
  `Zzzxaaxthroth`,
];
const namesDwarfFemale = [
  `Anbera`,
  `Arlin`,
  `Audhild`,
  `Balifra`,
  `Barbena`,
  `Bardryn`,
  `Bolhild`,
  `Oagnal`,
  `Oariff`,
  `Delre`,
  `Diesa`,
  `Eldeth`,
  `Eridred`,
  `Falkrunn`,
  `Fallthra`,
  `Finellen`,
  `Gillydd`,
  `Gunnloda`,
  `Gurdis`,
  `Helgret`,
  `Heja`,
  `Hlin`,
  `Ilde`,
  `Jarana`,
  `Kathra`,
  `Kilia`,
  `Kristryd`,
  `Liftrasa`,
  `Marastyr`,
  `Mardred`,
  `Morana`,
  `Nalaed`,
  `Nora`,
  `Nurkara`,
  `Oriff`,
  `Ovina`,
  `Riswynn`,
  `Sannl`,
  `Therlin`,
  `Thodris`,
  `Torbera`,
  `Tordrid`,
  `Torgga`,
  `Urshar`,
  `Valida`,
  `Vistra`,
  `Vonana`,
  `Werydd`,
  `Whurdred`,
  `Yurgunn`,
];
const namesDwarfMale = [
  `Adrik`,
  `Alberich`,
  `Baern`,
  `Barendd`,
  `Beloril`,
  `Brottor`,
  `Dain`,
  `Dalgal`,
  `Darrak`,
  `Delg`,
  `Duergath`,
  `Dworic`,
  `Eberk`,
  `Einkll`,
  `Elaim`,
  `Erias`,
  `Fallond`,
  `Fargrim`,
  `Gardain`,
  `Gilthur`,
  `Gimgen`,
  `Gimurt`,
  `Harbek`,
  `Kildrak`,
  `Kilvar`,
  `Morgran`,
  `Morkral`,
  `Nalral`,
  `Nordak`,
  `Nuraval`,
  `Oloric`,
  `Olunt`,
  `Orsik`,
  `Oskar`,
  `Rangrim`,
  `Reirak`,
  `Rurik`,
  `Taklinn`,
  `Thoradin`,
  `Thorin`,
  `Thradal`,
  `Tordek`,
  `Traubon`,
  `Travok`,
  `Ulfgar`,
  `Uraim`,
  `Veit`,
  `Vonbin`,
  `Vondal`,
  `Whurbin`,
];
const namesDwarfClan = [
  `Aranore`,
  `Balderk`,
  `Battlehammer`,
  `Bigtoe`,
  `Bloodkith`,
  `Bofdann`,
  `Brawnanvil`,
  `Brazzik`,
  `Broodfist`,
  `Burrowfound`,
  `Caebrek`,
  `Daerdahk`,
  `Dankil`,
  `Daraln`,
  `Deepdelver`,
  `Durthane`,
  `Eversharp`,
  `Fallack`,
  `Fireforge`,
  `Foamtankard`,
  `Frostbeard`,
  `Glanhig`,
  `Goblinbane`,
  `Goldfinder`,
  `Gorunn`,
  `Graybeard`,
  `Hammerstone`,
  `Helcral`,
  `Holderhek`,
  `Ironfist`,
  `Loderr`,
  `Lutgehr`,
  `Morigak`,
  `Orcfoe`,
  `Rakankrak`,
  `Ruby-Eye`,
  `Rumnaheim`,
  `Silveraxe`,
  `Silverstone`,
  `Steelfist`,
  `Stoutale`,
  `Strakeln`,
  `Strongheart`,
  `Thrahak`,
  `Torevir`,
  `Torunn`,
  `Trollbleeder`,
  `Trueanvil`,
  `Trueblood`,
  `Ungart`,
];
const namesElfChild = [
  `Ael`,
  `Ang`,
  `Ara`,
  `Ari`,
  `Arn`,
  `Aym`,
  `Broe`,
  `Bryn`,
  `Cael`,
  `Cy`,
  `Dae`,
  `Del`,
  `Eli`,
  `Eryn`,
  `Faen`,
  `Fera`,
  `Gael`,
  `Gar`,
  `Innll`,
  `Jar`,
  `Kan`,
  `Koeth`,
  `Lael`,
  `Lue`,
  `Mai`,
  `Mara`,
  `Mella`,
  `Mya`,
  `Naeris`,
  `Naill`,
  `Nim`,
  `Phann`,
  `Py`,
  `Rael`,
  `Raer`,
  `Ren`,
  `Rinn`,
  `Rua`,
  `Sael`,
  `Sai`,
  `Sumi`,
  `Syllin`,
  `Ta`,
  `Thia`,
  `Tia`,
  `Traki`,
  `Vall`,
  `Von`,
  `Wil`,
  `Za`,
];
const namesElfAdultFemale = [
  `Adre`,
  `Ahinar`,
  `Ahhaea`,
  `Anastrianna`,
  `Andraste`,
  `Antinua`,
  `Arara`,
  `Baelitae`,
  `Bethrynna`,
  `Birol`,
  `Caelynn`,
  `Chaedi`,
  `Claira`,
  `Dara`,
  `Drusilia`,
  `Elama`,
  `Enna`,
  `Faral`,
  `Felosial`,
  `Hatae`,
  `Ielenia`,
  `Ilanis`,
  `Irann`,
  `Jarsall`,
  `Jelenneth`,
  `Keyleth`,
  `Leshanna`,
  `Lia`,
  `Maiathah`,
  `Malquis`,
  `Meriele`,
  `Mialee`,
  `Myathethil`,
  `Naivara`,
  `Quelenna`,
  `Quillathe`,
  `Ridaro`,
  `Sariel`,
  `Shanairla`,
  `Shava`,
  `Silaqui`,
  `Sumnes`,
  `Theirastra`,
  `Thiala`,
  `Tiaathque`,
  `Traulam`,
  `Vadania`,
  `Valanthc`,
  `Valna`,
  `Xanaphia`,
];
const namesElfAdultMale = [
  `Adran`,
  `Aelar`,
  `Aerdeth`,
  `Ahvain`,
  `Aramil`,
  `Arannis`,
  `Aust`,
  `Azaki`,
  `Beiro`,
  `Berrian`,
  `Cacldrim`,
  `Carrie`,
  `Dayereth`,
  `Dreali`,
  `Efferil`,
  `Eiravel`,
  `Enialis`,
  `Erdan`,
  `Erevan`,
  `Fivin`,
  `Galinndan`,
  `Gennal`,
  `Hadarai`,
  `Halimath`,
  `Heian`,
  `Himo`,
  `Immeral`,
  `Ivellios`,
  `Korfel`,
  `Lamlis`,
  `Laucian`,
  `Lucan`,
  `Mindartis`,
  `Naal`,
  `Nutae`,
  `Paelias`,
  `Peren`,
  `Quarion`,
  `Riardon`,
  `Rolen`,
  `Soveliss`,
  `Suhnae`,
  `Thamior`,
  `Tharivol`,
  `Theren`,
  `Theriatis`,
  `Thervan`,
  `Uthemar`,
  `Vanuath`,
  `Varis`,
];
const namesElfFamily = [
  `Aloro`,
  `Amakiir`,
  `Amastaria`,
  `Ariessus`,
  `Arnuanna`,
  `Berevan`,
  `Caerdonel`,
  `Caphaxath`,
  `Casilltenirra`,
  `Cithreth`,
  `Dalanthan`,
  `Eathalena`,
  `Erenaeth`,
  `Ethanasath`,
  `Fasharash`,
  `Firahel`,
  `Floshem`,
  `Galanodel`,
  `Goltorah`,
  `Hanali`,
  `Holimion`,
  `Horineth`,
  `Iathrana`,
  `Ilphelkiir`,
  `Iranapha`,
  `Koehlanna`,
  `Lathalas`,
  `Liadon`,
  `Melamne`,
  `Mellerelel`,
  `Mystralath`,
  `Nailo`,
  `Netyoive`,
  `Ofandrus`,
  `Ostoroth`,
  `Othronus`,
  `Qualanthri`,
  `Raethran`,
  `Rothenel`,
  `Selevarun`,
  `Siannodel`,
  `Suithrasas`,
  `Sylvaranth`,
  `Teinithra`,
  `Tiltathana`,
  `Wasanthi`,
  `Withrethin`,
  `Xiloscient`,
  `Xistsrith`,
  `Yaeldrin`,
];
const namesGnomeFemale = [
  `Abalaba`,
  `Bimpnottin`,
  `Breena`,
  `Buvvie`,
  `Callybon`,
  `Caramip`,
  `Carlin`,
  `Cumpen`,
  `Dalaba`,
  `Donella`,
  `Duvamil`,
  `Ella`,
  `Ellyjoybell`,
  `Ellywick`,
  `Enidda`,
  `Lilli`,
  `loopmottin`,
  `Lorilla`,
  `Luthra`,
  `Mardnab`,
  `meena`,
  `Menny`,
  `Mumpena`,
  `Nissa`,
  `Numba`,
  `Nyx`,
  `Oda`,
  `Oppah`,
  `Orla`,
  `Panana`,
  `Pyntle`,
  `Quilla`,
  `Ranala`,
  `Reddlepop`,
  `Roywyn`,
  `Salanop`,
  `Shamil`,
  `Siffress`,
  `Symma`,
  `Tana`,
  `Tenena`,
  `Tevaround`,
  `Tippletoe`,
  `Ulla`,
  `Unvera`,
  `Veloptima`,
  `Virra`,
  `Waywocket`,
  `Yebe`,
  `Zanna`,
];
const namesGnomeMale = [
  `Alston`,
  `Alvyn`,
  `Anverth`,
  `Arumawann`,
  `Bilbron`,
  `Boddynock`,
  `Brocc`,
  `Burgell`,
  `Cockaby`,
  `Crampernap`,
  `Dabbledop`,
  `Delebean`,
  `Dimble`,
  `Eberdeb`,
  `Eldon`,
  `Erky`,
  `Fablen`,
  `Fibblestib`,
  `Fonkin`,
  `Frouse`,
  `Frug`,
  `Gerbo`,
  `Gimble`,
  `Glim`,
  `Igden`,
  `Jabble`,
  `Jabeddo`,
  `Kellen`,
  `Kipper`,
  `Namfoodle`,
  `Oppleby`,
  `Orryn`,
  `Paggen`,
  `Pallabar`,
  `Pog`,
  `Qualen`,
  `Ribbles`,
  `Rimple`,
  `Roondar`,
  `Sapply`,
  `Seebo`,
  `Senteq`,
  `Sindri`,
  `Umpen`,
  `Warryn`,
  `Wiggens`,
  `Wobbles`,
  `Wrenn`,
  `Zaffrab`,
  `Zook`,
];
const namesGnomeClan = [
  `Albaratie`,
  `Bafflestone`,
  `Beren`,
  `Boondiggles`,
  `Cobblelob`,
  `Daergel`,
  `Dunben`,
  `Fabblestabble`,
  `Fapplestamp`,
  `Fiddlefen`,
  `Folkor`,
  `Garrick`,
  `Gimlen`,
  `Glittergem`,
  `Gobblefern`,
  `Gummen`,
  `Horcusporcus`,
  `Humplebumple`,
  `Ironhide`,
  `Leffery`,
  `Lingenhall`,
  `Loofollue`,
  `Maekleferce`,
  `Miggledy`,
  `Munggen`,
  `Murning`,
  `Musgraben`,
  `Nackle`,
  `Ningel`,
  `Nopenstallen`,
  `Nucklestamp`,
  `Offund`,
  `Oomtrowl`,
  `Pilwicken`,
  `Pingun`,
  `Quillsharpener`,
  `Raulnor`,
  `Reese`,
  `Rofferton`,
  `Scheppen`,
  `Shadowcloak`,
  `Silverthread`,
  `Sympony`,
  `Tarkleby`,
  `Timbers`,
  `Turen`,
  `Umbodoben`,
  `Waggletop`,
  `Welber`,
  `Wildwander`,
];
const namesHalflingFemale = [
  `Alain`,
  `Andry`,
  `Anne`,
  `bella`,
  `Blossom`,
  `Bree`,
  `Callie`,
  `Chenna`,
  `Corra`,
  `Dree`,
  `Dell`,
  `Eida`,
  `Eran`,
  `Euphemia`,
  `Georgina`,
  `Gynnie`,
  `Harriet`,
  `Jasmine`,
  `Jillian`,
  `Jo`,
  `Kithri`,
  `Lavinia`,
  `Lidda`,
  `Maegan`,
  `Marigold`,
  `Merla`,
  `Myria`,
  `Nedda`,
  `Nikki`,
  `Nora`,
  `Olivia`,
  `Paela`,
  `Pearl`,
  `Pennie`,
  `Philomena`,
  `Portia`,
  `Robbie`,
  `Rose`,
  `Saral`,
  `Seraphina`,
  `Shaena`,
  `Stacee`,
  `Tawna`,
  `Thea`,
  `Trym`,
  `Tyna`,
  `Vani`,
  `Verna`,
  `Wella`,
  `Willow`,
];
const namesHalflingMale = [
  `Alton`,
  `Ander`,
  `Bernie`,
  `Bobbin`,
  `Cade`,
  `Callus`,
  `Corrin`,
  `Dannad`,
  `Daniel`,
  `Eddie`,
  `Egart`,
  `Eldon`,
  `Errich`,
  `Fildo`,
  `Finnan`,
  `Franklin`,
  `Garret`,
  `Garth`,
  `Gilbert`,
  `Gob`,
  `Harol`,
  `Igor`,
  `Jasper`,
  `Keith`,
  `Kevin`,
  `Lazam`,
  `Lerry`,
  `Lindal`,
  `Lyle`,
  `Merric`,
  `Mican`,
  `Milo`,
  `Morrin`,
  `Nebin`,
  `Nevil`,
  `Osborn`,
  `Ostran`,
  `Oswalt`,
  `Perrin`,
  `Poppy`,
  `Reed`,
  `Roscoe`,
  `Sam`,
  `Shardon`,
  `Tye`,
  `Ulmo`,
  `Wellby`,
  `Wendei`,
  `Wenner`,
  `Wes`,
];
const namesHalflingFamily = [
  `Appleblossom`,
  `Bigheart`,
  `Brightmoon`,
  `Brushgather`,
  `Cherrycheeks`,
  `Copperkettle`,
  `Deephollow`,
  `Elderberry`,
  `Fastfoot`,
  `Fatrabbit`,
  `Glenfellow`,
  `Goldfound`,
  `Goodbarrel`,
  `Goodearth`,
  `Greenbottle`,
  `Greenleaf`,
  `High-hill`,
  `Hilltopple`,
  `Hogcollar`,
  `Honeypot`,
  `Jamjar`,
  `Kettlewhistle`,
  `Leagallow`,
  `Littlefoot`,
  `Nimblefingers`,
  `Porridgepot`,
  `Quickstep`,
  `Reedfellow`,
  `Shadowquick`,
  `Silvereyes`,
  `Smoothhands`,
  `Stonebridge`,
  `Stoutbridge`,
  `Stoutman`,
  `Strongbones`,
  `Sunmeadow`,
  `Swiftwhistle`,
  `Tallfellow`,
  `Tealeaf`,
  `Tenpenny`,
  `Thistletop`,
  `Thorngage`,
  `Tosscobble`,
  `Underbough`,
  `Underfoot`,
  `Warmwater`,
  `Whispermouse`,
  `Wildcloak`,
  `Wildheart`,
  `Wiseacre`,
];
const namesOrcFemale = [
  `Ahra`,
  `Baggi`,
  `Bendoo`,
  `Bilga`,
  `Brakka`,
  `Creega`,
  `Drenna`,
  `Ekk`,
  `Emen`,
  `Engong`,
  `Fistula`,
  `Gaaki`,
  `Gorga`,
  `Grai`,
  `Greeba`,
  `Grigi`,
  `Gynk`,
  `Hrathy`,
  `Huru`,
  `Ilga`,
  `Kabbarg`,
  `Kansif`,
  `Lagazi`,
  `Lezre`,
  `Murgen`,
  `Murook`,
  `Myev`,
  `Nagrette`,
  `Neega`,
  `Nella`,
  `Nogu`,
  `Oolah`,
  `Ootah`,
  `Ovak`,
  `Ownka`,
  `Puyet`,
  `Reeza`,
  `Shautha`,
  `Silgre`,
  `Sutha`,
  `Tagga`,
  `Tawar`,
  `Tomph`,
  `Ubada`,
  `Vanchu`,
  `Vola`,
  `Volen`,
  `Vorka`,
  `Yevelda`,
  `Zagga`,
];
const namesOrcMale = [
  `Argran`,
  `Brak`,
  `Brug`,
  `Cagak`,
  `Dench`,
  `Dorn`,
  `Dren`,
  `Druuk`,
  `Feng`,
  `Gell`,
  `Gnarsh`,
  `Grumbar`,
  `Gubrash`,
  `Hagren`,
  `Henk`,
  `Hogar`,
  `Holg`,
  `Imsh`,
  `Karash`,
  `Karg`,
  `Keth`,
  `Korag`,
  `Krusk`,
  `Lubash`,
  `Megged`,
  `Mhurren`,
  `Mord`,
  `Morg`,
  `Ni`,
  `Nybarg`,
  `Odorr`,
  `Ohr`,
  `Rendar`,
  `Resh`,
  `Ront`,
  `Rrath`,
  `Sark`,
  `Scrag`,
  `Sheggen`,
  `Shump`,
  `Tanglar`,
  `Tarak`,
  `Thar`,
  `Thokk`,
  `Trag`,
  `Ugarth`,
  `Varg`,
  `Vilberg`,
  `Yurk`,
  `Zed`,
];
const namesTieflingFemale = [
  `Akta`,
  `Anakis`,
  `Armara`,
  `Astaro`,
  `Aym`,
  `Azza`,
  `Beleth`,
  `Bryseis`,
  `Bune`,
  `Criela`,
  `Damaia`,
  `Decarabia`,
  `Ea`,
  `Gadreel`,
  `Gomory`,
  `Hecat`,
  `Ishte`,
  `Jezebeth`,
  `Kali`,
  `Kallista`,
  `Kasdeya`,
  `Lerissa`,
  `Lilitll`,
  `Makana`,
  `Manea`,
  `Markosian`,
  `Mastema`,
  `Naamah`,
  `Nemeia`,
  `Nija`,
  `Orianna`,
  `Osah`,
  `Phelaia`,
  `Prosperine`,
  `Punh`,
  `Pyra`,
  `Rieta`,
  `Ronobe`,
  `Ronwe`,
  `Seddit`,
  `Seere`,
  `Sekhmet`,
  `Semyaza`,
  `Shava`,
  `Shax`,
  `Sorath`,
  `Uzza`,
  `Vapula`,
  `Vepar`,
  `Verin`,
];
const namesTieflingMale = [
  `Abad`,
  `Ahrim`,
  `Akmen`,
  `Amnon`,
  `Andram`,
  `Astar`,
  `Balam`,
  `Barakas`,
  `Bathin`,
  `Caim`,
  `Chem`,
  `Cimer`,
  `Cressel`,
  `Damakos`,
  `Ekemon`,
  `Euron`,
  `Fenriz`,
  `Forcas`,
  `Habor`,
  `Iados`,
  `Kairon`,
  `Leucis`,
  `Mamnen`,
  `Mantus`,
  `Marbas`,
  `Melech`,
  `Merihim`,
  `Modean`,
  `Mordai`,
  `Mormo`,
  `Morthos`,
  `Nicor`,
  `Nirgel`,
  `Oriax`,
  `Paymon`,
  `Pelaois`,
  `Purson`,
  `Qemuel`,
  `Raam`,
  `Rimmon`,
  `Sammal`,
  `Skamos`,
  `Tethren`,
  `Thamuz`,
  `Therai`,
  `Valafar`,
  `Vassago`,
  `Xappan`,
  `Zepar`,
  `Zephan`,
];
const namesTieflingVirtue = [
  `Ambition`,
  `Art`,
  `Carrion`,
  `Chant`,
  `Creed`,
  `Death`,
  `Debauchery`,
  `Despair`,
  `Doom`,
  `Doubt`,
  `Dread`,
  `Ecstacy`,
  `Ennui`,
  `Entropy`,
  `Excellence`,
  `Fear`,
  `Glory`,
  `Gluttony`,
  `Grief`,
  `Hate`,
  `Hope`,
  `Horror`,
  `Ideal`,
  `Ignominy`,
  `Laughter`,
  `Love`,
  `Lust`,
  `Mayhem`,
  `Mockery`,
  `Murder`,
  `Muse`,
  `Music`,
  `Mystery`,
  `Nowhere`,
  `Open`,
  `Pain`,
  `Passion`,
  `Poetry`,
  `Quest`,
  `Random`,
  `Reverance`,
  `Revulsion`,
  `Sorrow`,
  `Temerity`,
  `Torment`,
  `Tragedy`,
  `Vice`,
  `Virtue`,
  `Weary`,
  `Wit`,
];
const namesHumanCalishiteMale = [
  `Aseir`,
  `Bardeid`,
  `Haseid`,
  `Khemed`,
  ` Mehmen`,
  `Sudeiman`,
  `Zasheir,`,
];
const namesHumanCalishiteFemale = [
  `Atala`,
  `Ceidil`,
  `Hama`,
  `Jasmal`,
  `Meilil`,
  `Seipora`,
  `Yasheira`,
  `Zasheida`,
];
const namesHumanCalishiteSurname = [
  `Basha`,
  `Dumein`,
  `Jassan`,
  `Khalid`,
  `Mostana`,
  `Pashar`,
  `Rein`,
];
const namesHumanChondathanMale = [
  `Darvin`,
  `Dorn`,
  `Evendur`,
  `Gorstag`,
  `Grim`,
  `Helm`,
  `Malark`,
  `Morn`,
  `Randal`,
  `Stedd`,
];
const namesHumanChondathanFemale = [
  `Arveene`,
  `Esvele`,
  `Jhessail`,
  `Kerri`,
  `Lureene`,
  `Miri`,
  `Rowan`,
  `Shandri`,
  `Tessele`,
];
const namesHumanChondathanSurname = [
  `Amblecrown`,
  `Buckman`,
  `Dundragon`,
  `Evenwood`,
  `Greycastle`,
  `Tallstag`,
];
const namesHumanDamaranMale = [
  `Bor`,
  `Fodel`,
  `Glar`,
  `Grigor`,
  `Igan`,
  `Ivor`,
  `Kosef`,
  `Mival`,
  `Orel`,
  `Pavel`,
  `Sergor`,
];
const namesHumanDamaranFemale = [
  `Alethra`,
  `Kara`,
  `Katernin`,
  `Mara`,
  `Natali`,
  `Olma`,
  `Tana`,
  `Zora`,
];
const namesHumanDamaranSurname = [
  `Bersk`,
  `Chernin`,
  `Dotsk`,
  `Kulenov`,
  `Marsk`,
  `Nemetsk`,
  `Shemov`,
  `Starag`,
];
const namesHumanIlluskanMale = [
  `Ander`,
  `Blath`,
  `Bran`,
  `Frath`,
  `Geth`,
  `Lander`,
  `Luth`,
  `Malcer`,
  `Stor`,
  `Taman`,
  `Urth`,
];
const namesHumanIlluskanFemale = [
  `Amafrey`,
  `Betha`,
  `Cefrey`,
  `Kethra`,
  `Mara`,
  `Olga`,
  `Silifrey`,
  `Westra`,
];
const namesHumanIlluskanSurname = [
  `Brightwood`,
  `Helder`,
  `Hornraven`,
  `Lackman`,
  `Stormwind`,
  `Windrivver`,
];
const namesHumanMulanMale = [
  `Aoth`,
  `Bareris`,
  `Ehput-Ki`,
  `Kethoth`,
  `Mumed`,
  `Ramas`,
  `So- Kehur`,
  `Thazar-De`,
  `Urhur`,
];
const namesHumanMulanFemale = [
  `Arizima`,
  `Chathi`,
  `Nephis`,
  `Nulara`,
  `Murithi`,
  `Sefris`,
  `Thola`,
  `Umara`,
  `Zolis`,
];
const namesHumanMulanSurname = [
  `Ankhalab`,
  `Anskuld`,
  `Fezim`,
  `Hahpet`,
  `Nathandem`,
  `Sepret`,
  `Uuthrakt`,
];
const namesHumanRashemiMale = [
  `Borivik`,
  `Faurgar`,
  `Jandar`,
  `Kanithar`,
  `Madislak`,
  `Ralmevik`,
  `Shaumar`,
  `Vladislak`,
];
const namesHumanRashemiFemale = [
  `Fyevarra`,
  `Hulmarra`,
  `Immith`,
  `Imzel`,
  `Navarra`,
  `Shevarra`,
  `Tammith`,
  `Yuldra`,
];
const namesHumanRashemiSurname = [
  `Chergoba`,
  `Dyernina`,
  `Iltazyara`,
  `Murnyethara`,
  `Stayanoga`,
  `Ulmokina`,
];
const namesHumanShouMale = [
  `An`,
  `Chen`,
  `Chi`,
  `Fai`,
  `Jiang`,
  `Jun`,
  `Lian`,
  `Long`,
  `Meng`,
  `On`,
  `Shan`,
  `Shui`,
  `Wen`,
];
const namesHumanShouFemale = [
  `Bai`,
  `Chao`,
  `Jia`,
  `Lei`,
  `Mei`,
  `Qiao`,
  `Shui`,
  `Tai`,
];
const namesHumanShouSurname = [
  `Chien`,
  `Huang`,
  `Kao`,
  `Kung`,
  `Lao`,
  `Ling`,
  `Mei`,
  `Pin`,
  `Shin`,
  `Sum`,
  `Tan`,
  `Wan`,
];
const namesHumanTethyrianMale = namesHumanChondathanMale;
const namesHumanTethyrianFemale = namesHumanChondathanFemale;
const namesHumanTethyrianSurname = namesHumanChondathanSurname;
const namesHumanTuramiMale = [
  `Anton`,
  `Diero`,
  `Marcon`,
  `Pieron`,
  `Rimardo`,
  `Romero`,
  `Salazar`,
  `Umbero`,
];
const namesHumanTuramiFemale = [
  `Balama`,
  `Dona`,
  `Faila`,
  `Jalana`,
  `Luisa`,
  `Marta`,
  `Quara`,
  `Selise`,
  `Vonda`,
];
const namesHumanTuramiSurname = [
  `Agosto`,
  `Astorio`,
  `Calabra`,
  `Domine`,
  `Falone`,
  `Marivaldi`,
  `Pisacar`,
  `Ramondo`,
];
// Appearance Tables
const randomNPCAppearance = new Map([
  [1, `Distinctive jewelry: earrings, necklace, circlet, bracelets`],
  [2, `Piercings`],
  [3, `Flamboyant or outlandish clothes`],
  [4, `Formal, clean clothes`],
  [5, `Ragged, dirty clothes`],
  [6, `Pronounced scar`],
  [7, `Missing teeth`],
  [8, `Missing fingers`],
  [9, `Unusual eye color (or two different colors)`],
  [10, `Tattoos`],
  [11, `Birthmark`],
  [12, `Unusual skin color`],
  [13, `Bald`],
  [14, `Braided beard or hair`],
  [15, `Unusual hair color`],
  [16, `Nervous eye twitch`],
  [17, `Distinctive nose`],
  [18, `Distinctive posture (crooked or rigid)`],
  [19, `Exceptionally beautiful`],
  [20, `Exceptionally ugly`],
]);
// Ability Tables
const randomNPCHighAbility = new Map([
  [1, [`Strength`, `Powerful`, `Brawny`, `As strong as an ox`]],
  [2, [`Dexterity`, `Lithe`, `Agile`, `Graceful`]],
  [3, [`Constitution`, `Hardy`, `Hale`, `Healthy`]],
  [4, [`Intelligence`, `Studious`, `Learned`, `Inquisitive`]],
  [5, [`Wisdom`, `Perceptive`, `Spiritual`, `Insightful`]],
  [6, [`Charisma`, `Persuasive`, `Forceful`, `A born leader`]],
]);
const randomNPCLowAbility = new Map([
  [1, [`Strength`, `Feeble`, `Scrawny`]],
  [2, [`Dexterity`, `Clumsy`, `Fumbling`]],
  [3, [`Constitution`, `Sickly`, `Pale`]],
  [4, [`Intelligence`, `Dim-witted`, `Slow`]],
  [5, [`Wisdom`, `Oblivious`, `Absentminded`]],
  [6, [`Charisma`, `Dull`, `Boring`]],
]);
// Trait Tables
const randomNPCTalents = new Map([
  [1, `Plays a musical instrument`],
  [2, `Speaks several languages fluently`],
  [3, `Unbelievably lucky`],
  [4, `Perfect memory`],
  [5, `Great with animals`],
  [6, `Great with children`],
  [7, `Great at solving puzzles`],
  [8, `Great at one game `],
  [9, `Great at impersonations`],
  [10, `Draws beautifully`],
  [11, `Paints beautifully`],
  [12, `Sings beautifully`],
  [13, `Drinks everyone under the table`],
  [14, `Expert carpenter`],
  [15, `Expert cook`],
  [16, `Expert dart thrower and rock skipper`],
  [17, `Expert juggler`],
  [18, `Skilled actor and master of disguise`],
  [19, `Skilled dancer`],
  [20, `Knows thieves' cant`],
]);
const randomNPCMannerisms = new Map([
  [1, `Prone to singing, whistling, or humming quietly `],
  [2, `Speaks in rhyme or some other peculiar way`],
  [3, `Particularly low or high voice`],
  [4, `Slurs words, lisps, or stutters`],
  [5, `Enunciates overly clearly`],
  [6, `Speaks loudly`],
  [7, `Whispers `],
  [8, `Uses flowery speech or long words`],
  [9, `Frequently uses the wrong word `],
  [10, `Uses colorful oaths and exclamations`],
  [11, `Makes constant jokes or puns`],
  [12, `Prone to predictions of doom`],
  [13, `Fidgets`],
  [14, `Squints`],
  [15, `Stares into the distance`],
  [16, `Chews something`],
  [17, `Paces`],
  [18, `Taps fingers`],
  [19, `Bites fingernails`],
  [20, `Twirls hair or tugs beard`],
]);
const randomNPCInteractionTraits = new Map([
  [1, `Argumentative`],
  [2, `Arrogant`],
  [3, `Blustering`],
  [4, `Rude`],
  [5, `Curious`],
  [6, `Friendly`],
  [7, `Honest`],
  [8, `Hot Tempered`],
  [9, `Irritable`],
  [10, `Ponderous`],
  [11, `Quiet`],
  [12, `Suspicious`],
]);
// Background Tables
const randomNPCIdeals = new Map([
  [
    `Good`,
    [`Beauty`, `Charity`, `Greater Good`, `Life`, `Respect`, `Self Sacrifice`],
  ],
  [
    `Evil`,
    [`Domination`, `Greed`, `Might`, `Pain`, `Retribution`, `Slaughter`],
  ],
  [
    `Lawful`,
    [`Community`, `Fairness`, `Honour`, `Logic`, `Responsibility`, `Tradition`],
  ],
  [
    `Chaotic`,
    [`Change`, `Creativity`, `Freedom`, `Independence`, `No Limits`, `Whimsy`],
  ],
  [
    `Neutral`,
    [
      `Balance`,
      `Knowledge`,
      `Live and Let Live`,
      `Moderation`,
      `Neutrality`,
      `People`,
    ],
  ],
  [
    `Other`,
    [
      `Aspiration`,
      `Discovery`,
      `Glory`,
      `Nation`,
      `Redemption`,
      `Self-Knowledge`,
    ],
  ],
]);
const randomNPCBonds = new Map([
  [1, `Dedicated to fulfilling a personal life goal`],
  [2, `Protective of close family members`],
  [3, `Protective of colleagues or compatriots`],
  [4, `Loyal to a benefactor, patron, or employer`],
  [5, `Captivated by a romantic interest`],
  [6, `Drawn to a special place`],
  [7, `Protective of a sentimental keepsake`],
  [8, `Protective of a valuable possession`],
  [9, `Out for revenge`],
  [10, `Roll twice, ignoring results of 10`],
]);
const randomNPCFlaws = new Map([
  [1, `Forbidden love or susceptibility to romance`],
  [2, `Enjoys decadent pleasures`],
  [3, `Arrogance`],
  [4, `Envies another creature's possessions or station`],
  [5, `Overpowering greed`],
  [6, `Prone to rage`],
  [7, `Has a powerful enemy`],
  [8, `Specific phobia`],
  [9, `Shameful or scandalous history`],
  [10, `Secret crime or misdeed`],
  [11, `Possession of forbidden lore`],
  [12, `Foolhardy bravery`],
]);
const backgrounds = new Map([
  [
    `Acolyte`,
    {
      skills: [`Insight`, `Religion`],
      tools: [],
      languages: 2,
      personality: [
        `I idolize a particular hero of my faith and constantly refer to that person's deeds and example.`,
        `I can find common ground between the fiercest enemies, empathizing with them and always working toward peace.`,
        `I see omens in every event and action. The gods try to speak to us, we just need to listen.`,
        `Nothing can shake my optimistic attitude.`,
        `I quote (or misquote) the sacred texts and proverbs in almost every situation.`,
        `I am tolerant (or intolerant) of other faiths and respect (or condemn) the worship of other gods.`,
        `I've enjoyed fine food, drink, and high society among my temple's elite. Rough living grates on me.`,
        `I've spent so long in the temple that I have little practical experience dealing with people in the outside world.`,
      ],
      ideal: [
        `Faith. I trust that my deity will guide my actions. I have faith that if I work hard, things will go well. (Lawful)`,
        `Tradition. The ancient traditions of worship and sacrifice must be preserved and upheld. (Lawful)`,
        `Charity. I always try to help those in need, no matter what the personal cost. (Good)`,
        `Change. We must help bring about the changes the gods are constantly working in the world. (Chaotic)`,
        `Power. I hope to one day rise to the top of my faith's religious hierarchy. (Lawful)`,
        `Aspiration. I seek to prove my self worthy of my god's favor by matching my actions against his or her teachings. (Any)`,
      ],
      bond: [
        `I would die to recover an ancient artifact of my faith that was lost long ago.`,
        `I will someday get revenge on the corrupt temple hierarchy who branded me a heretic.`,
        `I owe me life to the priest who took me in when my parents died.`,
        `Everything I do is for the common people.`,
        `I will do anything to protect the temple where I served.`,
        `I seek to preserve a sacred text that my enemies consider heretical and seek to destroy.`,
      ],
      flaw: [
        `I judge others harshly, and myself even more severely.`,
        `I put too much trust in those who wield power within my temple's hierarchy.`,
        `My piety sometimes leads me to blindly trust those that profess faith in my god.`,
        `I am inflexible in my thinking.`,
        `I am suspicious of strangers and suspect the worst of them.`,
        `Once I pick a goal, I become obsessed with it to the detriment of everything else in my life.`,
      ],
      equipment: `A holy symbol (a gift to you when you entered the priesthood), a prayer book or prayer wheel, 5 sticks of incense, vestments, a set of common clothes, and a belt pouch containing 15 gp`,
    },
  ],
  [
    `Charlatan`,
    {
      skills: [`Deception`, `Sleight of Hand`],
      tools: [`Disguise Kit`, `Forgery Kit`],
      languages: 0,
      personality: [
        `I fall in and out of love easily, and am always pursuing someone.`,
        `I have a joke for every occasion, especially occasions where humor is inappropriate.`,
        `Flattery is my preferred trick for getting what I want.`,
        `I'm a born gambler who can't resist taking a risk for a potential payoff.`,
        `I lie about almost everything, even when there's no good reason to.`,
        `Sarcasm and insults are my weapons of choice.`,
        `I keep multiple holy symbols on me and invoke whatever deity might come in useful at any given moment.`,
        `I pocket anything I see that might have some value.`,
      ],
      ideal: [
        `Independence. I am a free spirit--no one tells me what to do. (Chaotic)`,
        `Fairness. I never target people who can't afford to lose a few coins. (Lawful)`,
        `Charity. I distribute money I acquire to the people who really need it. (Good)`,
        `Creativity. I never run the same con twice. (Chaotic)`,
        `Friendship. Material goods come and go. Bonds of friendship last forever. (Good)`,
        `Aspiration. I'm determined to make something of myself. (Any)`,
      ],
      bond: [
        `I fleeced the wrong person and must work to ensure that this individual never crosses paths with me or those I care about.`,
        `I owe everything to my mentor--a horrible person who's probably rotting in jail somewhere.`,
        `Somewhere out there I have a child who doesn't know me. I'm making the world better for him or her.`,
        `I come from a noble family, and one day I'll reclaim my lands and title from those who stole them from me.`,
        `A powerful person killed someone I love. Some day soon, I'll have my revenge.`,
        `I swindled and ruined a person who didn't deserve it. I seek to atone for my misdeeds but might never be able to forgive myself.`,
      ],
      flaw: [
        `I can't resist a pretty face.`,
        `I'm always in debt. I spend my ill-gotten gains on decadent luxuries faster than I bring them in.`,
        `I'm convinced that no one could ever fool me in the way I fool others.`,
        `I'm too greedy for my own good. I can't resist taking a risk if there's money involved.`,
        `I can't resist swindling people who are more powerful than me.`,
        `I hate to admit it and will hate myself for it, but I'll run and preserve my own hide if the going gets tough.`,
      ],
      equipment: `A set of fine clothes, a disguise kit, tools of the con of your choice (ten stoppered bottles filled with colored liquid, a set o f weighted dice, a deck of marked cards, or a signet ring of an imaginary duke), and a belt pouch containing 15 gp`,
      scheme: [
        `I cheat at games of chance.`,
        `I shave coins or forge documents.`,
        `I insinuate myself into people’s lives to prey on their weakness and secure their fortunes.`,
        `I put on new identities like clothes.`,
        `I run sleight-of-hand cons on street corners.`,
        `I convince people that worthless junk is worth their hard-earned money.`,
      ],
    },
  ],
  [
    `Criminal`,
    {
      skills: [`Deception`, `Stealth`],
      tools: [`Gaming Set`, `Thieves' Tools`],
      languages: 0,
      personality: [
        `I always have plan for what to do when things go wrong.`,
        `I am always calm, no matter what the situation. I never raise my voice or let my emotions control me.`,
        `The first thing I do in a new place is note the locations of everything valuable--or where such things could be hidden.`,
        `I would rather make a new friend than a new enemy.`,
        `I am incredibly slow to trust. Those who seem the fairest often have the most to hide.`,
        `I don't pay attention to the risks in a situation. Never tell me the odds.`,
        `The best way to get me to do something is to tell me I can't do it.`,
        `I blow up at the slightest insult.`,
      ],
      ideal: [
        `Honor. I don't steal from others in the trade. (Lawful)`,
        `Freedom. Chains are meant to be broken, as are those who would forge them. (Chaotic)`,
        `Charity. I steal from the wealthy so that I can help people in need. (Good)`,
        `Greed. I will do whatever it takes to become wealthy. (Evil)`,
        `People. I'm loyal to my friends, not to any ideals, and everyone else can take a trip down the Styx for all I care. (Neutral)`,
        `Redemption. There's a spark of good in everyone. (Good)`,
      ],
      bond: [
        `I'm trying to pay off an old debt I owe to a generous benefactor.`,
        `My ill-gotten gains go to support my family.`,
        `Something important was taken from me, and I aim to steal it back.`,
        `I will become the greatest thief that ever lived.`,
        `I'm guilty of a terrible crime. I hope I can redeem myself for it.`,
        `Someone I loved died because of a mistake I made. That will never happen again.`,
      ],
      flaw: [
        `When I see something valuable, I can't think about anything but how to steal it.`,
        `When faced with a choice between money and my friends, I usually choose the money.`,
        `If there's a plan, I'll forget it. If I don't forget it, I'll ignore it.`,
        `I have a 'tell' that reveals when I'm lying.`,
        `I turn tail and run when things go bad.`,
        `An innocent person is in prison for a crime that I committed. I'm okay with that.`,
      ],
      equipment: `A crowbar, a set of dark common clothes including a hood, and a belt pouch containing 15 gp`,
      specialty: [
        `Blackmailer`,
        `Burglar`,
        `Enforcer`,
        `Fence`,
        `Highway Robber`,
        `hired Killer`,
        `Pickpocket`,
        `Smuggler`,
      ],
    },
  ],
  [
    `Entertainer`,
    {
      skills: [`Acrobatics`, `Performance`],
      tools: [`Disguise Kit`, `Musical Instrument`],
      languages: 0,
      personality: [
        `I know a story relevant to almost every situation.`,
        `Whenever I come to a new place, I collect local rumors and spread gossip.`,
        `I'm a hopeless romantic, always searching for that 'special someone'.`,
        `Nobody stays angry at me or around me for long, since I can defuse any amount of tension.`,
        `I love a good insult, even one directed at me.`,
        `I get bitter if I'm not the center of attention.`,
        `I'll settle for nothing less than perfection.`,
        `I change my mood or my mind as quickly as I change key in a song.`,
      ],
      ideal: [
        `Beauty. When I perform, I make the world better than it was. (Good)`,
        `Tradition. The stories, legends, and songs of the past must never be forgotten. (Lawful)`,
        `Creativity. The world is in need of new ideas and bold action. (Chaotic)`,
        `Greed. I'm only in it for the money and fame. (Evil)`,
        `People. I like seeing the smiles on people's faces when I perform. That's all that matters. (Neutral)`,
        `Honesty. Art should reflect the soul; it should come from within and reveal who we really are. (Any)`,
      ],
      bond: [
        `My instrument is my most treasured possession, and it reminds me of someone I love.`,
        `Someone stole my precious instrument, and someday I'll get it back.`,
        `I want to be famous, whatever it takes.`,
        `I idolize a hero of the old tales and measure my deeds against that person's.`,
        `I will do anything to prove myself superior to me hated rival.`,
        `I would do anything for the other members of my old troupe.`,
      ],
      flaw: [
        `I'll do anything to win fame and renown.`,
        `I'm a sucker for a pretty face.`,
        `A scandal prevents me from ever going home again. That kind of trouble seems to follow me around.`,
        `I once satirized a noble who still wants my head. It was a mistake that I will likely repeat.`,
        `I have trouble keeping my true feelings hidden. My sharp tongue lands me in trouble.`,
        `Despite my best efforts, I am unreliable to my friends.`,
      ],
      equipment: `A musical instrument (one of your choice), the favor of an admirer (love letter, lock o f hair, or trinket), a costume, and a belt pouch containing 15 gp`,
      routine: [
        `Actor`,
        `Dancer`,
        `Fire-Eater`,
        `Jester`,
        `Juggler`,
        `Instrumentalist`,
        `poet`,
        `Singer`,
        `Storyteller`,
        `Tumbler`,
      ],
    },
  ],
  [
    `Folk Hero`,
    {
      skills: [`Animal Handling`, `Survival`],
      tools: [`Artisan's Tools`, `Vehicles (Land)`],
      languages: 0,
      personality: [
        `I judge people by their actions, not their words.`,
        `If someone is in trouble, I'm always willing to lend help.`,
        `When I set my mind to something, I follow through no matter what gets in my way.`,
        `I have a strong sense of fair play and always try to find the most equitable solution to arguments.`,
        `I'm confident in my own abilities and do what I can to instill confidence in others.`,
        `Thinking is for other people. I prefer action.`,
        `I misuse long words in an attempt to sound smarter.`,
        `I get bored easily. When am I going to get on with my destiny.`,
      ],
      ideal: [
        `Respect. People deserve to be treated with dignity and respect. (Good)`,
        `Fairness. No one should get preferential treatment before the law, and no one is above the law. (Lawful)`,
        `Freedom. Tyrants must not be allowed to oppress the people. (Chaotic)`,
        `Might. If I become strong, I can take what I want--what I deserve. (Evil)`,
        `Sincerity. There's no good pretending to be something I'm not. (Neutral)`,
        `Destiny. Nothing and no one can steer me away from my higher calling. (Any)`,
      ],
      bond: [
        `I have a family, but I have no idea where they are. One day, I hope to see them again.`,
        `I worked the land, I love the land, and I will protect the land.`,
        `A proud noble once gave me a horrible beating, and I will take my revenge on any bully I encounter.`,
        `My tools are symbols of my past life, and I carry them so that I will never forget my roots.`,
        `I protect those who cannot protect themselves.`,
        `I wish my childhood sweetheart had come with me to pursue my destiny.`,
      ],
      flaw: [
        `The tyrant who rules my land will stop at nothing to see me killed.`,
        `I'm convinced of the significance of my destiny, and blind to my shortcomings and the risk of failure.`,
        `The people who knew me when I was young know my shameful secret, so I can never go home again.`,
        `I have a weakness for the vices of the city, especially hard drink.`,
        `Secretly, I believe that things would be better if I were a tyrant lording over the land.`,
        `I have trouble trusting in my allies.`,
      ],
      equipment: `A set of artisan’s tools (one of your choice), a shovel, an iron pot, a set of common clothes, and a belt pouch containing 10 gp`,
      definingEvent: [
        `I stood up to a tyrant’s agents.`,
        `I saved people during a natural disaster.`,
        `I stood alone against a terrible monster.`,
        `I stole from a corrupt merchant to help the poor.`,
        `I led a militia to fight off an invading army.`,
        `I broke into a tyrant’s castle and stole weapons to arm the people.`,
        `I trained the peasantry to use farm implements as weapons against a tyrant’s soldiers.`,
        ` A lord rescinded an unpopular decree after I led a symbolic act of protect against it.`,
        `A celestial, fey, or similar creature gave me a blessing or revealed my secret origin.`,
        `Recruited into a lord’s army, I rose to leadership and was commended for my heroism.`,
      ],
    },
  ],
  [
    `Guild Artisan`,
    {
      skills: [`Insight`, `Persuasion`],
      tools: [`Artisan's Tools`],
      languages: 1,
      personality: [
        `I believe that everything worth doing is worth doing right. I can't help it--I'm a perfectionist.`,
        `I'm a snob who looks down on those who can't appreciate fine art.`,
        `I always want to know how things work and what makes people tick.`,
        `I'm full of witty aphorisms and have a proverb for every occasion.`,
        `I'm rude to people who lack my commitment to hard work and fair play.`,
        `I like to talk at length about my profession.`,
        `I don't part with my money easily and will haggle tirelessly to get the best deal possible.`,
        `I'm well known for my work, and I want to make sure everyone appreciates it. I'm always taken aback when people haven't heard of me.`,
      ],
      ideal: [
        `Community. It is the duty of all civilized people to strengthen the bonds of community and the security of civilization. (Lawful)`,
        `Generosity. My talents were given to me so that I could use them to benefit the world. (Good)`,
        `Freedom. Everyone should be free to pursue his or her livelihood. (Chaotic)`,
        `Greed. I'm only in it for the money. (Evil)`,
        `People. I'm committed to the people I care about, not to ideals. (Neutral)`,
        `Aspiration. I work hard to be the best there is at my craft. (Any)`,
      ],
      bond: [
        `The workshop where I learned my trade is the most important place in the world to me.`,
        `I created a great work for someone, and then found them unworthy to receive it. I'm still looking for someone worthy.`,
        `I owe my guild a great debt for forging me into the person I am today.`,
        `I pursue wealth to secure someone's love.`,
        `One day I will return to my guild and prove that I am the greatest artisan of them all.`,
        `I will get revenge on the evil forces that destroyed my place of business and ruined my livelihood.`,
      ],
      flaw: [
        `I'll do anything to get my hands on something rare or priceless.`,
        `I'm quick to assume that someone is trying to cheat me.`,
        `No one must ever learn that I once stole money from guild coffers.`,
        `I'm never satisfied with what I have--I always want more.`,
        `I would kill to acquire a noble title.`,
        `I'm horribly jealous of anyone who outshines my handiwork. Everywhere I go, I'm surrounded by rivals.`,
      ],
      equipment: `A set o f artisan’s tools (one of your choice), a letter of introduction from your guild, a set of traveler’s clothes, and a belt pouch containing 15 gp`,
      guildBusiness: [
        `Alchemists and apothecaries`,
        `Armorers, locksmiths, and finesmiths`,
        `Brewers, distillers, and vintners`,
        `Calligraphers, scribes, and scriveners`,
        `Carpenters, roofers, and plasterers`,
        `Cartographers, surveyors, and chart-makers`,
        `Cobblers and shoemakers`,
        `Cooks and bakers`,
        `Glassblowers and glaziers`,
        `Jewelers and gemcutters`,
        `Leatherworkers, skinners, and tanners`,
        `Masons and stonecutters`,
        `Painters, limners, and sign-makers`,
        `Potters and tile-makers`,
        `Shipwrights and sailmakers`,
        `Smiths and metal-forgers`,
        `Tinkers, pewterers, and casters`,
        `Wagon-makers and wheelwrights`,
        `Weavers and dyers`,
        `Woodcarvers, coopers, and bowyers`,
      ],
    },
  ],
  [
    `Hermit`,
    {
      skills: [`Medicine`, `Religion`],
      tools: [`Herbalism Kit`],
      languages: 1,
      personality: [
        `I've been isolated for so long that I rarely speak, preferring gestures and the occasional grunt.`,
        `I am utterly serene, even in the face of disaster.`,
        `The leader of my community has something wise to say on every topic, and I am eager to share that wisdom.`,
        `I feel tremendous empathy for all who suffer.`,
        `I'm oblivious to etiquette and social expectations.`,
        `I connect everything that happens to me to a grand cosmic plan.`,
        `I often get lost in my own thoughts and contemplations, becoming oblivious to my surroundings.`,
        `I am working on a grand philosophical theory and love sharing my ideas.`,
      ],
      ideal: [
        `Greater Good. My gifts are meant to be shared with all, not used for my own benefit. (Good)`,
        `Logic. Emotions must not cloud our sense of what is right and true, or our logical thinking. (Lawful)`,
        `Free Thinking. Inquiry and curiosity are the pillars of progress. (Chaotic)`,
        `Power. Solitude and contemplation are paths toward mystical or magical power. (Evil)`,
        `Live and Let Live. Meddling in the affairs of others only causes trouble. (Neutral)`,
        `Self-Knowledge. If you know yourself, there're nothing left to know. (Any)`,
      ],
      bond: [
        `Nothing is more important than the other members of my hermitage, order, or association.`,
        `I entered seclusion to hide from the ones who might still be hunting me. I must someday confront them`,
        `I'm still seeking the enlightenment I pursued in my seclusion, and it still eludes me.`,
        `I entered seclusion because I loved someone I could not have.`,
        `Should my discovery come to light, it could bring ruin to the world.`,
        `My isolation gave me great insight into a great evil that only I can destroy.`,
      ],
      flaw: [
        `Now that I've returned to the world, I enjoy its delights a little too much.`,
        `I harbor dark bloodthirsty thoughts that my isolation failed to quell.`,
        `I am dogmatic in my thoughts and philosophy.`,
        `I let my need to win arguments overshadow friendships and harmony.`,
        `I'd risk too much to uncover a lost bit of knowledge.`,
        `I like keeping secrets and won't share them with anyone.`,
      ],
      equipment: `A scroll case stuffed full of notes from your studies or prayers, a winter blanket, a set of common clothes, an herbalism kit, and 5 gp`,
      lifeOfSeclusion: [
        `I was searching for spiritual enlightenment.`,
        `I was partaking of communal living in accordance with the dictates of a religious order.`,
        `I was exiled for a crime I didn’t commit.`,
        `I retreated from society after a life-altering event.`,
        `I needed a quiet place to work on my art, literature, music, or manifesto.`,
        `I needed to commune with nature, far from civilization.`,
        `I was the caretaker of an ancient ruin or relic.`,
        `I was a pilgrim in search of a person, place, or relic of spiritual significance`,
      ],
    },
  ],
  [
    `Noble`,
    {
      skills: [`History`, `Persuasion`],
      tools: [`Gaming Set`],
      languages: 1,
      personality: [
        `My eloquent flattery makes everyone I talk to feel like the most wonderful and important person in the world.`,
        `The common folk love me for my kindness and generosity.`,
        `No one could doubt by looking at my regal bearing that I am a cut above the unwashed masses.`,
        `I take great pains to always look my best and follow the latest fashions.`,
        `I don't like to get my hands dirty, and I won't be caught dead in unsuitable accommodations.`,
        `Despite my birth, I do not place myself above other folk. We all have the same blood.`,
        `My favor, once lost, is lost forever.`,
        `If you do me an injury, I will crush you, ruin your name, and salt your fields.`,
      ],
      ideal: [
        `Respect. Respect is due to me because of my position, but all people regardless of station deserve to be treated with dignity. (Good)`,
        `Responsibility. It is my duty to respect the authority of those above me, just as those below me must respect mine. (Lawful)`,
        `Independence. I must prove that I can handle myself without the coddling of my family. (Chaotic)`,
        `Power. If I can attain more power, no one will tell me what to do. (Evil)`,
        `Family. Blood runs thicker than water. (Any)`,
        `Noble Obligation. It is my duty to protect and care for the people beneath me. (Good)`,
      ],
      bond: [
        `I will face any challenge to win the approval of my family.`,
        `My house's alliance with another noble family must be sustained at all costs.`,
        `Nothing is more important that the other members of my family.`,
        `I am in love with the heir of a family that my family despises.`,
        `My loyalty to my sovereign is unwavering.`,
        `The common folk must see me as a hero of the people.`,
      ],
      flaw: [
        `I secretly believe that everyone is beneath me.`,
        `I hide a truly scandalous secret that could ruin my family forever.`,
        `I too often hear veiled insults and threats in every word addressed to me, and I'm quick to anger.`,
        `I have an insatiable desire for carnal pleasures.`,
        `In fact, the world does revolve around me.`,
        `By my words and actions, I often bring shame to my family.`,
      ],
      equipment: `A set of fine clothes, a signet ring, a scroll of pedigree, and a purse containing 25 gp`,
    },
  ],
  [
    `Outlander`,
    {
      skills: [`Athletics`, `Survival`],
      tools: [`Musical Instrument`],
      languages: 1,
      personality: [
        `I'm driven by a wanderlust that led me away from home.`,
        `I watch over my friends as if they were a litter of newborn pups.`,
        `I once ran twenty-five miles without stopping to warn my clan of an approaching orc horde. I'd do it again if I had to.`,
        `I have a lesson for every situation, drawn from observing nature.`,
        `I place no stock in wealthy or well-mannered folk. Money and manners won't save you from a hungry owlbear.`,
        `I'm always picking things up, absently fiddling with them, and sometimes accidentally breaking them.`,
        `I feel far more comfortable around animals than people.`,
        `I was, in fact, raised by wolves.`,
      ],
      ideal: [
        `Change. Life is like the seasons, in constant change, and we must change with it. (Chaotic)`,
        `Greater Good. It is each person's responsibility to make the most happiness for the whole tribe. (Good)`,
        `Honor. If I dishonor myself, I dishonor my whole clan. (Lawful)`,
        `Might. The strongest are meant to rule. (Evil)`,
        `Nature. The natural world is more important than all the constructs of civilization. (Neutral)`,
        `Glory. I must earn glory in battle, for myself and my clan. (Any)`,
      ],
      bond: [
        `My family, clan, or tribe is the most important thing in my life, even when they are far from me.`,
        `An injury to the unspoiled wilderness of my home is an injury to me.`,
        `I will bring terrible wrath down on the evildoers who destroyed my homeland.`,
        `I am the last of my tribe, and it is up to me to ensure their names enter legend.`,
        `I suffer awful visions of a coming disaster and will do anything to prevent it.`,
        `It is my duty to provide children to sustain my tribe.`,
      ],
      flaw: [
        `I am too enamored of ale, wine, and other intoxicants.`,
        `There's no room for caution in a life lived to the fullest.`,
        `I remember every insult I've received and nurse a silent resentment toward anyone who's ever wronged me.`,
        `I am slow to trust members of other races.`,
        `Violence is my answer to almost any challenge.`,
        `Don't expect me to save those who can't save themselves. It is nature's way that the strong thrive and the weak perish.`,
      ],
      equipment: `A staff, a hunting trap, a trophy from an animal you killed, a set of traveler’s clothes, and a belt pouch containing 10 gp`,
      origin: [
        `Forester`,
        `Trapper`,
        `Homesteader`,
        `Guide`,
        `Exile or Outcast`,
        `Bounty Hunter`,
        `Pilgrim`,
        `Tribal Nomad`,
        `Hunter-Gatherer`,
        `Tribal Marauder`,
      ],
    },
  ],
  [
    `Sage`,
    {
      skills: [`Arcana`, `History`],
      tools: [],
      languages: 2,
      personality: [
        `I use polysyllabic words to convey the impression of great erudition.`,
        `I've read every book in the world's greatest libraries--or like to boast that I have.`,
        `I'm used to helping out those who aren't as smart as I am, and I patiently explain anything and everything to others.`,
        `There's nothing I like more than a good mystery.`,
        `I'm willing to listen to every side of an argument before I make my own judgment.`,
        `I...speak...slowly...when talking...to idiots...which...almost...everyone...is...compared...to me.`,
        `I am horribly, horribly awkward in social situations.`,
        `I'm convinced that people are always trying to steal my secrets.`,
      ],
      ideal: [
        `Knowledge. The path to power and self-improvement is through knowledge. (Neutral)`,
        `Beauty. What is beautiful points us beyond itself toward what is true. (Good)`,
        `Logic. Emotions must not cloud our logical thinking. (Lawful)`,
        `No Limits. Nothing should fetter the infinite possibility inherent in all existence. (Chaotic)`,
        `Power. Knowledge is the path to power and domination. (Evil)`,
        `Self-improvement. The goal of a life of study is the betterment of oneself. (Any)`,
      ],
      bond: [
        `It is my duty to protect my students.`,
        `I have an ancient text that holds terrible secrets that must not fall into the wrong hands.`,
        `I work to preserve a library, university, scriptorium, or monastery.`,
        `My life's work is a series of tomes related to a specific field of lore.`,
        `I've been searching my whole life for the answer to a certain question.`,
        `I sold my soul for knowledge. I hope to do great deeds and win it back.`,
      ],
      flaw: [
        `I am easily distracted by the promise of information.`,
        `Most people scream and run when they see a demon. I stop and take notes on its anatomy.`,
        `Unlocking an ancient mystery is worth the price of a civilization.`,
        `I overlook obvious solutions in favor of complicated ones.`,
        `I speak without really thinking through my words, invariably insulting others.`,
        `I can't keep a secret to save my life, or anyone else's.`,
      ],
      equipment: `: A bottle of black ink, a quill, a small knife, a letter from a dead colleague posing a question you have not yet been able to answer, a set of common clothes, and a belt pouch containing 10 gp`,
      specialty: [
        `Alchemist`,
        `Astronomer`,
        `Discredited Academic`,
        `Librarian`,
        `Professor`,
        `Researcher`,
        `Wizard's Apprentice`,
        `Scribe`,
      ],
    },
  ],
  [
    `Sailor`,
    {
      skills: [`Athletics`, `Perception`],
      tools: [`Navigator's Tools`, `Vehicles (Water)`],
      languages: 0,
      personality: [
        ` My friends know they can rely on me, no matter what.`,
        `I work hard so that I can play hard when the work is done.`,
        `I enjoy sailing into new ports and making new friends over a flagon of ale.`,
        `I stretch the truth for the sake of a good story.`,
        `To me, a tavern brawl is a nice way to get to know a new city.`,
        `I never pass up a friendly wager.`,
        `My language is as foul as an otyugh nest.`,
        `I like a job well done, especially if I can convince someone else to do it.`,
      ],
      ideal: [
        `Respect. The thing that keeps a ship together is mutual respect between captain and crew. (Good)`,
        `Fairness. We all do the work, so we all share in the rewards. (Lawful)`,
        `Freedom. The sea is freedom--the freedom to go anywhere and do anything. (Chaotic)`,
        `Master. I'm a predator, and the other ships on the sea are my prey. (Evil)`,
        `People. I'm committed to my crewmates, not to ideals. (Neutral)`,
        `Aspiration. Someday I'll own my own ship and chart my own destiny. (Any)`,
      ],
      bond: [
        `I'm loyal to my captain first, everything else second.`,
        `The ship is most important--crewmates and captains come and go.`,
        `I'll always remember my first ship.`,
        `In a harbor town, I have a paramour whose eyes nearly stole me from the sea.`,
        `I was cheated of my fair share of the profits, and I want to get my due.`,
        `Ruthless pirates murdered my captain and crewmates, plundered our ship, and left me to die. Vengeance will be mine.`,
      ],
      flaw: [
        `I follow orders, even if I think they're wrong.`,
        `I'll say anything to avoid having to do extra work.`,
        `Once someone questions my courage, I never back down no matter how dangerous the situation.`,
        `Once I start drinking, it's hard for me to stop.`,
        `I can't help but pocket loose coins and other trinkets I come across.`,
        `My pride will probably lead to my destruction.`,
      ],
      equipment: `A belaying pin (club), 50 feet of silk rope, a lucky charm such as a rabbit foot or a small stone with a hole in the center (or you may roll for a random trinket on the Trinkets table in chapter 5), a set of common clothes, and a belt pouch containing 10 gp`,
    },
  ],
  [
    `Soldier`,
    {
      skills: [`Athletics`, `Intimidation`],
      tools: [`Gaming Set`, `Vehicles (Land)`],
      languages: 0,
      personality: [
        `I'm always polite and respectful.`,
        `I'm haunted by memories of war. I can't get the images of violence out of my mind.`,
        `I've lost too many friends, and I'm slow to make new ones.`,
        `I'm full of inspiring and cautionary tales from my military experience relevant to almost every combat situation.`,
        `I can stare down a hellhound without flinching.`,
        `I enjoy being strong and like breaking things.`,
        `I have a crude sense of humor.`,
        `I face problems head-on. A simple direct solution is the best path to success.`,
      ],
      ideal: [
        `Greater Good. Our lot is to lay down our lives in defense of others. (Good)`,
        `Responsibility. I do what I must and obey just authority. (Lawful)`,
        `Independence. When people follow orders blindly they embrace a kind of tyranny. (Chaotic)`,
        `Might. In life as in war, the stronger force wins. (Evil)`,
        `Ideals aren't worth killing for or going to war for. (Neutral)`,
        `Nation. My city, nation, or people are all that matter. (Any)`,
      ],
      bond: [
        `I would lay down my life for the people I served with.`,
        `Someone saved my life on the battlefield. To this day, I will never leave a friend behind.`,
        `My honor is my life.`,
        `I'll never forget the crushing defeat my company suffered or the enemies who dealt it.`,
        `Those who fight beside me are those worth dying for.`,
        `I fight for those who cannot fight for themselves.`,
      ],
      flaw: [
        `The monstrous enemy we faced in battle still leaves me quivering with fear.`,
        `I have little respect for anyone who is not a proven warrior.`,
        `I made a terrible mistake in battle that cost many lives--and I would do anything to keep that mistake secret.`,
        `My hatred of my enemies is blind and unreasoning.`,
        `I obey the law, even if the law causes misery.`,
        `I'd rather eat my armor than admit when I'm wrong.`,
      ],
      equipment: `An insignia of rank, a trophy taken from a fallen enemy (a dagger, broken blade, or piece of a banner), a set of bone dice or deck of cards, a set of common clothes, and a belt pouch containing 10 gp`,
      specialty: [
        `Officer`,
        `Scout`,
        `Infantry`,
        `Cavalry`,
        `Healer`,
        `Quartermaster`,
        `Standard Bearer`,
        `Support Staff (cook, blacksmith, or the like)`,
      ],
    },
  ],
  [
    `Urchin`,
    {
      skills: [`Sleight of Hand`, `Stealth`],
      tools: [`Disguise Kit`, `Thieves' Tools`],
      languages: 0,
      personality: [
        `I hide scraps of food and trinkets away in my pockets.`,
        `I ask a lot of questions.`,
        `I like to squeeze into small places where no one else can get to me.`,
        `I sleep with my back to a wall or tree, with everything I own wrapped in a bundle in my arms.`,
        `I eat like a pig and have bad manners.`,
        `I think anyone who's nice to me is hiding evil intent.`,
        `I don't like to bathe.`,
        `I bluntly say what other people are hinting or hiding.`,
      ],
      ideal: [
        `Respect. All people, rich or poor, deserve respect. (Good)`,
        `Community. We have to take care of each other, because no one else is going to do it. (Lawful)`,
        `Change. The low are lifted up, and the high and mighty are brought down. Change is the nature of things. (Chaotic)`,
        `Retribution. The rich need to be shown what life and death are like in the gutters. (Evil)`,
        `People. I help people who help me--that's what keeps us alive. (Neutral)`,
        `Aspiration. I'm going to prove that I'm worthy of a better life. (Any)`,
      ],
      bond: [
        `My town or city is my home, and I'll fight to defend it.`,
        `I sponsor an orphanage to keep others from enduring what I was forced to endure.`,
        `I owe my survival to another urchin who taught me to live on the streets.`,
        `I owe a debt I can never repay to the person who took pity on me.`,
        `I escaped my life of poverty by robbing an important person, and I'm wanted for it.`,
        `No one else is going to have to endure the hardships I've been through.`,
      ],
      flaw: [
        `If I'm outnumbered, I always run away from a fight.`,
        `Gold seems like a lot of money to me, and I'll do just about anything for more of it.`,
        `I will never fully trust anyone other than myself.`,
        `I'd rather kill someone in their sleep than fight fair.`,
        `It's not stealing if I need it more than someone else.`,
        `People who don't take care of themselves get what they deserve.`,
      ],
      equipment: `A small knife, a map of the city you grew up in, a pet mouse, a token to remember your parents by, a set of common clothes, and a belt pouch containing 10 gp`,
    },
  ],
]);
const gamingSets = [
  `Dice Set`,
  `Dragonchess Set`,
  `Playing Card Set`,
  `Three-Dragon Ante Set`,
];
const artisansTools = [
  `Alchemist’s Supplies`,
  `Brewer’s Supplies`,
  `Calligrapher's Supplies `,
  `Carpenter’s Tools`,
  `Cartographer’s Tools`,
  `Cobbler’s Tools`,
  `Cook’s Utensils`,
  `Glassblower’s Tools`,
  `Jeweler’s Tools`,
  `Leatherworker’s Tools`,
  `Mason’s Tools`,
  `Painter’s Supplies`,
  `Potter’s Tools`,
  `Smith’s Tools`,
  `Tinker’s Tools`,
  `Weaver’s Tools `,
  `Woodcarver's Tools`,
];
const musicalInstruments = [
  `Bagpipes`,
  `Drum`,
  `Dulcimer`,
  `Flute`,
  `Lute`,
  `Lyre`,
  `Horn`,
  `Pan Flute`,
  `Shawm`,
  `Viol`,
];
const languages = [
  `Common`,
  `Dwarvish`,
  `Elvish`,
  `Giant`,
  `Gnomish`,
  `Goblin`,
  `Halfling`,
  `Orc`,
];
// Origins Tables
const parentsHalfElf = new Map([
  [5, `One parent was an elf and the other was a human.`],
  [6, `One parent was an elf and the other was a half-elf.`],
  [7, `One parent was a human and the other was a half-elf.`],
  [8, `Both parents were half-elves.`],
]);
const parentsHalfOrc = new Map([
  [3, `One parent was an orc and the other was a human.`],
  [5, `One parent was an orc and the other was a half-orc.`],
  [7, `One parent was a human and the other was a half-orc.`],
  [8, `Both parents were half-orcs.`],
]);
const parentsTiefling = new Map([
  [
    4,
    `Both parents were humans, their infernal heritage dormant until you came along.`,
  ],
  [6, `One parent was a tiefling and the other was a human.`],
  [7, `One parent was a tiefling and the other was a devil.`],
  [8, `One parent was a human and the other was a devil.`],
]);
const parentsOther = new Map([
  [95, `You know who your parents are or were.`],
  [100, `You do not know who your parents are or were.`],
]);
const birthplaces = new Map([
  [50, `Home`],
  [55, `Home of a family friend.`],
  [63, `Home of a healer or midwife`],
  [65, `Carriage, cart or wagon`],
  [68, `Barn, shed, or other outbuilding`],
  [70, `Cave`],
  [72, `Field`],
  [74, `Forest`],
  [77, `Temple`],
  [80, `Alley or street`],
  [82, `Brothel, tavern or inn`],
  [84, `Castle, keep, tower, or palace`],
  [85, `Sewer or rubbish heap`],
  [88, `Among people of a different race`],
  [91, `On board a boat or ship`],
  [93, `In a prison, or in the headquarters of a secret organisation`],
  [95, `In a sage's laboratory`],
  [96, `In the Feywild`],
  [97, `In the Shadowfell`],
  [98, `On the Astral or Ethereal Plane`],
  [99, `On an Inner Plane of your choice`],
  [100, `On an Outer Plane of your choice`],
]);
const familyOptions = new Map([
  [1, `None`],
  [2, `Institution, such as an asylum`],
  [3, `Temple`],
  [5, `Orphanage`],
  [7, `Guardian`],
  [
    15,
    `Paternal or maternal aunt, uncle, or both: or extended family such as a tribe or clan`,
  ],
  [25, `Paternal or maternal grandparent(s)`],
  [35, `Adoptive family (same or different race)`],
  [55, `Single father or stepfather`],
  [75, `Single mother or stepmother`],
  [100, `Mother and father`],
]);
const absentParent = [
  `Your parent(s) died`,
  `Your parent(s) was/were imprisoned, enslaved, or otherwise taken away.`,
  `Your parent(s) abandoned you.`,
  `Your parent(s) disapeared to an unknown fate`,
];
const familyLifestyle = new Map([
  [1, [`Wretched`, -40]],
  [3, [`Squalid`, -20]],
  [6, [`Poor`, -10]],
  [10, [`Modest`, 0]],
  [13, [`Comfortable`, 10]],
  [15, [`Wealthy`, 20]],
  [16, [`Aristocratic`, 40]],
]);
const childhoodHome = new Map([
  [0, `On the streets`],
  [20, `In a run-down shack`],
  [30, `No permanent residence; you moved around a lot`],
  [40, `Encampment or village in the wilderness`],
  [50, `Apartment in a run down neighbourhood`],
  [70, `Small house`],
  [90, `Large house`],
  [110, `Mansion`],
  [140, `Palace or castle`],
]);
// Supplemental Tables
const d100Alignments = new Map([
  [3, `Chaotic Evil`],
  [6, `Chaotic Neutral`],
  [10, `Lawful Evil`],
  [16, `Neutral Evil`],
  [24, `Neutral`],
  [30, `Neutral Good`],
  [32, `Lawful Good`],
  [34, `Lawful Neutral`],
  [35, `Chaotic Good`],
  [36, `Chaotic Neutral`],
]);
const causesOfDeath = [
  `Unknown`,
  `Murdred`,
  `Killed in battle`,
  `Accident related to class or occupation`,
  `Natural cause`,
  `Natural causes`,
  `Apparent suicide`,
  `Torn apart by a wild animal or a natural disaster`,
  `Consumed by a  monster`,
  `Executted for a crime or tortured to death`,
  `Bizzare event, such as being hit by a meteorite, struck down by an angry god, or killed by a hatching Slaad egg`,
];
const d100Classes = new Map([
  [7, `Barbarian`],
  [14, `Bard`],
  [29, `Cleric`],
  [36, `Druid`],
  [52, `Fighter`],
  [58, `Monk`],
  [64, `Paladin`],
  [70, `Ranger`],
  [84, `Rogue`],
  [89, `Sorcerer`],
  [94, `Warlock`],
  [100, `Wizard`],
]);
const d100Occupations = new Map([
  [5, `Academic`],
  [10, `Adventurer`],
  [11, `Aristocrat`],
  [26, `Artisan or Guild Member`],
  [31, `Criminal`],
  [36, `Entertainer`],
  [38, `Exile, Hermit, or Refugee`],
  [43, `Explorer or Wanderer`],
  [55, `Farmer or Herder`],
  [60, `Hunter or Trapper`],
  [75, `Labourer`],
  [80, `Merchant`],
  [85, `Politician or Beurocrat`],
  [90, `Priest`],
  [95, `Sailor`],
  [100, `Soldier`],
]);
const d100Races = new Map([
  [40, `Human`],
  [50, `Dwarf`],
  [60, `Elf`],
  [70, `Halfling`],
  [75, `Dragonborn`],
  [80, `Gnome`],
  [85, `Half-Elf`],
  [90, `Half-Orc`],
  [95, `Tiefling`],
  [100, `DM's Choice`],
]);
const relationships = new Map([
  [4, `Hostile`],
  [10, `Friendly`],
  [12, `Indifferent`],
]);
const statuses = new Map([
  [1, `Dead`],
  [3, `Missing or unknown`],
  [6, `Alive, but doing poorly`],
  [10, `Alive and well`],
  [13, `Alive and quite successful`],
  [15, `Alive and infamous`],
  [16, `Alive and famous`],
]);
// Class Tables
const classGrid = [
  // High Strength
  [
    `Error: Strength`,
    `Fighter`, // Low Dexterity
    `Paladin`, // Low Constitution
    `Barbarian`, // Low Intelligence
    `Brbarian`, // Low Wisdom
    `Fighter`, // Low Charisma
  ],
  // High Dexterity
  [
    `Ranger`, // Low Strength
    `Error: Dexterity`,
    `Rogue`, // Low Constitution
    `Monk`, // Low Intelligence
    `Rogue`, // Low Wisdom
    `Fighter`, // Low Charisma
  ],
  // High Constitution
  [
    `Ranger`, // Low Strength
    `Fighter`, // Low Dexterity
    `Error: Constitution`,
    `Barbarian`, // Low Intelligence
    `Sorcerer`, // Low Wisdom
    `Paladin`, // Low Charisma
  ],
  // High Intelligence
  [
    `Rogue`, // Low Strength
    `Druid`, // Low Dexterity
    `Wizard`, // Low Constitution
    `Error: Intelligence`,
    `Warlock`, // Low Wisdom
    `Wizard`, // Low Charisma
  ],
  // High Wisdom
  [
    `Druid`, // Low Strength
    `Cleric`, // Low Dexterity
    `Monk`, // Low Constitution
    `Cleric`, // Low Intelligence
    `Error: Wisdom`,
    `Druid`, // Low Charisma
  ],
  // High Charisma
  [
    `Warlock`, // Low Strength
    `Sorcerer`, // Low Dexterity
    `Bard`, // Low Constitution
    `Paladin`, // Low Intelligence
    `Bard`, // Low Wisdom
    `Error: Charisma`,
  ],
];
const classes = new Map([
  [
    `Barbarian`,
    {
      hitpoints: 12,
      armour: [`light`, `medium`, `shields`],
      weapons: [`simple`, `martial`],
      tools: [],
      savingThrows: [`Strength`, `Constitution`],
      numSkills: 2,
      skills: [
        `Animal Handling`,
        `Athletics`,
        `Intimidation`,
        `Nature`,
        `Perception`,
        `Survival`,
      ],
      equipment: [
        `Greataxe or any martial melee weapon`,
        `two Handaxes or any simple weapon`,
        `Explorer's Pack`,
        `four Javelins`,
      ],
    },
  ],
  [
    `Bard`,
    {
      hitpoints: 8,
      armour: [`light`],
      weapons: [
        `simple`,
        `hand crossbows`,
        `longswords`,
        `rapiers`,
        `shortswords`,
      ],
      tools: [`Musical Instrument`, `Musical Instrument`, `Musical Instrument`],
      savingThrows: [`Dexterity`, `Charisma`],
      numSkills: 3,
      skills: [
        `Acrobatics`,
        `Animal Handling`,
        `Arcana`,
        `Athletics`,
        `Deception`,
        `History`,
        `Insight`,
        `Intimidation`,
        `Investigation`,
        `Medicine`,
        `Nature`,
        `Perception`,
        `Performance`,
        `Persuasion`,
        `Religion`,
        `Sleight of Hand`,
        `Stealth`,
        `Survival`,
      ],
      equipment: [
        `Rapier, Longsword or any simple weapon`,
        `Diplomat's Pack or Explorer's Pack`,
        `Lute or any Musical Instrument`,
        `Leather Armour`,
        `Dagger`,
      ],
    },
  ],
  [
    `Cleric`,
    {
      hitpoints: 8,
      armour: [`light`, `medium`, `shields`],
      weapons: [`simple`],
      tools: [],
      savingThrows: [`Wisdom`, `Charisma`],
      numSkills: 2,
      skills: [`History`, `Insight`, `Medicine`, `Persuasion`, `Religion`],
      equipment: [
        `Mace or Warhammer (if proficient)`,
        `scale mail or leather armour or chain mail (if proficient)`,
        `Light crossbow and 20 bolts or any simple weapon`,
        `Priest's Pack or Explorer's Pack`,
        `Shield`,
        `Holy Symbol`,
      ],
    },
  ],
  [
    `Druid`,
    {
      hitpoints: 8,
      armour: [`light`, `medium`, `shields`],
      weapons: [
        `clubs`,
        `daggers`,
        `darts`,
        `maces`,
        `quaterstaves`,
        `scimitars`,
        `sickles`,
        `slings`,
        `spears`,
      ],
      tools: [`Herbalism Kit`],
      savingThrows: [`Intelligence`, `Wisdom`],
      numSkills: 2,
      skills: [
        `Arcana`,
        `Animal Handling`,
        `Insight`,
        `Medicine`,
        `Nature`,
        `Perception`,
        `Religion`,
        `Survival`,
      ],
      equipment: [
        `Wooden Shield or any simple weapon`,
        `Scimitar or any simple melee weapon`,
        `Leather Armour`,
        `Explorer's Pack`,
        `Druidic Focus`,
      ],
    },
  ],
  [
    `Fighter`,
    {
      hitpoints: 10,
      armour: [`light`, `medium`, `heavy`, `shields`],
      weapons: [`simple`, `martial`],
      tools: [],
      savingThrows: [`Strength`, `Constitution`],
      numSkills: 2,
      skills: [
        `Acrobatics`,
        `Animal Handling`,
        `Athletics`,
        `History`,
        `Insight`,
        `Intimidation`,
        `Perception`,
        `Survival`,
      ],
      equipment: [
        `Chainmail or Leather Armour, a Longbow, and 20 arrows`,
        `Light Crossbow and 20 Bolts or two Handaxes`,
        `Dungeoneer's Pack or Explorer's Pack`,
      ],
    },
  ],
  [
    `Monk`,
    {
      hitpoints: 8,
      armour: [],
      weapons: [`simple`, `shortswords`],
      tools: [`Artisan's Tools or Musical Instrument`],
      savingThrows: [`Strength`, `Dexterity`],
      numSkills: 2,
      skills: [
        `Acrobatics`,
        `Athletics`,
        `History`,
        `Insight`,
        `Religion`,
        `Stealth`,
      ],
      equipment: [
        `Shortsword or any simple weapon`,
        `Dungeoneer's Pack or Explorer's Pack`,
        `ten Darts`,
      ],
    },
  ],
  [
    `Paladin`,
    {
      hitpoints: 10,
      armour: [`light`, `medium`, `heavy`, `shields`],
      weapons: [`simple`, `martial`],
      tools: [],
      savingThrows: [`Wisdom`, `Charisma`],
      numSkills: 2,
      skills: [
        `Athletics`,
        `Insight`,
        `Intimidation`,
        `Medicine`,
        `Persuasion`,
        `Religion`,
      ],
      equipment: [
        `any martial weapon and a shield or any two martial weapons`,
        `five Javelins or any simple melee weapon`,
        `Priest's Pack or Explorer's Pack`,
        `Chain Mail`,
        `Holy Symbol`,
      ],
    },
  ],
  [
    `Ranger`,
    {
      hitpoints: 10,
      armour: [`light`, `medium`, `shields`],
      weapons: [`simple`, `martial`],
      tools: [],
      savingThrows: [`Strength`, `Dexterity`],
      numSkills: 3,
      skills: [
        `Animal Handling`,
        `Athletics`,
        `Insight`,
        `Investigation`,
        `Nature`,
        `Perception`,
        `Stealth`,
        `Survival`,
      ],
      equipment: [
        `Scale Mail or Leather Armour`,
        `two Shortswords or two simple melee weapons`,
        `Dungeoneer's Pack or Explorer's Pack`,
        `Longbow, quiver and 20 Arrows`,
      ],
    },
  ],
  [
    `Rogue`,
    {
      hitpoints: 8,
      armour: [`light`],
      weapons: [
        `simple`,
        `hand crossbows`,
        `longswords`,
        `rapiers`,
        `shortswords`,
      ],
      tools: [`Thieves' Tools`],
      savingThrows: [`Dexterity`, `Intelligence`],
      numSkills: 4,
      skills: [
        `Acrobatics`,
        `Athletics`,
        `Deception`,
        `Insight`,
        `Intimidation`,
        `Investigation`,
        `Perception`,
        `Performance`,
        `Persuasion`,
        `Sleight of Hand`,
        `Stealth`,
      ],
      equipment: [
        `Rapier or Shortsword`,
        `Shortbow, Quiver and 20 Arrows or Shortsword`,
        `Burglar's Pack or Dungeoneer's Pack or Explorer's Pack`,
        `Leather Armour`,
        `two Daggers`,
        `Thieves' Tools`,
      ],
    },
  ],
  [
    `Sorcerer`,
    {
      hitpoints: 6,
      armour: [],
      weapons: [
        `daggers`,
        `darts`,
        `light crossbows`,
        `quaterstaves`,
        `slings`,
      ],
      tools: [],
      savingThrows: [`Constitution`, `Charisma`],
      numSkills: 2,
      skills: [
        `Arcana`,
        `Deception`,
        `Insight`,
        `Intimidation`,
        `Persuasion`,
        `Religion`,
      ],
      equipment: [
        `Light Crossbow and 20 Bolts or any simple weapon`,
        `Component Pouch or Arcane Focus`,
        `Dungeoneer's Pack or Explorer's Pack`,
        `two Daggers`,
      ],
    },
  ],
  [
    `Warlock`,
    {
      hitpoints: 8,
      armour: [`light`],
      weapons: [`simple`],
      tools: [],
      savingThrows: [`Wisdom`, `Charisma`],
      numSkills: 2,
      skills: [
        `Arcana`,
        `Deception`,
        `History`,
        `Intimidation`,
        `Investigation`,
        `Nature`,
        `Religion`,
      ],
      equipment: [
        `Light Crossbow and 20 Bolts or any simple weapon`,
        `Component Pouch or Arcane Focus`,
        `Scholar's Pack or Dungeoneer's Pack`,
        `Leather Armour`,
        `any simple weapon`,
        `two Daggers`,
      ],
    },
  ],
  [
    `Wizard`,
    {
      hitpoints: 6,
      armour: [],
      weapons: [
        `daggers`,
        `darts`,
        `light crossbows`,
        `quaterstaves`,
        `slings`,
      ],
      tools: [],
      savingThrows: [`Intelligence`, `Wisdom`],
      numSkills: 2,
      skills: [
        `Arcana`,
        `History`,
        `Insight`,
        `Investigation`,
        `Medicine`,
        `Religion`,
      ],
      equipment: [
        `Quaterstaff or Dagger`,
        `Component Pouch or Arcane Focus`,
        `Scholar's Pack or Explorer's Pack`,
        `Spellbook`,
      ],
    },
  ],
]);
